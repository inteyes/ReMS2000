<?xml version="1.0" encoding="UTF-8"?>

<panel name="ReMS2000" panelShowDialogs="1" panelMessageTime="10000"
       panelAuthorName="inteyes" panelAuthorEmail="inteyes.music@gmail.com"
       panelAuthorUrl="https://soundcloud.com/inteyes" panelAuthorDesc=""
       panelVersionMajor="1" panelVersionMinor="3" panelVersionName="Stellar Sky"
       panelVendor="Korg" panelDevice="MS2000" panelMidiSnapshotAfterLoad="0"
       panelMidiSnapshotAfterProgramChange="0" panelMidiSnapshotDelay="10"
       panelMidiSnapshotShowProgress="0" panelMidiInputChannelDevice="0"
       panelMidiInputDevice="-- None" panelMidiControllerChannelDevice="1"
       panelMidiControllerDevice="-- None" panelMidiOutputChannelDevice="1"
       panelMidiOutputDevice="-- None" panelMidiInputFromHost="0" panelMidiInputChannelHost="1"
       panelMidiOutputToHost="0" panelMidiOutputChannelHost="1" panelMidiThruH2H="0"
       panelMidiThruH2HChannelize="0" panelMidiThruH2D="1" panelMidiThruH2DChannelize="0"
       panelMidiThruD2D="0" panelMidiThruD2DChannelize="0" panelMidiThruD2H="0"
       panelMidiThruD2HChannelize="0" panelMidiRealtimeIgnore="1" panelMidiInputThreadPriority="7"
       panelMidiProgram="0" panelMidiBankLsb="0" panelMidiBankMsb="0"
       panelMidiSendProgramChangeOnLoad="0" panelMidiProgramCalloutOnprogramChange="0"
       panelMidiMatchCacheSize="32" panelMidiGlobalDelay="0" panelMidiPauseOut="0"
       panelMidiPauseIn="0" panelOSCEnabled="0" panelOSCPort="-1" panelOSCProtocol="0"
       luaPanelMidiChannelChanged="-- None" luaPanelMidiReceived="inputMIDIParser"
       luaPanelMidiMultiReceived="-- None" luaPanelLoaded="finalStartupOperations"
       luaPanelBeforeLoad="startupSequence" luaPanelSaved="-- None"
       luaPanelResourcesLoaded="-- None" luaPanelProgramChanged="-- None"
       luaPanelGlobalChanged="-- None" luaPanelMessageHandler="-- None"
       luaPanelModulatorValueChanged="-- None" luaPanelSaveState="saveStateOperations"
       luaPanelRestoreState="loadStateOperations" luaPanelMidiSnapshotPost="-- None"
       luaPanelMidiSnapshotPre="-- None" luaAudioProcessBlock="-- None"
       luaPanelOSCReceived="-- None" panelFilePath="E:\FL Studio\CtrlrPanels\ReMS2000\ReMS2000.panel"
       panelUID="8.CDA410105YE" panelInstanceUID="sa1x" panelInstanceManufacturerID="VPfv"
       panelModulatorListColumns="&lt;TABLELAYOUT sortedCol=&quot;612&quot; sortForwards=&quot;1&quot;&gt;&lt;COLUMN id=&quot;612&quot; visible=&quot;1&quot; width=&quot;132&quot;/&gt;&lt;COLUMN id=&quot;1&quot; visible=&quot;1&quot; width=&quot;114&quot;/&gt;&lt;COLUMN id=&quot;613&quot; visible=&quot;1&quot; width=&quot;132&quot;/&gt;&lt;COLUMN id=&quot;123&quot; visible=&quot;1&quot; width=&quot;124&quot;/&gt;&lt;COLUMN id=&quot;127&quot; visible=&quot;1&quot; width=&quot;105&quot;/&gt;&lt;COLUMN id=&quot;128&quot; visible=&quot;1&quot; width=&quot;97&quot;/&gt;&lt;COLUMN id=&quot;135&quot; visible=&quot;1&quot; width=&quot;114&quot;/&gt;&lt;COLUMN id=&quot;555&quot; visible=&quot;1&quot; width=&quot;69&quot;/&gt;&lt;COLUMN id=&quot;552&quot; visible=&quot;1&quot; width=&quot;55&quot;/&gt;&lt;COLUMN id=&quot;556&quot; visible=&quot;1&quot; width=&quot;110&quot;/&gt;&lt;COLUMN id=&quot;18&quot; visible=&quot;1&quot; width=&quot;123&quot;/&gt;&lt;COLUMN id=&quot;321&quot; visible=&quot;1&quot; width=&quot;105&quot;/&gt;&lt;COLUMN id=&quot;221&quot; visible=&quot;1&quot; width=&quot;72&quot;/&gt;&lt;COLUMN id=&quot;283&quot; visible=&quot;1&quot; width=&quot;147&quot;/&gt;&lt;COLUMN id=&quot;308&quot; visible=&quot;1&quot; width=&quot;112&quot;/&gt;&lt;/TABLELAYOUT&gt;"
       panelModulatorListCsvDelimiter="," panelModulatorListXmlRoot="ctrlrModulatorList"
       panelModulatorListXmlModulator="ctrlrModulator" panelModulatorListSortOption="1"
       panelGlobalVariables="0:0:0:0:0:0:0:0:0:-1:0:-1:0:-1:-1:-1:-1:0:-1:0:-1:-1:-1:-1:-1:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:0:-1:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:0:-1:-1:-1:-1:-1:-1"
       panelResources="-- None" panelPropertyDisplayIDs="0" ctrlrMenuItemBackgroundColour="ffffffff"
       ctrlrMenuItemTextColour="ff000000" ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemHighlightColour="ff334657" ctrlrMenuItemFont="&lt;Sans-Serif&gt;;17;0;0;0;0;1;3"
       ctrlrMenuItemSeparatorColour="44000000" ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuBarBackgroundColour1="fff7f7f7" ctrlrMenuBarBackgroundColour2="ffcccccc"
       ctrlrMenuBarTextColour="ff000000" ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarHighlightColour="ff334657" ctrlrMenuBarFont="&lt;Sans-Serif&gt;;17;0;0;0;0;1;3"
       ctrlrUseEditorWrapper="0" panelIndex="0" uiPanelModulatorListViewTree="0">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="346 174 1419 798">
      <uiChildWindowContentState luaMethodEditorBgColour="ffffffff" luaMethodEditorFont="&lt;Monospaced&gt;;13;0;0;0;0;1;3"
                                 luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;0&quot;&gt;&#13;&#10;  &lt;OPEN id=&quot;Panel Methods&quot;&gt;&#13;&#10;    &lt;OPEN id=&quot;Information&quot;/&gt;&#13;&#10;  &lt;/OPEN&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;0d8189a3b40f49bd964d77196b4811e9"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LayerEditor" uiChildWindowState="630 182 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="ModulatorList" uiChildWindowState="18 502 1636 608">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaConsole" uiChildWindowState="560 275 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="MIDILibrary" uiChildWindowState="560 275 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="MIDISettings" uiChildWindowState="560 275 538 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary uuid="f77773c6213b491b8cb7180c82eeb39e" luaTransInfo="-- None"
               midiLibraryParameterIndexProperty="modulatorCustomIndex" midiLibraryMidiProgramChangeControl="0"
               midiLibrarySendSnapAfterPChg="0" midiLibraryDefaultBankName="New Bank - %H:%M:%S"
               midiLibraryDefaultProgramName="New Program - %H:%M:%S" midiLibraryDefaultSnapshotName="Snapshot - %H:%M:%S"
               midiLibraryCustomRequests="">
    <midiLibrarySnapshots name="Snapshots"/>
    <midiLibraryFirmware name="Firmware"/>
    <midiLibraryEditBuffer name="Edit buffer"/>
    <midiLibraryTransactions name="Transactions"/>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="Built-In" uuid="5a9567a6de8f41778b7f7bcaf320462a">
        <luaMethod luaMethodName="table_dump" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print table contents&#13;&#10;--&#13;&#10;function table_dump(table)&#13;&#10;&#9;for key,value in ipairs(table) do&#13;&#10;&#9;&#9;_DBG (&quot;KEY= [&quot;..key..&quot;]&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (type(value) == &quot;table&quot;) then&#13;&#10;&#9;&#9;&#9;table_dump(value)&#13;&#10;&#9;&#9;elseif (type(value) == &quot;nil&quot;) then&#13;&#10;&#9;&#9;&#9;_DBG (&quot; = NIL&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;what (value)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000001"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="what" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print methods for an object&#13;&#10;--&#13;&#10;function what(o)&#13;&#10;&#9;info = class_info(o)&#13;&#10;&#9;if info ~= nil then&#13;&#10;&#9;&#9;ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;&#13;&#10;&#13;&#10;&#9;&#9;if info.name == &quot;table&quot; then&#13;&#10;&#9;&#9;&#9;table_dump(o)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;for k, v in pairs(info.methods) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n\nAttributes:\n&quot;&#13;&#10;&#9;&#9;for k, v in pairs(info.attributes) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;console (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000002"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="how" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print all available classes&#13;&#10;--&#13;&#10;function how()&#13;&#10;&#9;ret = &quot;Available classes:\n&quot;&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;for i,v in ipairs(class_names()) do&#13;&#10;&#9;&#9;ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;&#13;&#10;&#9;end&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;console (J(ret))&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000003"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="json4lua" luaMethodCode="-----------------------------------------------------------------------------&#13;&#10;-- JSON4Lua: JSON encoding / decoding support for the Lua language.&#13;&#10;-- json Module.&#13;&#10;-- Author: Craig Mason-Jones&#13;&#10;-- Homepage: http://json.luaforge.net/&#13;&#10;-- Version: 0.9.40&#13;&#10;-- This module is released under the MIT License (MIT).&#13;&#10;-- Please see LICENCE.txt for details.&#13;&#10;--&#13;&#10;-- USAGE:&#13;&#10;-- This module exposes two functions:&#13;&#10;--   encode(o)&#13;&#10;--     Returns the table / string / boolean / number / nil / json.null value as a JSON-encoded string.&#13;&#10;--   decode(json_string)&#13;&#10;--     Returns a Lua object populated with the data encoded in the JSON string json_string.&#13;&#10;--&#13;&#10;-- REQUIREMENTS:&#13;&#10;--   compat-5.1 if using Lua 5.0&#13;&#10;--&#13;&#10;-- CHANGELOG&#13;&#10;--   0.9.20 Introduction of local Lua functions for private functions (removed _ function prefix). &#13;&#10;--          Fixed Lua 5.1 compatibility issues.&#13;&#10;--   &#9;&#9;Introduced json.null to have null values in associative arrays.&#13;&#10;--          encode() performance improvement (more than 50%) through table.concat rather than ..&#13;&#10;--          Introduced decode ability to ignore /**/ comments in the JSON string.&#13;&#10;--   0.9.10 Fix to array encoding / decoding to correctly manage nil/null values in arrays.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Imports and dependencies&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;local math = require('math')&#13;&#10;local string = require(&quot;string&quot;)&#13;&#10;local table = require(&quot;table&quot;)&#13;&#10;&#13;&#10;local base = _G&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Module declaration&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;module(&quot;json&quot;)&#13;&#10;&#13;&#10;-- Public functions&#13;&#10;&#13;&#10;-- Private functions&#13;&#10;local decode_scanArray&#13;&#10;local decode_scanComment&#13;&#10;local decode_scanConstant&#13;&#10;local decode_scanNumber&#13;&#10;local decode_scanObject&#13;&#10;local decode_scanString&#13;&#10;local decode_scanWhitespace&#13;&#10;local encodeString&#13;&#10;local isArray&#13;&#10;local isEncodable&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- PUBLIC FUNCTIONS&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;--- Encodes an arbitrary Lua object / variable.&#13;&#10;-- @param v The Lua object / variable to be JSON encoded.&#13;&#10;-- @return String containing the JSON encoding in internal Lua string format (i.e. not unicode)&#13;&#10;function encode (v)&#13;&#10;  -- Handle nil values&#13;&#10;  if v==nil then&#13;&#10;    return &quot;null&quot;&#13;&#10;  end&#13;&#10;  &#13;&#10;  local vtype = base.type(v)  &#13;&#10;&#13;&#10;  -- Handle strings&#13;&#10;  if vtype=='string' then    &#13;&#10;    return '&quot;' .. encodeString(v) .. '&quot;'&#9;    -- Need to handle encoding in string&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle booleans&#13;&#10;  if vtype=='number' or vtype=='boolean' then&#13;&#10;    return base.tostring(v)&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle tables&#13;&#10;  if vtype=='table' then&#13;&#10;    local rval = {}&#13;&#10;    -- Consider arrays separately&#13;&#10;    local bArray, maxCount = isArray(v)&#13;&#10;    if bArray then&#13;&#10;      for i = 1,maxCount do&#13;&#10;        table.insert(rval, encode(v[i]))&#13;&#10;      end&#13;&#10;    else&#9;-- An object, not an array&#13;&#10;      for i,j in base.pairs(v) do&#13;&#10;        if isEncodable(i) and isEncodable(j) then&#13;&#10;          table.insert(rval, '&quot;' .. encodeString(i) .. '&quot;:' .. encode(j))&#13;&#10;        end&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if bArray then&#13;&#10;      return '[' .. table.concat(rval,',') ..']'&#13;&#10;    else&#13;&#10;      return '{' .. table.concat(rval,',') .. '}'&#13;&#10;    end&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle null values&#13;&#10;  if vtype=='function' and v==null then&#13;&#10;    return 'null'&#13;&#10;  end&#13;&#10;  &#13;&#10;  base.assert(false,'encode attempt to encode unsupported type ' .. vtype .. ':' .. base.tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;--- Decodes a JSON string and returns the decoded value as a Lua data structure / value.&#13;&#10;-- @param s The string to scan.&#13;&#10;-- @param [startPos] Optional starting position where the JSON string is located. Defaults to 1.&#13;&#10;-- @param Lua object, number The object that was scanned, as a Lua table / string / number / boolean or nil,&#13;&#10;-- and the position of the first character after&#13;&#10;-- the scanned JSON object.&#13;&#10;function decode(s, startPos)&#13;&#10;  startPos = startPos and startPos or 1&#13;&#10;  startPos = decode_scanWhitespace(s,startPos)&#13;&#10;  base.assert(startPos&lt;=string.len(s), 'Unterminated JSON encoded object found at position in [' .. s .. ']')&#13;&#10;  local curChar = string.sub(s,startPos,startPos)&#13;&#10;  -- Object&#13;&#10;  if curChar=='{' then&#13;&#10;    return decode_scanObject(s,startPos)&#13;&#10;  end&#13;&#10;  -- Array&#13;&#10;  if curChar=='[' then&#13;&#10;    return decode_scanArray(s,startPos)&#13;&#10;  end&#13;&#10;  -- Number&#13;&#10;  if string.find(&quot;+-0123456789.e&quot;, curChar, 1, true) then&#13;&#10;    return decode_scanNumber(s,startPos)&#13;&#10;  end&#13;&#10;  -- String&#13;&#10;  if curChar==[[&quot;]] or curChar==[[']] then&#13;&#10;    return decode_scanString(s,startPos)&#13;&#10;  end&#13;&#10;  if string.sub(s,startPos,startPos+1)=='/*' then&#13;&#10;    return decode(s, decode_scanComment(s,startPos))&#13;&#10;  end&#13;&#10;  -- Otherwise, it must be a constant&#13;&#10;  return decode_scanConstant(s,startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- The null function allows one to specify a null value in an associative array (which is otherwise&#13;&#10;-- discarded if you set the value with 'nil' in Lua. Simply set t = { first=json.null }&#13;&#10;function null()&#13;&#10;  return null -- so json.null() will also return null ;-)&#13;&#10;end&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Internal, PRIVATE functions.&#13;&#10;-- Following a Python-like convention, I have prefixed all these 'PRIVATE'&#13;&#10;-- functions with an underscore.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;--- Scans an array from JSON into a Lua object&#13;&#10;-- startPos begins at the start of the array.&#13;&#10;-- Returns the array and the next starting position&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position for the scan.&#13;&#10;-- @return table, int The scanned array as a table, and the position of the next character to scan.&#13;&#10;function decode_scanArray(s,startPos)&#13;&#10;  local array = {}&#9;-- The return value&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='[','decode_scanArray called but array does not start at position ' .. startPos .. ' in string:\n'..s )&#13;&#10;  startPos = startPos + 1&#13;&#10;  -- Infinite loop for array elements&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen,'JSON String ended unexpectedly scanning array.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar==']') then&#13;&#10;      return array, startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON String ended unexpectedly scanning array.')&#13;&#10;    object, startPos = decode(s,startPos)&#13;&#10;    table.insert(array,object)&#13;&#10;  until false&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a comment and discards the comment.&#13;&#10;-- Returns the position of the next character following the comment.&#13;&#10;-- @param string s The JSON string to scan.&#13;&#10;-- @param int startPos The starting position of the comment&#13;&#10;function decode_scanComment(s, startPos)&#13;&#10;  base.assert( string.sub(s,startPos,startPos+1)=='/*', &quot;decode_scanComment called but comment does not start at position &quot; .. startPos)&#13;&#10;  local endPos = string.find(s,'*/',startPos+2)&#13;&#10;  base.assert(endPos~=nil, &quot;Unterminated comment in string at &quot; .. startPos)&#13;&#10;  return endPos+2  &#13;&#10;end&#13;&#10;&#13;&#10;--- Scans for given constants: true, false or null&#13;&#10;-- Returns the appropriate Lua type, and the position of the next character to read.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position in the string at which to start scanning.&#13;&#10;-- @return object, int The object (true, false or nil) and the position at which the next character should be &#13;&#10;-- scanned.&#13;&#10;function decode_scanConstant(s, startPos)&#13;&#10;  local consts = { [&quot;true&quot;] = true, [&quot;false&quot;] = false, [&quot;null&quot;] = nil }&#13;&#10;  local constNames = {&quot;true&quot;,&quot;false&quot;,&quot;null&quot;}&#13;&#10;&#13;&#10;  for i,k in base.pairs(constNames) do&#13;&#10;    --print (&quot;[&quot; .. string.sub(s,startPos, startPos + string.len(k) -1) ..&quot;]&quot;, k)&#13;&#10;    if string.sub(s,startPos, startPos + string.len(k) -1 )==k then&#13;&#10;      return consts[k], startPos + string.len(k)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  base.assert(nil, 'Failed to scan constant from string ' .. s .. ' at starting position ' .. startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a number from the JSON encoded string.&#13;&#10;-- (in fact, also is able to scan numeric +- eqns, which is not&#13;&#10;-- in the JSON spec.)&#13;&#10;-- Returns the number, and the position of the next character&#13;&#10;-- after the number.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position at which to start scanning.&#13;&#10;-- @return number, int The extracted number and the position of the next character to scan.&#13;&#10;function decode_scanNumber(s,startPos)&#13;&#10;  local endPos = startPos+1&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local acceptableChars = &quot;+-0123456789.e&quot;&#13;&#10;  while (string.find(acceptableChars, string.sub(s,endPos,endPos), 1, true)&#13;&#10;&#9;and endPos&lt;=stringLen&#13;&#10;&#9;) do&#13;&#10;    endPos = endPos + 1&#13;&#10;  end&#13;&#10;  local stringValue = 'return ' .. string.sub(s,startPos, endPos-1)&#13;&#10;  local stringEval = base.loadstring(stringValue)&#13;&#10;  base.assert(stringEval, 'Failed to scan number [ ' .. stringValue .. '] in JSON string at position ' .. startPos .. ' : ' .. endPos)&#13;&#10;  return stringEval(), endPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON object into a Lua object.&#13;&#10;-- startPos begins at the start of the object.&#13;&#10;-- Returns the object and the next starting position.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return table, int The scanned object as a table and the position of the next character to scan.&#13;&#10;function decode_scanObject(s,startPos)&#13;&#10;  local object = {}&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local key, value&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='{','decode_scanObject called but object does not start at position ' .. startPos .. ' in string:\n' .. s)&#13;&#10;  startPos = startPos + 1&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly while scanning object.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar=='}') then&#13;&#10;      return object,startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly scanning object.')&#13;&#10;    -- Scan the key&#13;&#10;    key, startPos = decode(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    base.assert(string.sub(s,startPos,startPos)==':','JSON object key-value assignment mal-formed at ' .. startPos)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    value, startPos = decode(s,startPos)&#13;&#10;    object[key]=value&#13;&#10;  until false&#9;-- infinite loop while key-value pairs are found&#13;&#10;end&#13;&#10;&#13;&#10;-- START SoniEx2&#13;&#10;-- Initialize some things used by decode_scanString&#13;&#10;-- You know, for efficiency&#13;&#10;local escapeSequences = {&#13;&#10;  [&quot;\\t&quot;] = &quot;\t&quot;,&#13;&#10;  [&quot;\\f&quot;] = &quot;\f&quot;,&#13;&#10;  [&quot;\\r&quot;] = &quot;\r&quot;,&#13;&#10;  [&quot;\\n&quot;] = &quot;\n&quot;,&#13;&#10;  [&quot;\\b&quot;] = &quot;\b&quot;&#13;&#10;}&#13;&#10;base.setmetatable(escapeSequences, {__index = function(t,k)&#13;&#10;  -- skip &quot;\&quot; aka strip escape&#13;&#10;  return string.sub(k,2)&#13;&#10;end})&#13;&#10;-- END SoniEx2&#13;&#10;&#13;&#10;--- Scans a JSON string from the opening inverted comma or single quote to the&#13;&#10;-- end of the string.&#13;&#10;-- Returns the string extracted as a Lua string,&#13;&#10;-- and the position of the next non-string character&#13;&#10;-- (after the closing inverted comma or single quote).&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return string, int The extracted string as a Lua string, and the next character to parse.&#13;&#10;function decode_scanString(s,startPos)&#13;&#10;  base.assert(startPos, 'decode_scanString(..) called without start position')&#13;&#10;  local startChar = string.sub(s,startPos,startPos)&#13;&#10;  -- START SoniEx2&#13;&#10;  -- PS: I don't think single quotes are valid JSON&#13;&#10;  base.assert(startChar == [[&quot;]] or startChar == [[']],'decode_scanString called for a non-string')&#13;&#10;  --base.assert(startPos, &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; for string at position &quot; .. oldStart)&#13;&#10;  local t = {}&#13;&#10;  local i,j = startPos,startPos&#13;&#10;  while string.find(s, startChar, j+1) ~= j+1 do&#13;&#10;    local oldj = j&#13;&#10;    i,j = string.find(s, &quot;\\.&quot;, j+1)&#13;&#10;    local x,y = string.find(s, startChar, oldj+1)&#13;&#10;    if not i or x &lt; i then&#13;&#10;      base.print(s, startPos, string.sub(s,startPos,oldj))&#13;&#10;      i,j = x,y-1&#13;&#10;      if not x then base.print(s, startPos, string.sub(s,startPos,oldj)) end&#13;&#10;    end&#13;&#10;    table.insert(t, string.sub(s, oldj+1, i-1))&#13;&#10;    if string.sub(s, i, j) == &quot;\\u&quot; then&#13;&#10;      local a = string.sub(s,j+1,j+4)&#13;&#10;      j = j + 4&#13;&#10;      local n = base.tonumber(a, 16)&#13;&#10;      base.assert(n, &quot;String decoding failed: bad Unicode escape &quot; .. a .. &quot; at position &quot; .. i .. &quot; : &quot; .. j)&#13;&#10;      -- math.floor(x/2&#94;y) == lazy right shift&#13;&#10;      -- a % 2&#94;b == bitwise_and(a, (2&#94;b)-1)&#13;&#10;      -- 64 = 2&#94;6&#13;&#10;      -- 4096 = 2&#94;12 (or 2&#94;6 * 2&#94;6)&#13;&#10;      local x&#13;&#10;      if n &lt; 0x80 then&#13;&#10;        x = string.char(n % 0x80)&#13;&#10;      elseif n &lt; 0x800 then&#13;&#10;        -- [110x xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xC0 + (math.floor(n/64) % 0x20), 0x80 + (n % 0x40))&#13;&#10;      else&#13;&#10;        -- [1110 xxxx] [10xx xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xE0 + (math.floor(n/4096) % 0x10), 0x80 + (math.floor(n/64) % 0x40), 0x80 + (n % 0x40))&#13;&#10;      end&#13;&#10;      table.insert(t, x)&#13;&#10;    else&#13;&#10;      table.insert(t, escapeSequences[string.sub(s, i, j)])&#13;&#10;    end&#13;&#10;  end&#13;&#10;  table.insert(t,string.sub(j, j+1))&#13;&#10;  base.assert(string.find(s, startChar, j+1), &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; at position &quot; .. j .. &quot;(for string at position &quot; .. startPos .. &quot;)&quot;)&#13;&#10;  return table.concat(t,&quot;&quot;), j+2&#13;&#10;  -- END SoniEx2&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON string skipping all whitespace from the current start position.&#13;&#10;-- Returns the position of the first non-whitespace character, or nil if the whole end of string is reached.&#13;&#10;-- @param s The string being scanned&#13;&#10;-- @param startPos The starting position where we should begin removing whitespace.&#13;&#10;-- @return int The first position where non-whitespace was encountered, or string.len(s)+1 if the end of string&#13;&#10;-- was reached.&#13;&#10;function decode_scanWhitespace(s,startPos)&#13;&#10;  local whitespace=&quot; \n\r\t&quot;&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  while ( string.find(whitespace, string.sub(s,startPos,startPos), 1, true)  and startPos &lt;= stringLen) do&#13;&#10;    startPos = startPos + 1&#13;&#10;  end&#13;&#10;  return startPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Encodes a string to be JSON-compatible.&#13;&#10;-- This just involves back-quoting inverted commas, back-quotes and newlines, I think ;-)&#13;&#10;-- @param s The string to return as a JSON encoded (i.e. backquoted string)&#13;&#10;-- @return The string appropriately escaped.&#13;&#10;&#13;&#10;local escapeList = {&#13;&#10;    ['&quot;']  = '\\&quot;',&#13;&#10;    ['\\'] = '\\\\',&#13;&#10;    ['/']  = '\\/', &#13;&#10;    ['\b'] = '\\b',&#13;&#10;    ['\f'] = '\\f',&#13;&#10;    ['\n'] = '\\n',&#13;&#10;    ['\r'] = '\\r',&#13;&#10;    ['\t'] = '\\t'&#13;&#10;}&#13;&#10;&#13;&#10;function encodeString(s)&#13;&#10; return s:gsub(&quot;.&quot;, function(c) return escapeList[c] end) -- SoniEx2: 5.0 compat&#13;&#10;end&#13;&#10;&#13;&#10;-- Determines whether the given Lua type is an array or a table / dictionary.&#13;&#10;-- We consider any table an array if it has indexes 1..n for its n items, and no&#13;&#10;-- other data in the table.&#13;&#10;-- I think this method is currently a little 'flaky', but can't think of a good way around it yet...&#13;&#10;-- @param t The table to evaluate as an array&#13;&#10;-- @return boolean, number True if the table can be represented as an array, false otherwise. If true,&#13;&#10;-- the second returned value is the maximum&#13;&#10;-- number of indexed elements in the array. &#13;&#10;function isArray(t)&#13;&#10;  -- Next we count all the elements, ensuring that any non-indexed elements are not-encodable &#13;&#10;  -- (with the possible exception of 'n')&#13;&#10;  local maxIndex = 0&#13;&#10;  for k,v in base.pairs(t) do&#13;&#10;    if (base.type(k)=='number' and math.floor(k)==k and 1&lt;=k) then&#9;-- k,v is an indexed pair&#13;&#10;      if (not isEncodable(v)) then return false end&#9;-- All array elements must be encodable&#13;&#10;      maxIndex = math.max(maxIndex,k)&#13;&#10;    else&#13;&#10;      if (k=='n') then&#13;&#10;        if v ~= table.getn(t) then return false end  -- False if n does not hold the number of elements&#13;&#10;      else -- Else of (k=='n')&#13;&#10;        if isEncodable(v) then return false end&#13;&#10;      end  -- End of (k~='n')&#13;&#10;    end -- End of k,v not an indexed pair&#13;&#10;  end  -- End of loop across all pairs&#13;&#10;  return true, maxIndex&#13;&#10;end&#13;&#10;&#13;&#10;--- Determines whether the given Lua object / table / variable can be JSON encoded. The only&#13;&#10;-- types that are JSON encodable are: string, boolean, number, nil, table and json.null.&#13;&#10;-- In this implementation, all other types are ignored.&#13;&#10;-- @param o The object to examine.&#13;&#10;-- @return boolean True if the object should be JSON encoded, false if it should be ignored.&#13;&#10;function isEncodable(o)&#13;&#10;  local t = base.type(o)&#13;&#10;  return (t=='string' or t=='boolean' or t=='number' or t=='nil' or t=='table') or (t=='function' and o==null) &#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000004"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="debugger.lua" luaMethodCode="--{{{  history&#13;&#10;&#13;&#10;--15/03/06 DCN Created based on RemDebug&#13;&#10;--28/04/06 DCN Update for Lua 5.1&#13;&#10;--01/06/06 DCN Fix command argument parsing&#13;&#10;--             Add step/over N facility&#13;&#10;--             Add trace lines facility&#13;&#10;--05/06/06 DCN Add trace call/return facility&#13;&#10;--06/06/06 DCN Make it behave when stepping through the creation of a coroutine&#13;&#10;--06/06/06 DCN Integrate the simple debugger into the main one&#13;&#10;--07/06/06 DCN Provide facility to step into coroutines&#13;&#10;--13/06/06 DCN Fix bug that caused the function environment to get corrupted with the global one&#13;&#10;--14/06/06 DCN Allow 'sloppy' file names when setting breakpoints&#13;&#10;--04/08/06 DCN Allow for no space after command name&#13;&#10;--11/08/06 DCN Use io.write not print&#13;&#10;--30/08/06 DCN Allow access to array elements in 'dump'&#13;&#10;--10/10/06 DCN Default to breakfile for all commands that require a filename and give '-'&#13;&#10;--06/12/06 DCN Allow for punctuation characters in DUMP variable names&#13;&#10;--03/01/07 DCN Add pause on/off facility&#13;&#10;--19/06/07 DCN Allow for duff commands being typed in the debugger (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--             Allow for case sensitive file systems               (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--04/08/09 DCN Add optional line count param to pause&#13;&#10;--05/08/09 DCN Reset the debug hook in Pause() even if we think we're started&#13;&#10;--30/09/09 DCN Re-jig to not use co-routines (makes debugging co-routines awkward)&#13;&#10;--01/10/09 DCN Add ability to break on reaching any line in a file&#13;&#10;--24/07/13 TWW Added code for emulating setfenv/getfenv in Lua 5.2 as per&#13;&#10;--             http://lua-users.org/lists/lua-l/2010-06/msg00313.html&#13;&#10;--25/07/13 TWW Copied Alex Parrill's fix for errors when tracing back across a C frame&#13;&#10;--             (https://github.com/ColonelThirtyTwo/clidebugger, 26/01/12)&#13;&#10;--25/07/13 DCN Allow for windows and unix file name conventions in has_breakpoint&#13;&#10;--26/07/13 DCN Allow for \ being interpreted as an escape inside a [] pattern in 5.2&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  description&#13;&#10;&#13;&#10;--A simple command line debug system for Lua written by Dave Nichols of&#13;&#10;--Match-IT Limited. Its public domain software. Do with it as you wish.&#13;&#10;&#13;&#10;--This debugger was inspired by:&#13;&#10;-- RemDebug 1.0 Beta&#13;&#10;-- Copyright Kepler Project 2005 (http://www.keplerproject.org/remdebug)&#13;&#10;&#13;&#10;--Usage:&#13;&#10;--  require('debugger')        --load the debug library&#13;&#10;--  pause(message)             --start/resume a debug session&#13;&#10;&#13;&#10;--An assert() failure will also invoke the debugger.&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;local IsWindows = string.find(string.lower(os.getenv('OS') or ''),'&#94;windows')&#13;&#10;&#13;&#10;local coro_debugger&#13;&#10;local events = { BREAK = 1, WATCH = 2, STEP = 3, SET = 4 }&#13;&#10;breakpoints = {}&#13;&#10;local watches = {}&#13;&#10;local step_into   = false&#13;&#10;local step_over   = false&#13;&#10;local step_lines  = 0&#13;&#10;local step_level  = {main=0}&#13;&#10;local stack_level = {main=0}&#13;&#10;local trace_level = {main=0}&#13;&#10;local trace_calls = false&#13;&#10;local trace_returns = false&#13;&#10;local trace_lines = false&#13;&#10;local ret_file, ret_line, ret_name&#13;&#10;local current_thread = 'main'&#13;&#10;local started = false&#13;&#10;local pause_off = false&#13;&#10;local _g      = _G&#13;&#10;local cocreate, cowrap = coroutine.create, coroutine.wrap&#13;&#10;local pausemsg = 'pause'&#13;&#10;&#13;&#10;--{{{  make Lua 5.2 compatible&#13;&#10;&#13;&#10;if not setfenv then -- Lua 5.2&#13;&#10;  --[[&#13;&#10;  As far as I can see, the only missing detail of these functions (except&#13;&#10;  for occasional bugs) to achieve 100% compatibility is the case of&#13;&#10;  'getfenv' over a function that does not have an _ENV variable (that is,&#13;&#10;  it uses no globals).&#13;&#10;&#13;&#10;  We could use a weak table to keep the environments of these functions&#13;&#10;  when set by setfenv, but that still misses the case of a function&#13;&#10;  without _ENV that was not subjected to setfenv.&#13;&#10;&#13;&#10;  -- Roberto&#13;&#10;  ]]--&#13;&#10;&#13;&#10;  setfenv = setfenv or function(f, t)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    if name then&#13;&#10;      debug.upvaluejoin(f, up, function() return name end, 1) -- use unique upvalue&#13;&#10;      debug.setupvalue(f, up, t)&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  getfenv = getfenv or function(f)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name, val&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name, val = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    return val&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local hints -- command help&#13;&#10;--The format in here is name=summary|description&#13;&#10;local hints = {&#13;&#10;&#13;&#10;pause =   [[&#13;&#10;pause(msg[,lines][,force]) -- start/resume a debugger session|&#13;&#10;&#13;&#10;This can only be used in your code or from the console as a means to&#13;&#10;start/resume a debug session.&#13;&#10;If msg is given that is shown when the session starts/resumes. Useful to&#13;&#10;give a context if you've instrumented your code with pause() statements.&#13;&#10;&#13;&#10;If lines is given, the script pauses after that many lines, else it pauses&#13;&#10;immediately.&#13;&#10;&#13;&#10;If force is true, the pause function is honoured even if poff has been used.&#13;&#10;This is useful when in an interactive console session to regain debugger&#13;&#10;control.&#13;&#10;]],&#13;&#10;&#13;&#10;poff =    [[&#13;&#10;poff                -- turn off pause() command|&#13;&#10;&#13;&#10;This causes all pause() commands to be ignored. This is useful if you have&#13;&#10;instrumented your code in a busy loop and want to continue normal execution&#13;&#10;with no further interruption.&#13;&#10;]],&#13;&#10;&#13;&#10;pon =     [[&#13;&#10;pon                 -- turn on pause() command|&#13;&#10;&#13;&#10;This re-instates honouring the pause() commands you may have instrumented&#13;&#10;your code with.&#13;&#10;]],&#13;&#10;&#13;&#10;setb =    [[&#13;&#10;setb [line file]    -- set a breakpoint to line/file|, line 0 means 'any'&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is set at the file for the&#13;&#10;currently set level (see &quot;set&quot;). Execution pauses when this line is about&#13;&#10;to be executed and the debugger session is re-activated.&#13;&#10;&#13;&#10;The file can be given as the fully qualified name, partially qualified or&#13;&#10;just the file name. E.g. if file is set as &quot;myfile.lua&quot;, then whenever&#13;&#10;execution reaches any file that ends with &quot;myfile.lua&quot; it will pause. If&#13;&#10;no extension is given, any extension will do.&#13;&#10;&#13;&#10;If the line is given as 0, then reaching any line in the file will do.&#13;&#10;]],&#13;&#10;&#13;&#10;delb =    [[&#13;&#10;delb [line file]    -- removes a breakpoint|&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is removed for the file of the&#13;&#10;currently set level (see &quot;set&quot;).&#13;&#10;]],&#13;&#10;&#13;&#10;delallb = [[&#13;&#10;delallb             -- removes all breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;setw =    [[&#13;&#10;setw &lt;exp&gt;          -- adds a new watch expression|&#13;&#10;&#13;&#10;The expression is evaluated before each line is executed. If the expression&#13;&#10;yields true then execution is paused and the debugger session re-activated.&#13;&#10;The expression is executed in the context of the line about to be executed.&#13;&#10;]],&#13;&#10;&#13;&#10;delw =    [[&#13;&#10;delw &lt;index&gt;        -- removes the watch expression at index|&#13;&#10;&#13;&#10;The index is that returned when the watch expression was set by setw.&#13;&#10;]],&#13;&#10;&#13;&#10;delallw = [[&#13;&#10;delallw             -- removes all watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;run     = [[&#13;&#10;run                 -- run until next breakpoint or watch expression|&#13;&#10;]],&#13;&#10;&#13;&#10;step    = [[&#13;&#10;step [N]            -- run next N lines, stepping into function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;over    = [[&#13;&#10;over [N]            -- run next N lines, stepping over function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;out     = [[&#13;&#10;out [N]             -- run lines until stepped out of N functions|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;If you are inside a function, using &quot;out 1&quot; will run until you return&#13;&#10;from that function to the caller.&#13;&#10;]],&#13;&#10;&#13;&#10;gotoo   = [[&#13;&#10;gotoo [line file]    -- step to line in file|&#13;&#10;&#13;&#10;This is equivalent to 'setb line file', followed by 'run', followed&#13;&#10;by 'delb line file'.&#13;&#10;]],&#13;&#10;&#13;&#10;listb   = [[&#13;&#10;listb               -- lists breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;listw   = [[&#13;&#10;listw               -- lists watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;set     = [[&#13;&#10;set [level]         -- set context to stack level, omitted=show|&#13;&#10;&#13;&#10;If level is omitted it just prints the current level set.&#13;&#10;This sets the current context to the level given. This affects the&#13;&#10;context used for several other functions (e.g. vars). The possible&#13;&#10;levels are those shown by trace.&#13;&#10;]],&#13;&#10;&#13;&#10;vars    = [[&#13;&#10;vars [depth]        -- list context locals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all non-nil local variables and all non-nil upvalues in the&#13;&#10;currently set context. For variables that are tables, lists all fields&#13;&#10;to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;fenv    = [[&#13;&#10;fenv [depth]        -- list context function env to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all function environment variables in the currently set context.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;glob    = [[&#13;&#10;glob [depth]        -- list globals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all global variables.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;ups     = [[&#13;&#10;ups                 -- list all the upvalue names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;locs    = [[&#13;&#10;locs                -- list all the locals names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;dump    = [[&#13;&#10;dump &lt;var&gt; [depth]  -- dump all fields of variable to depth|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Prints the value of &lt;var&gt; in the currently set context level. If &lt;var&gt;&#13;&#10;is a table, lists all fields to the given depth. &lt;var&gt; can be just a&#13;&#10;name, or name.field or name.# to any depth, e.g. t.1.f accesses field&#13;&#10;'f' in array element 1 in table 't'.&#13;&#10;&#13;&#10;Can also be called from a script as dump(var,depth).&#13;&#10;]],&#13;&#10;&#13;&#10;tron    = [[&#13;&#10;tron [crl]          -- turn trace on for (c)alls, (r)etuns, (l)lines|&#13;&#10;&#13;&#10;If no parameter is given then tracing is turned off.&#13;&#10;When tracing is turned on a line is printed to the console for each&#13;&#10;debug 'event' selected. c=function calls, r=function returns, l=lines.&#13;&#10;]],&#13;&#10;&#13;&#10;trace   = [[&#13;&#10;trace               -- dumps a stack trace|&#13;&#10;&#13;&#10;Format is [level] = file,line,name&#13;&#10;The level is a candidate for use by the 'set' command.&#13;&#10;]],&#13;&#10;&#13;&#10;info    = [[&#13;&#10;info                -- dumps the complete debug info captured|&#13;&#10;&#13;&#10;Only useful as a diagnostic aid for the debugger itself. This information&#13;&#10;can be HUGE as it dumps all variables to the maximum depth, so be careful.&#13;&#10;]],&#13;&#10;&#13;&#10;show    = [[&#13;&#10;show line file X Y  -- show X lines before and Y after line in file|&#13;&#10;&#13;&#10;If line is omitted or is '-' then the current set context line is used.&#13;&#10;If file is omitted or is '-' then the current set context file is used.&#13;&#10;If file is not fully qualified and cannot be opened as specified, then&#13;&#10;a search for the file in the package[path] is performed using the usual&#13;&#10;&quot;require&quot; searching rules. If no file extension is given, .lua is used.&#13;&#10;Prints the lines from the source file around the given line.&#13;&#10;]],&#13;&#10;&#13;&#10;exit    = [[&#13;&#10;exit                -- exits debugger, re-start it using pause()|&#13;&#10;]],&#13;&#10;&#13;&#10;help    = [[&#13;&#10;help [command]      -- show this list or help for command|&#13;&#10;]],&#13;&#10;&#13;&#10;[&quot;&lt;statement&gt;&quot;] = [[&#13;&#10;&lt;statement&gt;         -- execute a statement in the current context|&#13;&#10;&#13;&#10;The statement can be anything that is legal in the context, including&#13;&#10;assignments. Such assignments affect the context and will be in force&#13;&#10;immediately. Any results returned are printed. Use '=' as a short-hand&#13;&#10;for 'return', e.g. &quot;=func(arg)&quot; will call 'func' with 'arg' and print&#13;&#10;the results, and &quot;=var&quot; will just print the value of 'var'.&#13;&#10;]],&#13;&#10;&#13;&#10;what    = [[&#13;&#10;what &lt;func&gt;         -- show where &lt;func&gt; is defined (if known)|&#13;&#10;]],&#13;&#10;&#13;&#10;}&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{ Local function to get table size&#13;&#10;local function tsize(t)&#13;&#10;    local count=0&#13;&#10;&#13;&#10;    for k,v in pairs(t) do&#13;&#10;        count = count + 1&#13;&#10;    end&#13;&#10;&#13;&#10;    return count&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;---{{{ Global utility function to set breakpoints, used inside Ctrlr&#13;&#10;function setBreakpoint(line, file, shouldBeSet)&#13;&#10;    if not breakpoints[line] then&#13;&#10;        breakpoints[line] = {}&#13;&#10;    end&#13;&#10;&#13;&#10;    if shouldBeSet then&#13;&#10;        breakpoints[line][file] = true&#13;&#10;    else&#13;&#10;        breakpoints[line] = nil&#13;&#10;    end&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;&#13;&#10;--{{{  local function getinfo(level,field)&#13;&#10;&#13;&#10;--like debug.getinfo but copes with no activation record at the given level&#13;&#10;--and knows how to get 'field'. 'field' can be the name of any of the&#13;&#10;--activation record fields or any of the 'what' names or nil for everything.&#13;&#10;--only valid when using the stack level to get info, not a function name.&#13;&#10;&#13;&#10;local function getinfo(level,field)&#13;&#10;  level = level + 1  --to get to the same relative level as the caller&#13;&#10;  if not field then return debug.getinfo(level) end&#13;&#10;  local what&#13;&#10;  if field == 'name' or field == 'namewhat' then&#13;&#10;    what = 'n'&#13;&#10;  elseif field == 'what' or field == 'source' or field == 'linedefined' or field == 'lastlinedefined' or field == 'short_src' then&#13;&#10;    what = 'S'&#13;&#10;  elseif field == 'currentline' then&#13;&#10;    what = 'l'&#13;&#10;  elseif field == 'nups' then&#13;&#10;    what = 'u'&#13;&#10;  elseif field == 'func' then&#13;&#10;    what = 'f'&#13;&#10;  else&#13;&#10;    return debug.getinfo(level,field)&#13;&#10;  end&#13;&#10;  local ar = debug.getinfo(level,what)&#13;&#10;  if ar then return ar[field] else return nil end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function indented( level, ... )&#13;&#10;&#13;&#10;local function indented( level, ... )&#13;&#10;  ctrlrDebugger:write( string.format (&quot;%s%s\n&quot;, string.rep('  ',level), table.concat({...}) ))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpval( level, name, value, limit )&#13;&#10;&#13;&#10;local dumpvisited&#13;&#10;&#13;&#10;local function dumpval( level, name, value, limit )&#13;&#10;    local index&#13;&#10;&#13;&#10;    if type(name) == 'number' then&#13;&#10;        index = string.format(&quot;%q,&quot;,name)&#13;&#10;    elseif type(name) == 'string' and (name == '__VARSLEVEL__' or name == '__ENVIRONMENT__' or name == '__GLOBALS__' or name == '__UPVALUES__' or name == '__LOCALS__') then&#13;&#10;        --ignore these, they are debugger generated&#13;&#10;        return&#13;&#10;    elseif type(name) == 'string' and string.find(name,'&#94;[_%a][_.%w]*$') then&#13;&#10;        index = string.format (&quot;%q: &quot;, name);&#13;&#10;    else&#13;&#10;        index = string.format (&quot;%q,&quot;, tostring(name))&#13;&#10;    end&#13;&#10;&#13;&#10;    if type(value) == 'table' then&#13;&#10;        if dumpvisited[value] then&#13;&#10;            indented (level, index, string.format(&quot;%q&quot;, dumpvisited[value]))&#13;&#10;        else&#13;&#10;            dumpvisited[value] = string.format (&quot;\&quot;table\&quot;: \&quot;%d\&quot;,&quot;, tsize (value))&#13;&#10;            if (limit or 0) &gt; 0 and level+1 &gt;= limit then&#13;&#10;                indented (level, index, string.format (&quot;{%s&quot;, string.gsub(dumpvisited[value], &quot;,&quot;, &quot;},&quot;)))&#13;&#10;            else&#13;&#10;                indented (level, index, &quot;{\n&quot;, dumpvisited[value])&#13;&#10;&#13;&#10;                for n,v in pairs(value) do&#13;&#10;                    dumpval (level+1, n, v, limit)&#13;&#10;                end&#13;&#10;&#13;&#10;                indented (level, &quot;}&quot;)&#13;&#10;            end&#13;&#10;        end&#13;&#10;    else&#13;&#10;        if type(value) == 'string' then&#13;&#10;            indented (level, index, string.format(&quot;{\&quot;string\&quot;: %q}&quot;,value), ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'userdata' then&#13;&#10;            info = class_info (value)&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;userdata\&quot;: %q}&quot;, info.name) , ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'number' then&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;number\&quot;: %q}&quot;,tostring(value)), ',')&#13;&#10;        end&#13;&#10;    end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpvar( value, limit, name )&#13;&#10;&#13;&#10;local function dumpvar( value, limit, name )&#13;&#10;  ctrlrDebugger:write (&quot;\n::start dumpvar\n&quot;)&#13;&#10;  dumpvisited = {}&#13;&#10;  dumpval( 0, name or tostring(value), value, limit )&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function show(file,line,before,after)&#13;&#10;&#13;&#10;--show +/-N lines of a file around line M&#13;&#10;&#13;&#10;local function show(file,line,before,after)&#13;&#10;&#13;&#10;  line   = tonumber(line   or 1)&#13;&#10;  before = tonumber(before or 10)&#13;&#10;  after  = tonumber(after  or before)&#13;&#10;&#13;&#10;  if not string.find(file,'%.') then file = file..'.lua' end&#13;&#10;&#13;&#10;  local f = io.open(file,'r')&#13;&#10;  if not f then&#13;&#10;    --{{{  try to find the file in the path&#13;&#10;&#13;&#10;    --&#13;&#10;    -- looks for a file in the package path&#13;&#10;    --&#13;&#10;    local path = package.path or LUA_PATH or ''&#13;&#10;    for c in string.gmatch (path, &quot;[&#94;;]+&quot;) do&#13;&#10;      local c = string.gsub (c, &quot;%?%.lua&quot;, file)&#13;&#10;      f = io.open (c,'r')&#13;&#10;      if f then&#13;&#10;        break&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    --}}}&#13;&#10;    if not f then&#13;&#10;      ctrlrDebugger:write('Cannot find '..file..'\n')&#13;&#10;      return&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  local i = 0&#13;&#10;  for l in f:lines() do&#13;&#10;    i = i + 1&#13;&#10;    if i &gt;= (line-before) then&#13;&#10;      if i &gt; (line+after) then break end&#13;&#10;      if i == line then&#13;&#10;        ctrlrDebugger:write(i..'***\t'..l..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(i..'\t'..l..'\n')&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  f:close()&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function tracestack(l)&#13;&#10;&#13;&#10;local function gi( i )&#13;&#10;  return function() i=i+1 return debug.getinfo(i),i end&#13;&#10;end&#13;&#10;&#13;&#10;local function gl( level, j )&#13;&#10;  return function() j=j+1 return debug.getlocal( level, j ) end&#13;&#10;end&#13;&#10;&#13;&#10;local function gu( func, k )&#13;&#10;  return function() k=k+1 return debug.getupvalue( func, k ) end&#13;&#10;end&#13;&#10;&#13;&#10;local  traceinfo&#13;&#10;&#13;&#10;local function tracestack(l)&#13;&#10;  local l = l + 1                        --NB: +1 to get level relative to caller&#13;&#10;  traceinfo = {}&#13;&#10;  traceinfo.pausemsg = pausemsg&#13;&#10;  for ar,i in gi(l) do&#13;&#10;    table.insert( traceinfo, ar )&#13;&#10;    if ar.what ~= 'C' then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gl(i,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.lnames  = names&#13;&#10;        ar.lvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if ar.func then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gu(ar.func,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.unames  = names&#13;&#10;        ar.uvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace()&#13;&#10;&#13;&#10;local function trace(set)&#13;&#10;  ctrlrDebugger:write (&quot;\n::start trace\n&quot;)&#13;&#10;  local mark&#13;&#10;  for level,ar in ipairs(traceinfo) do&#13;&#10;    if level == set then&#13;&#10;      mark = '***'&#13;&#10;    else&#13;&#10;      mark = ''&#13;&#10;    end&#13;&#10;    ctrlrDebugger:write('['..level..']'..mark..'\t'..(ar.name or ar.what)..' in '..ar.short_src..':'..ar.currentline..'\n')&#13;&#10;  end&#13;&#10;&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function info()&#13;&#10;&#13;&#10;local function info()&#13;&#10;    dumpvar( traceinfo, 0, 'traceinfo' )&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function set_breakpoint(file, line, once)&#13;&#10;&#13;&#10;local function set_breakpoint(file, line, once)&#13;&#10;  if not breakpoints[line] then&#13;&#10;    breakpoints[line] = {}&#13;&#10;  end&#13;&#10;  if once then&#13;&#10;    breakpoints[line][file] = 1&#13;&#10;  else&#13;&#10;    breakpoints[line][file] = true&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function remove_breakpoint(file, line)&#13;&#10;&#13;&#10;local function remove_breakpoint(file, line)&#13;&#10;  if breakpoints[line] then&#13;&#10;    breakpoints[line][file] = nil&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function has_breakpoint(file, line)&#13;&#10;&#13;&#10;--allow for 'sloppy' file names&#13;&#10;--search for file and all variations walking up its directory hierachy&#13;&#10;--ditto for the file with no extension&#13;&#10;--a breakpoint can be permenant or once only, if once only its removed&#13;&#10;--after detection here, these are used for temporary breakpoints in the&#13;&#10;--debugger loop when executing the 'gotoo' command&#13;&#10;--a breakpoint on line 0 of a file means any line in that file&#13;&#10;&#13;&#10;local function has_breakpoint(file, line)&#13;&#10;  local isLine = breakpoints[line]&#13;&#10;  local isZero = breakpoints[0]&#13;&#10;  if not isLine and not isZero then return false end&#13;&#10;  local noext = string.gsub(file,&quot;(%..-)$&quot;,'',1)&#13;&#10;  if noext == file then noext = nil end&#13;&#10;  while file do&#13;&#10;    if isLine and isLine[file] then&#13;&#10;      if isLine[file] == 1 then isLine[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[file] then&#13;&#10;      if isZero[file] == 1 then isZero[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      file = string.match(file,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      file = string.match(file,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  while noext do&#13;&#10;    if isLine and isLine[noext] then&#13;&#10;      if isLine[noext] == 1 then isLine[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[noext] then&#13;&#10;      if isZero[noext] == 1 then isZero[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      noext = string.match(noext,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      noext = string.match(noext,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  return false&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function capture_vars(ref,level,line)&#13;&#10;&#13;&#10;local function capture_vars(ref,level,line)&#13;&#10;  --get vars, file and line for the given level relative to debug_hook offset by ref&#13;&#10;&#13;&#10;  local lvl = ref + level                --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  --{{{  capture variables&#13;&#10;&#13;&#10;  local ar = debug.getinfo(lvl, &quot;f&quot;)&#13;&#10;  if not ar then return {},'?',0 end&#13;&#10;&#13;&#10;  local vars = {__UPVALUES__={}, __LOCALS__={}}&#13;&#10;  local i&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if string.sub(name,1,1) ~= '(' then  --NB: ignoring internal control variables&#13;&#10;        vars[name] = value&#13;&#10;        vars.__UPVALUES__[i] = name&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;    vars.__ENVIRONMENT__ = getfenv(func)&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__GLOBALS__ = getfenv(0)&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(lvl, i)&#13;&#10;    if not name then break end&#13;&#10;    if string.sub(name,1,1) ~= '(' then    --NB: ignoring internal control variables&#13;&#10;      vars[name] = value&#13;&#10;      vars.__LOCALS__[i] = name&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__VARSLEVEL__ = level&#13;&#10;&#13;&#10;  if func then&#13;&#10;    --NB: Do not do this until finished filling the vars table&#13;&#10;    setmetatable(vars, { __index = getfenv(func), __newindex = getfenv(func) })&#13;&#10;  end&#13;&#10;&#13;&#10;  --NB: Do not read or write the vars table anymore else the metatable functions will get invoked!&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  local file = getinfo(lvl, &quot;source&quot;)&#13;&#10;  if string.find(file, &quot;@&quot;) == 1 then&#13;&#10;    file = string.sub(file, 2)&#13;&#10;  end&#13;&#10;  if IsWindows then file = string.lower(file) end&#13;&#10;&#13;&#10;  if not line then&#13;&#10;    line = getinfo(lvl, &quot;currentline&quot;)&#13;&#10;  end&#13;&#10;&#13;&#10;  return vars,file,line&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;  if type(vars) ~= 'table' then return end&#13;&#10;&#13;&#10;  local level = vars.__VARSLEVEL__       --NB: This level is relative to debug_hook offset by ref&#13;&#10;  if not level then return end&#13;&#10;&#13;&#10;  level = level + ref                    --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  local i&#13;&#10;  local written_vars = {}&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(level, i)&#13;&#10;    if not name then break end&#13;&#10;    if vars[name] and string.sub(name,1,1) ~= '(' then     --NB: ignoring internal control variables&#13;&#10;      debug.setlocal(level, i, vars[name])&#13;&#10;      written_vars[name] = true&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  local ar = debug.getinfo(level, &quot;f&quot;)&#13;&#10;  if not ar then return end&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if vars[name] and string.sub(name,1,1) ~= '(' then   --NB: ignoring internal control variables&#13;&#10;        if not written_vars[name] then&#13;&#10;          debug.setupvalue(func, i, vars[name])&#13;&#10;        end&#13;&#10;        written_vars[name] = true&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace_event(event, line, level)&#13;&#10;&#13;&#10;local function print_trace(level,depth,event,file,line,name)&#13;&#10;&#13;&#10;  --NB: level here is relative to the caller of trace_event, so offset by 2 to get to there&#13;&#10;  level = level + 2&#13;&#10;&#13;&#10;  local file = file or getinfo(level,'short_src')&#13;&#10;  local line = line or getinfo(level,'currentline')&#13;&#10;  local name = name or getinfo(level,'name')&#13;&#10;&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;&#13;&#10;  ctrlrDebugger:write(prefix..&#13;&#10;           string.format('%08.2f:%02i.',os.clock(),depth)..&#13;&#10;           string.rep('.',depth%32)..&#13;&#10;           (file or '')..' ('..(line or '')..') '..&#13;&#10;           (name or '')..&#13;&#10;           ' ('..event..')\n')&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;local function trace_event(event, line, level)&#13;&#10;&#13;&#10;  if event == 'return' and trace_returns then&#13;&#10;    --note the line info for later&#13;&#10;    ret_file = getinfo(level+1,'short_src')&#13;&#10;    ret_line = getinfo(level+1,'currentline')&#13;&#10;    ret_name = getinfo(level+1,'name')&#13;&#10;  end&#13;&#10;&#13;&#10;  if event ~= 'line' then return end&#13;&#10;&#13;&#10;  local slevel = stack_level[current_thread]&#13;&#10;  local tlevel = trace_level[current_thread]&#13;&#10;&#13;&#10;  if trace_calls and slevel &gt; tlevel then&#13;&#10;    --we are now in the function called, so look back 1 level further to find the calling file and line&#13;&#10;    print_trace(level+1,slevel-1,'c',nil,nil,getinfo(level+1,'name'))&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_returns and slevel &lt; tlevel then&#13;&#10;    print_trace(level,slevel,'r',ret_file,ret_line,ret_name)&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_lines then&#13;&#10;    print_trace(level,slevel,'l')&#13;&#10;  end&#13;&#10;&#13;&#10;  trace_level[current_thread] = stack_level[current_thread]&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function report(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function report(ev, vars, file, line, idx_watch)&#13;&#10;  local vars = vars or {}&#13;&#10;  local file = file or '?'&#13;&#10;  local line = line or 0&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;  if ev == events.STEP then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')\n')&#13;&#10;  elseif ev == events.BREAK then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..') (breakpoint)\n')&#13;&#10;  elseif ev == events.WATCH then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')'..&quot; (watch expression &quot;..idx_watch.. &quot;: [&quot;..watches[idx_watch].exp..&quot;])\n&quot;)&#13;&#10;  elseif ev == events.SET then&#13;&#10;    --do nothing&#13;&#10;  else&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Error in application: &quot;..file..&quot; line &quot;..line..&quot;\n&quot;)&#13;&#10;  end&#13;&#10;  if ev ~= events.SET then&#13;&#10;    if pausemsg and pausemsg ~= '' then ctrlrDebugger:write('Message: '..pausemsg..'\n') end&#13;&#10;    pausemsg = ''&#13;&#10;  end&#13;&#10;  return vars, file, line&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;  local eval_env  = vars or {}&#13;&#10;  local breakfile = file or '?'&#13;&#10;  local breakline = line or 0&#13;&#10;&#13;&#10;  local command, args&#13;&#10;&#13;&#10;  --{{{  local function getargs(spec)&#13;&#10;&#13;&#10;  --get command arguments according to the given spec from the args string&#13;&#10;  --the spec has a single character for each argument, arguments are separated&#13;&#10;  --by white space, the spec characters can be one of:&#13;&#10;  -- F for a filename    (defaults to breakfile if - given in args)&#13;&#10;  -- L for a line number (defaults to breakline if - given in args)&#13;&#10;  -- N for a number&#13;&#10;  -- V for a variable name&#13;&#10;  -- S for a string&#13;&#10;&#13;&#10;  local function getargs(spec)&#13;&#10;    local res={}&#13;&#10;    local char,arg&#13;&#10;    local ptr=1&#13;&#10;    for i=1,string.len(spec) do&#13;&#10;      char = string.sub(spec,i,i)&#13;&#10;      if     char == 'F' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakfile end&#13;&#10;      elseif char == 'L' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakline end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'N' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '0' end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'V' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      elseif char == 'S' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      else&#13;&#10;        arg = ''&#13;&#10;      end&#13;&#10;      table.insert(res,arg or '')&#13;&#10;    end&#13;&#10;    return unpack(res)&#13;&#10;  end&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  while true do&#13;&#10;    -- io.write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    ctrlrDebugger:write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    -- local line = io.read(&quot;*line&quot;)&#13;&#10;    local line = ctrlrDebugger:read()&#13;&#10;    if line == nil then ctrlrDebugger:write('\n'); line = 'exit' end&#13;&#10;&#13;&#10;    if string.find(line, &quot;&#94;[a-z]+&quot;) then&#13;&#10;      command = string.sub(line, string.find(line, &quot;&#94;[a-z]+&quot;))&#13;&#10;      args    = string.gsub(line,&quot;&#94;[a-z]+%s*&quot;,'',1)            --strip command off line&#13;&#10;    else&#13;&#10;      command = ''&#13;&#10;    end&#13;&#10;&#13;&#10;    if command == &quot;setb&quot; then&#13;&#10;      --{{{  set breakpoint&#13;&#10;&#13;&#10;      local line, filename  = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        set_breakpoint(filename,line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint set in file &quot;..filename..' line '..line..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delb&quot; then&#13;&#10;      --{{{  delete breakpoint&#13;&#10;&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        remove_breakpoint(filename, line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint deleted from file &quot;..filename..' line '..line..&quot;\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallb&quot; then&#13;&#10;      --{{{  delete all breakpoints&#13;&#10;      breakpoints = {}&#13;&#10;      ctrlrDebugger:write('All breakpoints deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listb&quot; then&#13;&#10;      --{{{  list breakpoints&#13;&#10;      for i, v in pairs(breakpoints) do&#13;&#10;        for ii, vv in pairs(v) do&#13;&#10;          ctrlrDebugger:write(&quot;Break at: &quot;..i..' in '..ii..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;setw&quot; then&#13;&#10;      --{{{  set watch expression&#13;&#10;&#13;&#10;      if args and args ~= '' then&#13;&#10;        local func = loadstring(&quot;return(&quot; .. args .. &quot;)&quot;)&#13;&#10;        local newidx = #watches + 1&#13;&#10;        watches[newidx] = {func = func, exp = args}&#13;&#10;        ctrlrDebugger:write(&quot;Set watch exp no. &quot; .. newidx..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delw&quot; then&#13;&#10;      --{{{  delete watch expression&#13;&#10;&#13;&#10;      local index = tonumber(args)&#13;&#10;      if index then&#13;&#10;        watches[index] = nil&#13;&#10;        ctrlrDebugger:write(&quot;Watch expression deleted\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallw&quot; then&#13;&#10;      --{{{  delete all watch expressions&#13;&#10;      watches = {}&#13;&#10;      ctrlrDebugger:write('All watch expressions deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listw&quot; then&#13;&#10;      --{{{  list watch expressions&#13;&#10;      for i, v in pairs(watches) do&#13;&#10;        ctrlrDebugger:write(&quot;Watch exp. &quot; .. i .. &quot;: &quot; .. v.exp..'\n')&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;run&quot; then&#13;&#10;      --{{{  run until breakpoint&#13;&#10;      step_into = false&#13;&#10;      step_over = false&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;step&quot; then&#13;&#10;      --{{{  step N lines (into functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_over  = false&#13;&#10;      step_into  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;over&quot; then&#13;&#10;      --{{{  step N lines (over functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      step_level[current_thread] = stack_level[current_thread]&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;out&quot; then&#13;&#10;      --{{{  step N lines (out of functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = 1&#13;&#10;      step_level[current_thread] = stack_level[current_thread] - tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;gotoo&quot; then&#13;&#10;      --{{{  step until reach line&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if line ~= '' then&#13;&#10;        step_over  = false&#13;&#10;        step_into  = false&#13;&#10;        if has_breakpoint(filename,line) then&#13;&#10;          return 'cont'&#13;&#10;        else&#13;&#10;          set_breakpoint(filename,line,true)&#13;&#10;          return 'cont'&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;set&quot; then&#13;&#10;      --{{{  set/show context level&#13;&#10;      local level = args&#13;&#10;      if level and level == '' then level = nil end&#13;&#10;      if level then return level end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;vars&quot; then&#13;&#10;      --{{{  list context variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env, depth+1, 'variables')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;glob&quot; then&#13;&#10;      --{{{  list global variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__GLOBALS__,depth+1,'globals')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;fenv&quot; then&#13;&#10;      --{{{  list function environment variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__ENVIRONMENT__,depth+1,'environment')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;ups&quot; then&#13;&#10;      --{{{  list upvalue names&#13;&#10;      dumpvar(eval_env.__UPVALUES__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;locs&quot; then&#13;&#10;      --{{{  list locals names&#13;&#10;      dumpvar(eval_env.__LOCALS__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;what&quot; then&#13;&#10;      --{{{  show where a function is defined&#13;&#10;      if args and args ~= '' then&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(args,&quot;[%w_]+&quot;) do&#13;&#10;          v = v[w]&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        if type(v) == 'function' then&#13;&#10;          local def = debug.getinfo(v,'S')&#13;&#10;          if def then&#13;&#10;            ctrlrDebugger:write(def.what..' in '..def.short_src..' '..def.linedefined..'..'..def.lastlinedefined..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('Cannot get info for '..v..'\n')&#13;&#10;          end&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(v..' is not a function\n')&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;dump&quot; then&#13;&#10;      --{{{  dump a variable&#13;&#10;      local name, depth = getargs('VN')&#13;&#10;      if name ~= '' then&#13;&#10;        if depth == '' or depth == 0 then depth = nil end&#13;&#10;        depth = tonumber(depth or 1)&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(name,&quot;[&#94;%.]+&quot;) do     --get everything between dots&#13;&#10;          if tonumber(w) then&#13;&#10;            v = v[tonumber(w)]&#13;&#10;          else&#13;&#10;            v = v[w]&#13;&#10;          end&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        dumpvar(v,depth+1,n)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;show&quot; then&#13;&#10;      --{{{  show file around a line or the current breakpoint&#13;&#10;&#13;&#10;      local line, file, before, after = getargs('LFNN')&#13;&#10;      if before == 0 then before = 10     end&#13;&#10;      if after  == 0 then after  = before end&#13;&#10;&#13;&#10;      if file ~= '' and file ~= &quot;=stdin&quot; then&#13;&#10;        show(file,line,before,after)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Nothing to show\n')&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;poff&quot; then&#13;&#10;      --{{{  turn pause command off&#13;&#10;      pause_off = true&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pon&quot; then&#13;&#10;      --{{{  turn pause command on&#13;&#10;      pause_off = false&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;tron&quot; then&#13;&#10;      --{{{  turn tracing on/off&#13;&#10;      local option = getargs('S')&#13;&#10;      trace_calls   = false&#13;&#10;      trace_returns = false&#13;&#10;      trace_lines   = false&#13;&#10;      if string.find(option,'c') then trace_calls   = true end&#13;&#10;      if string.find(option,'r') then trace_returns = true end&#13;&#10;      if string.find(option,'l') then trace_lines   = true end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;trace&quot; then&#13;&#10;      --{{{  dump a stack trace&#13;&#10;      trace(eval_env.__VARSLEVEL__)&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;info&quot; then&#13;&#10;      --{{{  dump all debug info captured&#13;&#10;      info()&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pause&quot; then&#13;&#10;      --{{{  not allowed in here&#13;&#10;      ctrlrDebugger:write('pause() should only be used in the script you are debugging\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;help&quot; then&#13;&#10;      --{{{  help&#13;&#10;      local command = getargs('S')&#13;&#10;      if command ~= '' and hints[command] then&#13;&#10;        ctrlrDebugger:write(hints[command]..'\n')&#13;&#10;      else&#13;&#10;        for _,v in pairs(hints) do&#13;&#10;          local _,_,h = string.find(v,&quot;(.+)|&quot;)&#13;&#10;          ctrlrDebugger:write(h..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;exit&quot; then&#13;&#10;      --{{{  exit debugger&#13;&#10;      return 'stop'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif line ~= '' then&#13;&#10;      --{{{  just execute whatever it is in the current context&#13;&#10;&#13;&#10;      --map line starting with &quot;=...&quot; to &quot;return ...&quot;&#13;&#10;      if string.sub(line,1,1) == '=' then line = string.gsub(line,'=','return ',1) end&#13;&#10;&#13;&#10;      local ok, func = pcall(loadstring,line)&#13;&#10;      if func == nil then                             --Michael.Bringmann@lsi.com&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..line..'\n')&#13;&#10;      elseif not ok then&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..func..'\n')&#13;&#10;      else&#13;&#10;        setfenv(func, eval_env)&#13;&#10;        local res = {pcall(func)}&#13;&#10;        if res[1] then&#13;&#10;          if res[2] then&#13;&#10;            table.remove(res,1)&#13;&#10;            for _,v in ipairs(res) do&#13;&#10;              ctrlrDebugger:write(tostring(v))&#13;&#10;              ctrlrDebugger:write('\t')&#13;&#10;            end&#13;&#10;            ctrlrDebugger:write('\n')&#13;&#10;          end&#13;&#10;          --update in the context&#13;&#10;          return 0&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(&quot;Run error: &quot;..res[2]..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function debug_hook(event, line, level, thread)&#13;&#10;&#13;&#10;local function debug_hook(event, line, level, thread)&#13;&#10;  if not started then debug.sethook(); coro_debugger = nil; return end&#13;&#10;  current_thread = thread or 'main'&#13;&#10;  local level = level or 2&#13;&#10;  trace_event(event,line,level)&#13;&#10;  if event == &quot;call&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] + 1&#13;&#10;  elseif event == &quot;return&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] - 1&#13;&#10;    if stack_level[current_thread] &lt; 0 then stack_level[current_thread] = 0 end&#13;&#10;  else&#13;&#10;    local vars,file,line = capture_vars(level,1,line)&#13;&#10;    local stop, ev, idx = false, events.STEP, 0&#13;&#10;    while true do&#13;&#10;      for index, value in pairs(watches) do&#13;&#10;        setfenv(value.func, vars)&#13;&#10;        local status, res = pcall(value.func)&#13;&#10;        if status and res then&#13;&#10;          ev, idx = events.WATCH, index&#13;&#10;          stop = true&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if stop then break end&#13;&#10;      if (step_into)&#13;&#10;      or (step_over and (stack_level[current_thread] &lt;= step_level[current_thread] or stack_level[current_thread] == 0)) then&#13;&#10;        step_lines = step_lines - 1&#13;&#10;        if step_lines &lt; 1 then&#13;&#10;          ev, idx = events.STEP, 0&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if has_breakpoint(file, line) then&#13;&#10;        ev, idx = events.BREAK, 0&#13;&#10;        break&#13;&#10;      end&#13;&#10;      return&#13;&#10;    end&#13;&#10;    if not coro_debugger then&#13;&#10;      ctrlrDebugger:write(&quot;Lua Debugger\n&quot;)&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;      ctrlrDebugger:write(&quot;Type 'help' for commands\n&quot;)&#13;&#10;      coro_debugger = true&#13;&#10;    else&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;    end&#13;&#10;    tracestack(level)&#13;&#10;    local last_next = 1&#13;&#10;    local next = 'ask'&#13;&#10;    local silent = false&#13;&#10;    while true do&#13;&#10;      if next == 'ask' then&#13;&#10;        next = debugger_loop(ev, vars, file, line, idx)&#13;&#10;      elseif next == 'cont' then&#13;&#10;        return&#13;&#10;      elseif next == 'stop' then&#13;&#10;        started = false&#13;&#10;        debug.sethook()&#13;&#10;        coro_debugger = nil&#13;&#10;        return&#13;&#10;      elseif tonumber(next) then --get vars for given level or last level&#13;&#10;        next = tonumber(next)&#13;&#10;        if next == 0 then silent = true; next = last_next else silent = false end&#13;&#10;        last_next = next&#13;&#10;        restore_vars(level,vars)&#13;&#10;        vars, file, line = capture_vars(level,next)&#13;&#10;        if not silent then&#13;&#10;          if vars and vars.__VARSLEVEL__ then&#13;&#10;            ctrlrDebugger:write('Level: '..vars.__VARSLEVEL__..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('No level set\n')&#13;&#10;          end&#13;&#10;        end&#13;&#10;        ev = events.SET&#13;&#10;        next = 'ask'&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Unknown command from debugger_loop: '..tostring(next)..'\n')&#13;&#10;        ctrlrDebugger:write('Stopping debugger\n')&#13;&#10;        next = 'stop'&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  coroutine.create&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.create = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cocreate(function(...)&#13;&#10;                        stack_level[thread] = 0&#13;&#10;                        trace_level[thread] = 0&#13;&#10;                        step_level [thread] = 0&#13;&#10;                        debug.sethook(thread_hook,mask,count)&#13;&#10;                        return f(...)&#13;&#10;                      end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cocreate(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  coroutine.wrap&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.wrap = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cowrap(function(...)&#13;&#10;                      stack_level[thread] = 0&#13;&#10;                      trace_level[thread] = 0&#13;&#10;                      step_level [thread] = 0&#13;&#10;                      debug.sethook(thread_hook,mask,count)&#13;&#10;                      return f(...)&#13;&#10;                    end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cowrap(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  function pause(x,l,f)&#13;&#10;&#13;&#10;--&#13;&#10;-- Starts/resumes a debug session&#13;&#10;--&#13;&#10;&#13;&#10;function pause(x,l,f)&#13;&#10;  if not f and pause_off then return end       --being told to ignore pauses&#13;&#10;  pausemsg = x or 'pause'&#13;&#10;  local lines&#13;&#10;  local src = getinfo(2,'short_src')&#13;&#10;  if l then&#13;&#10;    lines = l   --being told when to stop&#13;&#10;  elseif src == &quot;stdin&quot; then&#13;&#10;    lines = 1   --if in a console session, stop now&#13;&#10;  else&#13;&#10;    lines = 2   --if in a script, stop when get out of pause()&#13;&#10;  end&#13;&#10;  if started then&#13;&#10;    --we'll stop now 'cos the existing debug hook will grab us&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --reset it in case some external agent fiddled with it&#13;&#10;  else&#13;&#10;    --set to stop when get out of pause()&#13;&#10;    trace_level[current_thread] = 0&#13;&#10;    step_level [current_thread] = 0&#13;&#10;    stack_level[current_thread] = 1&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    started    = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --NB: this will cause an immediate entry to the debugger_loop&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function dump(v,depth)&#13;&#10;&#13;&#10;--shows the value of the given variable, only really useful&#13;&#10;--when the variable is a table&#13;&#10;--see dump debug command hints for full semantics&#13;&#10;&#13;&#10;function dump(v,depth)&#13;&#10;  dumpvar(v,(depth or 1)+1,tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function debug.traceback(x)&#13;&#10;&#13;&#10;local _traceback = debug.traceback       --note original function&#13;&#10;&#13;&#10;--override standard function&#13;&#10;debug.traceback = function(x)&#13;&#10;  local assertmsg = _traceback(x)        --do original function&#13;&#10;  pause(x)                               --let user have a look at stuff&#13;&#10;  return assertmsg                       --carry on&#13;&#10;end&#13;&#10;&#13;&#10;_TRACEBACK = debug.traceback             --Lua 5.0 function&#13;&#10;&#13;&#10;--}}}"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000005"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="inspect" luaMethodCode="function getInspect()&#13;&#10;local inspect ={&#13;&#10;  _VERSION = 'inspect.lua 3.0.0',&#13;&#10;  _URL     = 'http://github.com/kikito/inspect.lua',&#13;&#10;  _DESCRIPTION = 'human-readable representations of tables',&#13;&#10;  _LICENSE = [[&#13;&#10;    MIT LICENSE&#13;&#10;&#13;&#10;    Copyright (c) 2013 Enrique Garc&#237;a Cota&#13;&#10;&#13;&#10;    Permission is hereby granted, free of charge, to any person obtaining a&#13;&#10;    copy of this software and associated documentation files (the&#13;&#10;    &quot;Software&quot;), to deal in the Software without restriction, including&#13;&#10;    without limitation the rights to use, copy, modify, merge, publish,&#13;&#10;    distribute, sublicense, and/or sell copies of the Software, and to&#13;&#10;    permit persons to whom the Software is furnished to do so, subject to&#13;&#10;    the following conditions:&#13;&#10;&#13;&#10;    The above copyright notice and this permission notice shall be included&#13;&#10;    in all copies or substantial portions of the Software.&#13;&#10;&#13;&#10;    THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS&#13;&#10;    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF&#13;&#10;    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.&#13;&#10;    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY&#13;&#10;    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,&#13;&#10;    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE&#13;&#10;    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&#13;&#10;  ]]&#13;&#10;}&#13;&#10;&#13;&#10;inspect.KEY       = setmetatable({}, {__tostring = function() return 'inspect.KEY' end})&#13;&#10;inspect.METATABLE = setmetatable({}, {__tostring = function() return 'inspect.METATABLE' end})&#13;&#10;&#13;&#10;-- Apostrophizes the string if it has quotes, but not aphostrophes&#13;&#10;-- Otherwise, it returns a regular quoted string&#13;&#10;local function smartQuote(str)&#13;&#10;  if str:match('&quot;') and not str:match(&quot;'&quot;) then&#13;&#10;    return &quot;'&quot; .. str .. &quot;'&quot;&#13;&#10;  end&#13;&#10;  return '&quot;' .. str:gsub('&quot;', '\\&quot;') .. '&quot;'&#13;&#10;end&#13;&#10;&#13;&#10;local controlCharsTranslation = {&#13;&#10;  [&quot;\a&quot;] = &quot;\\a&quot;,  [&quot;\b&quot;] = &quot;\\b&quot;, [&quot;\f&quot;] = &quot;\\f&quot;,  [&quot;\n&quot;] = &quot;\\n&quot;,&#13;&#10;  [&quot;\r&quot;] = &quot;\\r&quot;,  [&quot;\t&quot;] = &quot;\\t&quot;, [&quot;\v&quot;] = &quot;\\v&quot;&#13;&#10;}&#13;&#10;&#13;&#10;local function escape(str)&#13;&#10;  local result = str:gsub(&quot;\\&quot;, &quot;\\\\&quot;):gsub(&quot;(%c)&quot;, controlCharsTranslation)&#13;&#10;  return result&#13;&#10;end&#13;&#10;&#13;&#10;local function isIdentifier(str)&#13;&#10;  return type(str) == 'string' and str:match( &quot;&#94;[_%a][_%a%d]*$&quot; )&#13;&#10;end&#13;&#10;&#13;&#10;local function isSequenceKey(k, length)&#13;&#10;  return type(k) == 'number'&#13;&#10;     and 1 &lt;= k&#13;&#10;     and k &lt;= length&#13;&#10;     and math.floor(k) == k&#13;&#10;end&#13;&#10;&#13;&#10;local defaultTypeOrders = {&#13;&#10;  ['number']   = 1, ['boolean']  = 2, ['string'] = 3, ['table'] = 4,&#13;&#10;  ['function'] = 5, ['userdata'] = 6, ['thread'] = 7&#13;&#10;}&#13;&#10;&#13;&#10;local function sortKeys(a, b)&#13;&#10;  local ta, tb = type(a), type(b)&#13;&#10;&#13;&#10;  -- strings and numbers are sorted numerically/alphabetically&#13;&#10;  if ta == tb and (ta == 'string' or ta == 'number') then return a &lt; b end&#13;&#10;&#13;&#10;  local dta, dtb = defaultTypeOrders[ta], defaultTypeOrders[tb]&#13;&#10;  -- Two default types are compared according to the defaultTypeOrders table&#13;&#10;  if dta and dtb then return defaultTypeOrders[ta] &lt; defaultTypeOrders[tb]&#13;&#10;  elseif dta     then return true  -- default types before custom ones&#13;&#10;  elseif dtb     then return false -- custom types after default ones&#13;&#10;  end&#13;&#10;&#13;&#10;  -- custom types are sorted out alphabetically&#13;&#10;  return ta &lt; tb&#13;&#10;end&#13;&#10;&#13;&#10;local function getNonSequentialKeys(t)&#13;&#10;  local keys, length = {}, #t&#13;&#10;  for k,_ in pairs(t) do&#13;&#10;    if not isSequenceKey(k, length) then table.insert(keys, k) end&#13;&#10;  end&#13;&#10;  table.sort(keys, sortKeys)&#13;&#10;  return keys&#13;&#10;end&#13;&#10;&#13;&#10;local function getToStringResultSafely(t, mt)&#13;&#10;  local __tostring = type(mt) == 'table' and rawget(mt, '__tostring')&#13;&#10;  local str, ok&#13;&#10;  if type(__tostring) == 'function' then&#13;&#10;    ok, str = pcall(__tostring, t)&#13;&#10;    str = ok and str or 'error: ' .. tostring(str)&#13;&#10;  end&#13;&#10;  if type(str) == 'string' and #str &gt; 0 then return str end&#13;&#10;end&#13;&#10;&#13;&#10;local maxIdsMetaTable = {&#13;&#10;  __index = function(self, typeName)&#13;&#10;    rawset(self, typeName, 0)&#13;&#10;    return 0&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local idsMetaTable = {&#13;&#10;  __index = function (self, typeName)&#13;&#10;    local col = setmetatable({}, {__mode = &quot;kv&quot;})&#13;&#10;    rawset(self, typeName, col)&#13;&#10;    return col&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local function countTableAppearances(t, tableAppearances)&#13;&#10;  tableAppearances = tableAppearances or setmetatable({}, {__mode = &quot;k&quot;})&#13;&#10;&#13;&#10;  if type(t) == 'table' then&#13;&#10;    if not tableAppearances[t] then&#13;&#10;      tableAppearances[t] = 1&#13;&#10;      for k,v in pairs(t) do&#13;&#10;        countTableAppearances(k, tableAppearances)&#13;&#10;        countTableAppearances(v, tableAppearances)&#13;&#10;      end&#13;&#10;      countTableAppearances(getmetatable(t), tableAppearances)&#13;&#10;    else&#13;&#10;      tableAppearances[t] = tableAppearances[t] + 1&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  return tableAppearances&#13;&#10;end&#13;&#10;&#13;&#10;local copySequence = function(s)&#13;&#10;  local copy, len = {}, #s&#13;&#10;  for i=1, len do copy[i] = s[i] end&#13;&#10;  return copy, len&#13;&#10;end&#13;&#10;&#13;&#10;local function makePath(path, ...)&#13;&#10;  local keys = {...}&#13;&#10;  local newPath, len = copySequence(path)&#13;&#10;  for i=1, #keys do&#13;&#10;    newPath[len + i] = keys[i]&#13;&#10;  end&#13;&#10;  return newPath&#13;&#10;end&#13;&#10;&#13;&#10;local function processRecursive(process, item, path)&#13;&#10;  if item == nil then return nil end&#13;&#10;&#13;&#10;  local processed = process(item, path)&#13;&#10;  if type(processed) == 'table' then&#13;&#10;    local processedCopy = {}&#13;&#10;    local processedKey&#13;&#10;&#13;&#10;    for k,v in pairs(processed) do&#13;&#10;      processedKey = processRecursive(process, k, makePath(path, k, inspect.KEY))&#13;&#10;      if processedKey ~= nil then&#13;&#10;        processedCopy[processedKey] = processRecursive(process, v, makePath(path, processedKey))&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    local mt  = processRecursive(process, getmetatable(processed), makePath(path, inspect.METATABLE))&#13;&#10;    setmetatable(processedCopy, mt)&#13;&#10;    processed = processedCopy&#13;&#10;  end&#13;&#10;  return processed&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;local Inspector = {}&#13;&#10;local Inspector_mt = {__index = Inspector}&#13;&#10;&#13;&#10;function Inspector:puts(...)&#13;&#10;  local args   = {...}&#13;&#10;  local buffer = self.buffer&#13;&#10;  local len    = #buffer&#13;&#10;  for i=1, #args do&#13;&#10;    len = len + 1&#13;&#10;    buffer[len] = tostring(args[i])&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:down(f)&#13;&#10;  self.level = self.level + 1&#13;&#10;  f()&#13;&#10;  self.level = self.level - 1&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:tabify()&#13;&#10;  self:puts(self.newline, string.rep(self.indent, self.level))&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:alreadyVisited(v)&#13;&#10;  return self.ids[type(v)][v] ~= nil&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:getId(v)&#13;&#10;  local tv = type(v)&#13;&#10;  local id = self.ids[tv][v]&#13;&#10;  if not id then&#13;&#10;    id              = self.maxIds[tv] + 1&#13;&#10;    self.maxIds[tv] = id&#13;&#10;    self.ids[tv][v] = id&#13;&#10;  end&#13;&#10;  return id&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putKey(k)&#13;&#10;  if isIdentifier(k) then return self:puts(k) end&#13;&#10;  self:puts(&quot;[&quot;)&#13;&#10;  self:putValue(k)&#13;&#10;  self:puts(&quot;]&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putTable(t)&#13;&#10;  if t == inspect.KEY or t == inspect.METATABLE then&#13;&#10;    self:puts(tostring(t))&#13;&#10;  elseif self:alreadyVisited(t) then&#13;&#10;    self:puts('&lt;table ', self:getId(t), '&gt;')&#13;&#10;  elseif self.level &gt;= self.depth then&#13;&#10;    self:puts('{...}')&#13;&#10;  else&#13;&#10;    if self.tableAppearances[t] &gt; 1 then self:puts('&lt;', self:getId(t), '&gt;') end&#13;&#10;&#13;&#10;    local nonSequentialKeys = getNonSequentialKeys(t)&#13;&#10;    local length            = #t&#13;&#10;    local mt                = getmetatable(t)&#13;&#10;    local toStringResult    = getToStringResultSafely(t, mt)&#13;&#10;&#13;&#10;    self:puts('{')&#13;&#10;    self:down(function()&#13;&#10;      if toStringResult then&#13;&#10;        self:puts(' -- ', escape(toStringResult))&#13;&#10;        if length &gt;= 1 then self:tabify() end&#13;&#10;      end&#13;&#10;&#13;&#10;      local count = 0&#13;&#10;      for i=1, length do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:puts(' ')&#13;&#10;        self:putValue(t[i])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      for _,k in ipairs(nonSequentialKeys) do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:putKey(k)&#13;&#10;        self:puts(' = ')&#13;&#10;        self:putValue(t[k])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      if mt then&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:puts('&lt;metatable&gt; = ')&#13;&#10;        self:putValue(mt)&#13;&#10;      end&#13;&#10;    end)&#13;&#10;&#13;&#10;    if #nonSequentialKeys &gt; 0 or mt then -- result is multi-lined. Justify closing }&#13;&#10;      self:tabify()&#13;&#10;    elseif length &gt; 0 then -- array tables have one extra space before closing }&#13;&#10;      self:puts(' ')&#13;&#10;    end&#13;&#10;&#13;&#10;    self:puts('}')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putValue(v)&#13;&#10;  local tv = type(v)&#13;&#10;&#13;&#10;  if tv == 'string' then&#13;&#10;    self:puts(smartQuote(escape(v)))&#13;&#10;  elseif tv == 'number' or tv == 'boolean' or tv == 'nil' then&#13;&#10;    self:puts(tostring(v))&#13;&#10;  elseif tv == 'table' then&#13;&#10;    self:putTable(v)&#13;&#10;  else&#13;&#10;    self:puts('&lt;',tv,' ',self:getId(v),'&gt;')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;function inspect.inspect(root, options)&#13;&#10;  options       = options or {}&#13;&#10;&#13;&#10;  local depth   = options.depth   or math.huge&#13;&#10;  local newline = options.newline or '\n'&#13;&#10;  local indent  = options.indent  or '  '&#13;&#10;  local process = options.process&#13;&#10;&#13;&#10;  if process then&#13;&#10;    root = processRecursive(process, root, {})&#13;&#10;  end&#13;&#10;&#13;&#10;  local inspector = setmetatable({&#13;&#10;    depth            = depth,&#13;&#10;    buffer           = {},&#13;&#10;    level            = 0,&#13;&#10;    ids              = setmetatable({}, idsMetaTable),&#13;&#10;    maxIds           = setmetatable({}, maxIdsMetaTable),&#13;&#10;    newline          = newline,&#13;&#10;    indent           = indent,&#13;&#10;    tableAppearances = countTableAppearances(root)&#13;&#10;  }, Inspector_mt)&#13;&#10;&#13;&#10;  inspector:putValue(root)&#13;&#10;&#13;&#10;  return table.concat(inspector.buffer)&#13;&#10;end&#13;&#10;&#13;&#10;setmetatable(inspect, { __call = function(_, ...) return inspect.inspect(...) end })&#13;&#10;&#13;&#10;return inspect&#13;&#10;end&#13;&#10;&#13;&#10;inspect = getInspect()"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000006"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Panel Methods" uuid="bcf4e001835844cd9f496255d2892782">
        <luaMethodGroup name="StartupMethods" uuid="8f1b0db2eec04af8b260af520cb0f8fd">
          <luaMethod luaMethodName="setGlobalVars" luaMethodCode="function setGlobalVars()&#13;&#10;&#13;&#10;&#9;sharedValues = {}&#13;&#10;&#13;&#10;&#9;sharedValues.selectedPreset&#9;&#9;&#9;= 1&#9;&#9;&#9;&#9;-- Selected program on the panel&#13;&#10;&#9;sharedValues.selectedBank &#9;&#9;&#9;= 1 &#9;&#9;&#9;-- Selected bank on the panel&#13;&#10;&#9;sharedValues.synthPreset&#9;&#9;&#9;= 0 &#9;&#9;&#9;-- Selected program on the MS2000&#13;&#10;&#9;sharedValues.synthBank &#9;&#9;&#9;&#9;= 0 &#9;&#9;&#9;-- Selected bank on the MS2000&#13;&#10;&#9;sharedValues.synthProgram&#9;&#9;&#9;= 0 &#9;&#9;&#9;-- Calculated synth program number (bank + preset) for writing&#13;&#10;&#9;sharedValues.selectedTimbre &#9;&#9;= 0&#13;&#10;&#9;sharedValues.selectedSequence&#9;&#9;= 0&#13;&#10;&#9;sharedValues.midiActivity&#9;&#9;&#9;= 0 &#9;&#9;&#9;-- Midi activity flag for blinking the indicator&#13;&#10;&#9;sharedValues.reachStatus&#9;&#9;&#9;= 0&#9;&#9;&#9;&#13;&#10;&#9;sharedValues.timbreMode &#9;&#9;&#9;= tmSynth&#9;&#9;-- Current global mode - synthesizer / vocoder&#13;&#10;&#9;sharedValues.voiceMode&#9;&#9;&#9;&#9;= vmUndefined&#9;-- More specific mode description&#13;&#10;&#9;sharedValues.deviceStatus &#9;&#9;&#9;= dsOffline&#9;&#9;-- Device status according to the panel&#13;&#10;&#9;sharedValues.operationMode&#9;&#9;&#9;= omDefault&#9;&#9;-- Synthesizer operation mode (Program, Edit, Global)&#13;&#10;&#9;sharedValues.hintMessage&#9;&#9;&#9;= &quot;&quot;&#13;&#10;&#9;sharedValues.saveToRamEnabled&#9;&#9;= 0&#9;&#9;&#9;&#9;-- Flag to show if preset belong or not to specific program of the bank&#13;&#10;&#9;sharedValues.allowChangeSeq&#9;&#9;&#9;= false&#9;&#9;&#9;-- Flag to prevent auto sequence changing&#9;&#9;&#9;&#13;&#10;&#9;sharedValues.isSequencerDragging&#9;= false&#13;&#10;&#9;sharedValues.sequencerStartY&#9;&#9;= 0&#13;&#10;&#9;sharedValues.sequencerKnob&#9;&#9;&#9;= 0&#9;&#9;&#9;&#9;-- Knob to be affected by sequencer dragging&#13;&#10;&#9;sharedValues.sequencerKnobValue&#9;&#9;= 0&#9;&#9;&#9;&#9;-- Value at the moment of drag begins&#13;&#10;&#9;sharedValues.applySettingsOnCatch&#9;= false&#9;&#9;&#9;-- Required for settings merging routine&#13;&#10;&#9;sharedValues.ignoreSettingsButton&#9;= true&#9;&#9;&#9;-- Workaround for strange behaviour when settings page was not closed before saving state&#13;&#10;&#9;sharedValues.customBGColor&#9;&#9;&#9;= SEQ_BACKGROUND&#13;&#10;&#9;sharedValues.playMessageTuple&#9;&#9;= {}&#9;&#9;&#9;-- Program Play mode can send 3 messages in a row, but Ctrlr do not recognize them as multimessage&#13;&#10;&#9;sharedValues.resetDWGS&#9;&#9;&#9;&#9;= true&#9;&#9;&#9;-- Flag to process OSC1 Control2 bounds and formula&#13;&#10;&#9;sharedValues.restartRequired&#9;&#9;= false&#9;&#9;&#9;-- Flag to indicate if panel restart is required&#13;&#10;&#13;&#10;&#9;-- SysEx formula templates for non-visual components, will be overriden in certain methods&#13;&#10;&#9;sharedValues.osc1SEValues &#9;= {0xF0, 0x42, 0x00, 0x58, 0x41, 0x49, 0x00, 0x00, 0x00, 0xF7}&#13;&#10;&#9;sharedValues.osc2SEValues &#9;= {0xF0, 0x42, 0x00, 0x58, 0x41, 0x4D, 0x00, 0x00, 0x00, 0xF7}&#13;&#10;&#9;sharedValues.oscModSEValues = {0xF0, 0x42, 0x00, 0x58, 0x41, 0x4E, 0x00, 0x00, 0x00, 0xF7}&#13;&#10;&#9;sharedValues.filterSEValues = {0xF0, 0x42, 0x00, 0x58, 0x41, 0x54, 0x00, 0x00, 0x00, 0xF7}&#13;&#10;&#9;sharedValues.LFO1SEValues &#9;= {0xF0, 0x42, 0x00, 0x58, 0x41, 0x68, 0x00, 0x00, 0x00, 0xF7}&#13;&#10;&#9;sharedValues.LFO2SEValues &#9;= {0xF0, 0x42, 0x00, 0x58, 0x41, 0x6D, 0x00, 0x00, 0x00, 0xF7}&#13;&#10;&#13;&#10;&#9;panelSettings = {}&#13;&#10;&#13;&#10;&#9;panelSettings.sendProgOnStartup&#9;= 0&#13;&#10;&#9;panelSettings.sendOnProgChange&#9;= 0&#13;&#10;&#9;panelSettings.reqProgOnChange&#9;= 0&#9;-- Request program on change synthesizer's program number&#13;&#10;&#9;panelSettings.autocheckLCDMode&#9;= 0&#9;-- Force LCD mode on every poll cycle&#13;&#10;&#9;panelSettings.disableWarnings&#9;= 0&#9;-- Disable all warning dialogs. Might be dangerous&#13;&#10;&#9;panelSettings.clockSource&#9;&#9;= 2&#13;&#10;&#9;panelSettings.localMode&#9;&#9;&#9;= 1&#13;&#10;&#9;panelSettings.continuousPolling&#9;= 1&#13;&#10;&#9;panelSettings.selectorsSource&#9;= pbsPanel&#9;-- Flag to recognize where to cycle program - on the panel, or on the synthesizer side&#13;&#10;&#9;panelSettings.selectedSkin&#9;&#9;= csDefault&#13;&#10;&#13;&#10;&#9;-- Skin colors&#13;&#10;&#9;skinColors = {}&#13;&#10;&#13;&#10;&#9;-- Init default colors&#13;&#10;&#9;defaultScheme()&#13;&#10;&#13;&#10;&#9;-- Timer flags&#13;&#10;&#9;timerFlags = {}&#13;&#10;&#13;&#10;&#9;-- Flags to indicate if some kind of data is expected or not&#13;&#10;&#9;-- Data that not expected will be ignored on input&#13;&#10;&#9;timerFlags.waitForSingleProgram&#9;= false&#13;&#10;&#9;timerFlags.waitForBulkDump&#9;&#9;= false&#13;&#10;&#9;timerFlags.waitForSettings&#9;&#9;= false&#13;&#10;&#9;timerFlags.waitForWriteReply&#9;= false&#13;&#10;&#13;&#10;&#9;-- Patch bank&#13;&#10;&#9;presetBank = initPresetBank()&#13;&#10;&#13;&#10;&#9;-- Current program data buffer. It's INIT program by default&#13;&#10;&#9;dataBuffer = copyTable(presetBank[1][1])&#13;&#10;&#13;&#10;&#9;-- Vocoder buffer&#13;&#10;&#9;vocoderBuffer = initVocoderBuffer()&#13;&#10;&#13;&#10;&#9;-- Timbre clipboard&#13;&#10;&#9;timbreClipboard = {}&#13;&#10;&#13;&#10;&#9;-- Sequence clipboard&#13;&#10;&#9;seqClipboard = {}&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="2ebc705ed5c545b0b15a836f22c78233"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setGlobalConstants" luaMethodCode="function setGlobalConstants()&#10;&#13;&#10;&#9;panelVersion = &quot;1.3.4&quot;&#13;&#10;&#13;&#10;&#9;-- Color definitions&#13;&#10;&#9;COMP_DISABLED_ALPHA&#9;= 0.5&#13;&#10;&#9;COMP_ENABLED_ALPHA&#9;= 1&#13;&#10;&#13;&#10;&#9;-- LCD&#13;&#10;&#9;LCD_BASE&#9;&#9;= Colour(0xFF333333)&#13;&#10;&#9;LCD_BACKLIGHT  &#9;= Colour(0xFFc4e283)&#13;&#10;&#9;LCD_DIGITS &#9;   &#9;= Colour(0xFFb5ca87)&#13;&#10;&#9;LCD_TEXT&#9;&#9;= Colour(0xFF202020)&#13;&#10;&#9;LCD_GLOW_START &#9;= Colour(0x25FFFFFF)&#13;&#10;&#9;LCD_GLOW_END   &#9;= Colour(0x00FFFFFF)&#13;&#10;&#13;&#10;&#9;-- Icons&#13;&#10;&#9;ICON_ORANGE&#9;= Colour(0xFFC6A34E)&#13;&#10;&#9;ICON_GREEN&#9;= Colour(0xFF66BB66)&#13;&#10;&#9;ICON_RED&#9;= Colour(0xFFDD6666)&#13;&#10;&#13;&#10;&#9;-- Drawing colors&#13;&#10;&#9;COLOR_SURFACE_LINE&#9;&#9;= Colour(0xFFBABABA)&#13;&#10;&#9;COLOR_SURFACE_LINE_DARK&#9;= Colour(0xFF9A9A9A) &#13;&#10;&#9;COLOR_GREY_TEXT&#9;&#9;&#9;= Colour(0xFF9A9A9A)&#13;&#10;&#9;COLOR_TRANSPARENT&#9;&#9;= Colour(0x00000000)&#13;&#10;&#9;COLOR_PANEL_BG&#9;&#9;&#9;= Colour(0xFF334657)&#13;&#10;&#9;COLOR_SETUP_BG&#9;&#9;&#9;= Colour(0xFA334657)&#13;&#10;&#9;COLOR_PANEL_BG_BLK&#9;&#9;= Colour(0xFF353535)&#13;&#10;&#9;COLOR_SETUP_BG_BLK&#9;&#9;= Colour(0xFA353535)&#13;&#10;&#9;COLOR_VOCODER_LABEL&#9;&#9;= Colour(0xFFAAAAAA)&#13;&#10;&#9;COLOR_COMBO_TEXT&#9;&#9;= Colour(0xFFA6914F)&#13;&#10;&#9;COLOR_BUFFER_COPY&#9;&#9;= Colour(0xFFA6524A)&#13;&#10;&#9;COLOR_BUFFER_COPY_V&#9;&#9;= Colour(0xFF4A85A6)&#13;&#10;&#9;COLOR_BUFFER_TEXT&#9;&#9;= Colour(0xFFFAFAFA)&#13;&#10;&#9;COLOR_BUFFER_TEXT_EMPTY&#9;= Colour(0xFFBABABA)&#13;&#10;&#9;COLOR_EMERGENCY&#9;&#9;&#9;= Colour(0xFF993333)&#13;&#10;&#9;COLOR_SEQ_BG_BLACK&#9;&#9;= Colour(0xFF1A2024)&#13;&#10;&#9;COLOR_GROUPBOX_OUTLINE&#9;= Colour(0xFFA3A3A3)&#13;&#10;&#9;COLOR_GROUPBOX_LABEL&#9;= Colour(0xFFBABABA)&#13;&#10;&#13;&#10;&#9;-- Sequencer&#13;&#10;&#9;SEQ_BACKGROUND&#9;&#9;= Colour(0xFF2A3034)&#13;&#10;&#9;SEQ_BG_ALTER&#9;&#9;= Colour(0xFF252A2E)&#13;&#10;&#9;SEQ_BG_ALTER_BLACK&#9;= Colour(0xFF202529)&#13;&#10;&#9;SEQ_NUMBER_ONE   &#9;= Colour(0xFF00FF00)&#13;&#10;&#9;SEQ_NUMBER_TWO   &#9;= Colour(0xFF00CCFF)&#13;&#10;&#9;SEQ_NUMBER_THREE &#9;= Colour(0xFFFFCC00)&#13;&#10;&#9;SEQ_GRAYED_OUT&#9;&#9;= Colour(0xFFBABABA)&#13;&#10;&#13;&#10;&#9;-- Operation modes&#13;&#10;&#9;omDefault = 0&#13;&#10;&#9;omLCD &#9;  = 1&#13;&#10;&#9;omGlobal  = 2&#13;&#10;&#13;&#10;&#9;-- Device status&#13;&#10;&#9;dsOnline&#9;= 0&#13;&#10;&#9;dsBusy&#9;&#9;= 1&#13;&#10;&#9;dsOffline&#9;= 2&#13;&#10;&#9;dsError&#9;&#9;= 3&#13;&#10;&#13;&#10;&#9;-- Error codes&#13;&#10;&#9;errMaxValExceeded = 0&#13;&#10;&#13;&#10;&#9;-- Timbre modes&#13;&#10;&#9;tmSynth&#9;&#9;= 0&#13;&#10;&#9;tmVocoder&#9;= 1&#13;&#10;&#13;&#10;&#9;-- Voice modes&#13;&#10;&#9;vmUndefined&#9;= -1&#13;&#10;&#9;vmSingle&#9;= 0&#13;&#10;&#9;vmSplit&#9;&#9;= 1&#13;&#10;&#9;vmDual&#9;&#9;= 2&#13;&#10;&#9;vmVocoder&#9;= 3&#13;&#10;&#13;&#10;&#9;-- Destination program buffer&#13;&#10;&#9;dbSynth&#9;&#9;= 0&#13;&#10;&#9;dbVocoder&#9;= 1&#13;&#10;&#13;&#10;&#9;-- Color scheme&#13;&#10;&#9;csDefault&#9;= 0&#13;&#10;&#9;csBlack&#9;&#9;= 1&#13;&#10;&#9;csNordLead&#9;= 2&#13;&#10;&#9;csJP8080&#9;= 3&#13;&#10;&#13;&#10;&#9;-- Supported file extensions&#13;&#10;&#9;SUPPORTED_EXT_MASK&#9;&#9;= &quot;*.syx;*.mid&quot;&#13;&#10;&#9;SUPPORTED_EXT_MASK_ALT&#9;= &quot;*.syx;*.mid;*.prg&quot;&#13;&#10;&#13;&#10;&#9;-- Bank \ program selection source&#13;&#10;&#9;pbsPanel&#9;= 0&#13;&#10;&#9;pbsSynth&#9;= 1&#13;&#10;&#13;&#10;&#9;-- Program data values&#13;&#10;&#9;DATA_PREAMBLE_BYTES&#9;&#9;= 5&#9;&#9;-- SysEx header&#13;&#10;&#9;COMMON_DATA_SIZE&#9;&#9;= 38&#9;-- Shared values for both timbres&#13;&#10;&#13;&#10;&#9;-- Dump size values&#13;&#10;&#9;-- Raw MIDI data&#13;&#10;&#9;SINGLE_PROGRAM_SIZE&#9;&#9;= 297&#9;-- (291 + 5 bytes SysEx header + F7)&#13;&#10;&#9;GLOBAL_DATA_SIZE&#9;&#9;= 235&#9;-- (229 + SysEx data)&#13;&#10;&#9;PROGRAM_BANK_DUMP_SIZE&#9;= 37163&#9;-- (37157 + SysEx data)&#13;&#10;&#9;ALL_DATA_DUMP_SIZE&#9;&#9;= 37392 -- (37386 + SysEx data)&#13;&#10;&#9;MKSINGLE_PROGRAM_SIZE&#9;= SINGLE_PROGRAM_SIZE + 2 --(MicroKorg program size)&#13;&#10;&#13;&#10;&#9;-- Special cases&#13;&#10;&#9;HANDSON_DUMP_SIZE&#9;&#9;= 37395&#13;&#10;&#13;&#10;&#9;-- MIDI-to-Program converted data size&#13;&#10;&#9;SINGLE_PROGRAM_INT_SIZE = 254&#9;&#13;&#10;&#13;&#10;&#9;TIMBRE_DATA_SIZE&#9;&#9;= 108&#13;&#10;&#9;TIMBRE_ONE_STARTBYTE&#9;= DATA_PREAMBLE_BYTES + COMMON_DATA_SIZE + 1&#13;&#10;&#9;TIMBRE_TWO_STARTBYTE&#9;= TIMBRE_ONE_STARTBYTE + TIMBRE_DATA_SIZE&#13;&#10;&#13;&#10;&#9;-- Buffer copy values&#13;&#10;&#9;SEQUENCE_STARTBYTE_DISP&#9;&#9;= 53&#13;&#10;&#9;SEQUENCE_DATA_SIZE&#9;&#9;&#9;= 55&#13;&#10;&#9;VOCODER_SEQDATA_STARTBYTE&#9;= 47&#13;&#10;&#9;VOCODER_SEQDATA_SIZE&#9;&#9;= 32&#13;&#10;&#13;&#10;&#9;-- Timbre values&#13;&#10;&#9;OSC1_WAVEFORM_DISP&#9;= 7&#13;&#10;&#9;OSC2_WAVEFORM_DISP&#9;= 12 -- WARNING, packed byte, bits 0~1&#13;&#10;&#9;OSCMODULATION_DISP&#9;= 12 -- WARNING, packed byte, bits 4~5&#13;&#10;&#9;FILTER_TYPE_DISP&#9;= 19&#13;&#10;&#9;LFO1_TYPE_DISP&#9;&#9;= 38 -- WARNING, packed byte, bits 0~1&#13;&#10;&#9;LFO2_TYPE_DISP&#9;&#9;= 41 -- WARNING, packed byte, bits 0~1&#13;&#10;&#13;&#10;&#9;-- Vocoder values&#13;&#10;&#9;OSC1_WAVEFORM_VCD_DISP&#9;= 8&#13;&#10;&#9;FILTER_TYPE_VCD_DISP&#9;= 22&#13;&#10;&#9;LFO1_TYPE_VCD_DISP&#9;&#9;= 41&#13;&#10;&#9;LFO2_TYPE_VCD_DISP&#9;&#9;= 44&#13;&#10;&#13;&#10;&#9;SYSEX_VAL_DIFF&#9;&#9;= 272&#9;-- Difference between modulator numbers on different layers&#13;&#10;&#9;SYSEX_VAL_DIFF_ALT&#9;= 400&#13;&#10;&#13;&#10;&#9;-- Dump type&#13;&#10;&#9;dtInvalidSz&#9;= -1&#13;&#10;&#9;dtProgBank&#9;= 0&#13;&#10;&#9;dtAllData&#9;= 1&#13;&#10;&#9;dtHandson&#9;= 2&#13;&#10;&#13;&#10;&#9;-- PopUp result values&#13;&#10;&#9;prOpenProgram&#9;&#9;= 1&#13;&#10;&#9;prOpenDump&#9;&#9;&#9;= 2&#13;&#10;&#9;prSaveProgram&#9;&#9;= 10&#13;&#10;&#9;prSaveDump&#9;&#9;&#9;= 11&#13;&#10;&#9;prSaveToRAM&#9;&#9;&#9;= 12&#13;&#10;&#9;prRenameProgram&#9;&#9;= 15&#13;&#10;&#9;prInitProgram&#9;&#9;= 20&#13;&#10;&#9;prInitBank&#9;&#9;&#9;= 21&#13;&#10;&#9;prRequestProgram&#9;= 30&#13;&#10;&#9;prWriteProgram&#9;&#9;= 31&#13;&#10;&#9;prRequestSysexDump&#9;= 40&#13;&#10;&#9;prWriteSysexDump&#9;= 41&#13;&#10;&#13;&#10;&#9;-- Timer values&#13;&#10;&#9;POLL_TIMER&#9;&#9;&#9;= 10000&#9;-- Constant synth availability polling&#13;&#10;&#9;SHOWHINT_TIMER&#9;&#9;= 15000&#9;-- How long hint will be shown&#13;&#10;&#9;STARTUP_TIMER&#9;&#9;= 250&#9;-- Delay before applying all startup data&#13;&#10;&#9;BLINKMIDI_TIMER&#9;&#9;= 75&#9;-- How long midi indicator shown&#13;&#10;&#9;WAIT_PROGRAM_TIMER&#9;= 3000&#9;-- Wait for program to be received&#13;&#10;&#9;WAIT_BANK_TIMER&#9;&#9;= 22000 -- Wait for program bank to be received&#13;&#10;&#9;POLLSTATE_TIMER&#9;&#9;= 3000&#9;-- Timeout for synth mode request&#13;&#10;&#9;WAITFORSET_TIMER&#9;= 3000&#9;-- Timeout for synth settings request&#13;&#10;&#9;DELAY_PROG_REQUEST&#9;= 300&#9;-- Delay before run request&#13;&#10;&#13;&#10;&#9;STARTUP_TIMER_ID&#9;&#9;= 1&#13;&#10;&#9;HINT_TIMER_ID&#9;&#9;&#9;= 10&#13;&#10;&#9;POLL_TIMER_ID&#9;&#9;&#9;= 20&#13;&#10;&#9;BLINKMIDI_TIMER_ID&#9;&#9;= 30&#13;&#10;&#9;WAIT_PROGRAM_TIMER_ID&#9;= 40&#13;&#10;&#9;WAIT_BANK_TIMER_ID&#9;&#9;= 41&#13;&#10;&#9;POLLSTATE_TIMER_ID&#9;&#9;= 50&#13;&#10;&#9;WAITFORSET_TIMER_ID&#9;&#9;= 80&#13;&#10;&#9;DELAY_PROG_REQUEST_ID&#9;= 90&#13;&#10;&#9;WAITFORWRITE_REPLY_ID&#9;= 100 -- Will indicate if write ok reply was or was not received&#13;&#10;&#13;&#10;&#9;DEFINE_DEBUG = false&#13;&#10;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="af8865808fc946489c81a1243229a2e9"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="startupSequence" luaMethodCode="function startupSequence()&#13;&#10;&#10;&#9;-- Starting up the panel here&#13;&#10;&#9;panelReady = false&#10;&#13;&#10;&#9;-- Prevent panel from sending MIDI-messages while initialization goes&#13;&#10;&#9;mutePanelOut(true)&#13;&#10;&#13;&#10;&#9;setGlobalConstants()&#13;&#10;&#9;setGlobalVars()&#13;&#10;&#9;restoreGlobalSettings()&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1f5398b76a5343a28250e692f2556ea1"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="runPanelOperations" luaMethodCode="function runPanelOperations()&#13;&#10;&#10;&#9;-- Methods that run after panel fully loaded (in my dreams, haha)&#13;&#10;&#13;&#10;&#9;-- Paint custom component windows&#13;&#10;&#9;getComp(&quot;uiSequencerScreen&quot;):repaint()&#13;&#10;&#9;getComp(&quot;LCDScreen&quot;):repaint()&#13;&#10;&#13;&#10;&#9;-- Enable panel MIDI-output&#13;&#10;&#9;mutePanelOut(false)&#13;&#10;&#13;&#10;&#9;-- Shut down all lamps&#13;&#10;&#9;shutDownTheLights()&#13;&#10;&#13;&#10;&#9;-- ... except this one&#13;&#10;&#9;setLightState(&quot;imgSeqLamp0&quot;, true)&#13;&#10;&#13;&#10;&#9;-- Poll synth status&#13;&#10;&#9;pollSynthStatus()&#13;&#10;&#9;requestOperationMode()&#13;&#10;&#13;&#10;&#9;-- Sync buffer parameters with controls&#13;&#10;&#9;if sharedValues.saveToRamEnabled == 0 then&#13;&#10;&#9;&#9;applyProgramData(dataBuffer, nil, nil, true)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;applyProgramData(dataBuffer, sharedValues.selectedBank, sharedValues.selectedPreset, true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Sending program on startup, if option was selected&#13;&#10;&#9;if panelSettings.sendProgOnStartup == 1 then&#13;&#10;&#9;&#9;sendBufferedProgramNosync()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Request settings on startup&#13;&#10;&#9;requestSynthSettings()&#13;&#10;&#13;&#10;&#9;-- Run polling synth if it's enabled in the panel settings&#13;&#10;&#9;if panelSettings.continuousPolling == 1 then&#13;&#10;&#9;&#9;synthPoller()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Request LCD mode. Useful if synthesizer controls are automated in DAW&#13;&#10;&#9;if panelSettings.autocheckLCDMode == 0 then&#13;&#10;&#9;&#9;checkLCDModeEnabled()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Hide settings, if they were opened on save state moment&#13;&#10;&#9;setModValue(&quot;btnSettings&quot;, 0)&#13;&#10;&#13;&#10;&#9;-- Check if resources reloading required&#13;&#10;&#9;checkPanelVersion()&#13;&#10;&#13;&#10;&#9;-- Panel initialized, all the procedures are reachable now&#13;&#10;&#9;panelReady = true&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="6c563098f47d4aaa8003aee3534ce75a"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="finalStartupOperations" luaMethodCode="function finalStartupOperations()&#13;&#10;&#13;&#10;&#9;setColorScheme(panelSettings.selectedSkin)&#13;&#10;&#13;&#10;&#9;-- Run timer to avoid firing scripts up while panel initializing&#10;&#9;startupTimer()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="da396383ea2647be8fe84f5227207d65"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Helpers" uuid="61f2631f5ab74b2eaffc6b3a736729ce">
          <luaMethod luaMethodName="shortAlias" luaMethodCode="&#13;&#10;-- Short aliases for often used methods&#13;&#10;&#13;&#10;function modByName(modname)&#10;&#9;return panel:getModulatorByName(modname)&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function getComp(modname)&#13;&#10;&#9;return modByName(modname):getComponent()&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function setCompProp(modname, propname, propvalue)&#13;&#10;&#9;-- propvalue should be string&#10;&#9;&#13;&#10;&#9;return panel:getModulatorByName(modname):getComponent():setPropertyString(propname, propvalue)&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function getCompProp(modname, propname)&#9;&#13;&#10;&#9;return panel:getModulatorByName(modname):getComponent():getProperty(propname)&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function getCompPropN(modname, propname)&#9;&#13;&#10;&#9;return panel:getModulatorByName(modname):getComponent():getPropertyInt(propname)&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function setCompPropN(modname, propname, propvalue)&#13;&#10;&#9;-- propvalue should be integer&#10;&#9;&#13;&#10;&#9;return panel:getModulatorByName(modname):getComponent():setPropertyInt(propname, propvalue)&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function getModProp(modulator, prop)&#13;&#10;&#9;return modulator:getProperty(prop)&#13;&#10;end&#9;&#13;&#10;&#13;&#10;&#13;&#10;function getModPropN(modulator, prop)&#13;&#10;&#9;return modulator:getPropertyInt(prop)&#13;&#10;end&#9;&#13;&#10;&#13;&#10;&#13;&#10;function getModValue(modname)&#13;&#10;&#13;&#10;&#9;return modByName(modname):getModulatorValue()&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function hideLayer(layername)&#13;&#10;&#9;panel:getCanvas():getLayerByName(layername):setVisible(false)&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function showLayer(layername)&#13;&#10;&#9;panel:getCanvas():getLayerByName(layername):setVisible(true)&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function hideLayerN(layerid)&#13;&#10;&#9;panel:getCanvas():getLayerFromArray(layerid):setVisible(false)&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;function showLayerN(layerid)&#13;&#10;&#9;panel:getCanvas():getLayerFromArray(layerid):setVisible(true)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="c91e1d880f694cf69242302a729f8bf5"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="calculateLSBMSB" luaMethodCode="function calculateLSBMSB(calcVal, fullByte, nibbleLSB)&#10;&#9;&#13;&#10;&#9;local fB = 0x07&#13;&#10;&#9;local lsM = 0x7F&#13;&#10;&#13;&#10;&#9;if fullByte ~= nil then&#13;&#10;&#9;&#9;if fullByte then&#13;&#10;&#9;&#9;&#9;fB = 0x08&#13;&#10;&#13;&#10;&#9;&#9;&#9;if nibbleLSB ~= nil then&#13;&#10;&#9;&#9;&#9;&#9;if not nibbleLSB then&#13;&#10;&#9;&#9;&#9;&#9;&#9;lsM = 0xFF&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;    local lsb = bit.band(calcVal, lsM)&#13;&#10;    local msb = bit.rshift(calcVal, fB)&#13;&#10;&#13;&#10;&#9;return {lsb, msb}&#10;end&#13;&#10;&#13;&#10;function restoreValueFromLSMS(msb, lsb)&#13;&#10;&#13;&#10;&#9;return msb * 0x80 + lsb&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="b21b019486c2482a8fdba2f4ea7f43fb"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="arrayToString" luaMethodCode="function arrayToString(inpBytes)&#10;&#9;&#13;&#10;&#9;local i&#13;&#10;&#9;local resStr = &quot;&quot;&#13;&#10;&#13;&#10;&#9;for i = 0, inpBytes:getSize() - 1 do&#13;&#10;&#9;&#9;resStr = resStr .. string.format(&quot;%x &quot;, inpBytes:getByte(i))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return resStr&#10;end&#13;&#10;&#13;&#10;function tableToString(inpTable, hexOut)&#13;&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local resStr = &quot;&quot;&#13;&#10;&#9;local fmt = &quot;%s &quot;&#13;&#10;&#13;&#10;&#9;if hexOut ~= nil then&#13;&#10;&#9;&#9;if hexOut then&#13;&#10;&#9;&#9;&#9;fmt = &quot;%.2X &quot;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 1, #inpTable do&#13;&#10;&#9;&#9;resStr = resStr .. string.format(fmt, inpTable[i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return resStr&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="429defbb1c5c48aea4b3ce983f290aef"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="blockExecution" luaMethodCode="function blockExecution(src)&#13;&#10;&#13;&#10;&#9;-- Thanks dnaldoog for this precious function!&#13;&#10;&#13;&#10;&#9;local set = {&#13;&#10;  &#9;[0] = false, --value(&quot;initialValue&quot;, 0),&#13;&#10;  &#9;true, --value(&quot;changedByHost&quot;, 1),&#13;&#10;  &#9;false, --value(&quot;changedByMidiIn&quot;, 2),&#13;&#10;  &#9;false, --value(&quot;changedByMidiController&quot;, 3),&#13;&#10;  &#9;false, --value(&quot;changedByGUI&quot;, 4),&#13;&#10;  &#9;false, --value(&quot;changedByLua&quot;, 5),&#13;&#10;  &#9;true, --value(&quot;changedByProgram&quot;, 6),&#13;&#10;  &#9;false,  --value(&quot;changedByLink&quot;, 7),&#13;&#10;  &#9;false, --value(&quot;changeByUnknown&quot;, 8)&#13;&#10;  &#9;} -- false allows function to be run &#13;&#10;&#13;&#10;&#9;-- Little bit modified result&#13;&#10;&#9;return (set[src] and (not panelReady))&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="4d48e6fd931741b9bfa5f617a81ca5cd"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="midiToProgramData" luaMethodCode="function midiToProgramData(rawPatchData, seekBytes)&#10;&#9;&#13;&#10;&#9;local dataSize = #rawPatchData - seekBytes - 1&#13;&#10;&#9;local blockSize = 8&#13;&#10;&#9;local dataBlockCount = math.ceil(dataSize / blockSize)&#13;&#10;&#9;local bytesRemain = blockSize&#13;&#10;&#9;local i, j&#13;&#10;&#13;&#10;&#9;local msbBytes = {}&#13;&#10;&#9;local dataChunk = {}&#13;&#10;&#9;local processedData = {}&#13;&#10;&#9;&#13;&#10;&#9;-- Insert header to the final table as is&#13;&#10;&#9;for i = 1, seekBytes do&#13;&#10;&#9;&#9;table.insert(processedData, rawPatchData[i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Process data, according to the KORG's midi implementation doc&#13;&#10;&#9;-- It uses 1 + 7 &quot;7BIT byte&quot; chunks to store 1MSB + 7LSB bytes (in my understanding, at least)&#13;&#10;&#9;-- Zeroes and Ones from 1st byte used to indicate MSB value of each byte in a chunk&#13;&#10;&#9;for j = 0, dataBlockCount - 1 do&#13;&#10;&#13;&#10;&#9;&#9;if j == dataBlockCount - 1 then&#13;&#10;&#9;&#9;&#9;bytesRemain = dataSize - ((dataBlockCount - 1) * blockSize)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Getting 8 bytes of data to make calculations&#13;&#10;&#9;&#9;for i = 0, bytesRemain - 1 do&#13;&#10;&#9;&#9;&#9;table.insert(dataChunk, rawPatchData[seekBytes + 1 + (j * blockSize) + i])&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Convert 1st byte to &quot;1&quot;s and &quot;0&quot;s&#13;&#10;&#9;&#9;msbBytes = Dec2Bin(dataChunk[1])&#13;&#10;&#13;&#10;&#9;&#9;-- Apply MSB bits for mapped bytes&#13;&#10;&#9;&#9;for i = 2, bytesRemain do&#13;&#10;&#13;&#10;&#9;&#9;&#9;dataChunk[i] = dataChunk[i] + (0x80 * msbBytes[i - 1])&#13;&#10;&#9;&#9;&#9;table.insert(processedData, dataChunk[i])&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;dataChunk = {}&#13;&#10; &#9;end&#13;&#10;&#13;&#10;&#9;-- End of SysEx&#13;&#10;&#9;table.insert(processedData, 0xF7)&#13;&#10;&#13;&#10;&#9;return processedData&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="5dafefdac49041269b809282e2c36048"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="programToMIDIData" luaMethodCode="function programToMIDIData(bufferData, seekBytes)&#10;&#9;&#13;&#10;&#9;local programDataSize = #bufferData - seekBytes - 1&#13;&#10;&#9;local blockSize = 7&#13;&#10;&#9;local dataBlockCount = math.ceil(programDataSize / 7)&#13;&#10;&#13;&#10;&#9;local i, j&#13;&#10;&#9;local lsms = {}&#13;&#10;&#9;local msbBytes = {}&#13;&#10;&#9;local dataChunk = {}&#13;&#10;&#9;local bytesRemain = 7&#13;&#10;&#9;local processedData = {}&#13;&#10;&#13;&#10;&#9;-- Insert header to the final table as is&#13;&#10;&#9;for i = 1, seekBytes do&#13;&#10;&#9;&#9;table.insert(processedData, bufferData[i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Constructing MS2000-compatible MIDI data format to store or send&#13;&#10;&#9;-- All values must be pretended as LSB and MSB, MSB data moved to a single byte&#13;&#10;&#9;-- and placed before the data chunk (which is 7 bytes long)&#13;&#10;&#13;&#10;&#9;for i = 0, dataBlockCount - 1 do&#13;&#10;&#13;&#10;&#9;&#9;if i == dataBlockCount - 1 then&#13;&#10;&#9;&#9;&#9;bytesRemain = programDataSize - ((dataBlockCount - 1) * blockSize)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Construct MSB-bits array&#13;&#10;&#9;&#9;for j = 0, bytesRemain - 1 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;lsms = calculateLSBMSB(bufferData[seekBytes + 1 + (i * blockSize) + j])&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Collect MSB bit&#13;&#10;&#9;&#9;&#9;table.insert(msbBytes, lsms[2])&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Insert LSB Value into result table&#13;&#10;&#9;&#9;&#9;table.insert(dataChunk, lsms[1])&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Insert &quot;shared&quot; MSB value as 1st byte of this chunk&#13;&#10;&#9;&#9;table.insert(processedData, Bin2Dec(msbBytes))&#13;&#10;&#13;&#10;&#9;&#9;for j = 1, #dataChunk do&#13;&#10;&#9;&#9;&#9;table.insert(processedData, dataChunk[j])&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;dataChunk = {}&#13;&#10;&#9;&#9;msbBytes = {}&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- End of SysEx&#13;&#10;&#9;table.insert(processedData, 0xF7)&#13;&#10;&#13;&#10;&#9;return processedData&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="584bc58d818b4c459e09abeb5d3354dc"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="binConversion" luaMethodCode="function Bin2Dec(bitArr)&#13;&#10;&#13;&#10;&#9;local result = 0&#13;&#10;&#13;&#10;&#9;-- Since max value is 127, it cannot be more than 7 bits long&#13;&#10;&#9;if #bitArr &gt; 7 then&#13;&#10;&#9;&#9;return result&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local invBytes = {}&#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;for i = #bitArr, 1, -1 do&#13;&#10;&#9;&#9;table.insert(invBytes, bitArr[i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 1, #invBytes do&#13;&#10;&#9;&#9;result = result + (invBytes[i] * 2 &#94; (#invBytes - i))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return result&#13;&#10;end&#13;&#10;&#13;&#10;function Dec2Bin(num)&#13;&#10;&#9;&#13;&#10;&#9;local result = {0, 0, 0, 0, 0, 0, 0}&#13;&#10;&#9;local bufTab = {}&#13;&#10;&#13;&#10;&#9;if (num &gt; 0x7F) or (num == 0) then&#13;&#10;&#9;&#9;-- Wrong values passed, or it's zero&#13;&#10;&#9;&#9;return result&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local invertBytes = {}&#13;&#10;&#9;local divided, divider = num, num&#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;while divided &gt; 1 do&#13;&#10;&#13;&#10;&#9;&#9;divider = math.floor(divided / 2)&#13;&#10;&#13;&#10;&#9;&#9;if divided - (divider * 2) &gt; 0 then&#13;&#10;&#9;&#9;&#9;table.insert(bufTab, 1)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;table.insert(bufTab, 0)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;divided = divider&#13;&#10; &#9;end&#13;&#10;&#13;&#10;&#9;table.insert(bufTab, divider)&#13;&#10;&#13;&#10;&#9;for i = 1, #bufTab do&#13;&#10;&#9;&#9;result[i] = bufTab[i]&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return result&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="29f85c67bb154c32afeb24596d6cd0ba"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="memBlockToTable" luaMethodCode="function memBlockToTable(mbBytes)&#10;&#9;&#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;local mbData = {}&#13;&#10;&#13;&#10;&#9;for i = 0, mbBytes:getSize() - 1 do&#13;&#10;&#9;&#9;table.insert(mbData, mbBytes:getByte(i))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return mbData&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="d1e2a5e8b273428d80bc4ab70684ad54"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="bankIDToName" luaMethodCode="function bankIDToName(bankID)&#10;&#9;&#13;&#10;&#9;return string.char(64 + bankID)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="74f51cc79289460bbb23689e35d97eed"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="packedByteUtils" luaMethodCode="function extractPackByte(byteValue, firstBit, lastBit)&#13;&#10;&#13;&#10;&#9;local lBit&#13;&#10;&#13;&#10;&#9;if lastBit == nil then&#13;&#10;&#9;&#9;lBit = firstBit&#13;&#10;&#9;else&#13;&#10;&#9;&#9;lBit = lastBit&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local valSize = lBit - firstBit + 1&#13;&#10;&#13;&#10;&#9;-- The simplest way to get bit-based value to me&#13;&#10;&#9;return bit.band(bit.rshift(byteValue, firstBit), (2 &#94; valSize) - 1)&#10;end&#13;&#10;&#13;&#10;function packBitsToByte(srcValue, packValue, firstBit, lastBit)&#13;&#10;&#13;&#10;&#9;local lBit&#13;&#10;&#13;&#10;&#9;if lastBit == nil then&#13;&#10;&#9;&#9;lBit = firstBit&#13;&#10;&#9;else&#13;&#10;&#9;&#9;lBit = lastBit&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- What I do is subtract shifted value, which is stored in&#13;&#10;&#9;-- certain bits to make them filled with zeroes&#13;&#10;&#9;-- Then write new bits with the &quot;OR&quot; operation&#13;&#10;&#13;&#10;&#9;local existingValue = extractPackByte(srcValue, firstBit, lBit)&#13;&#10;&#13;&#10;&#9;local prepValue = srcValue - bit.lshift(existingValue, firstBit)&#13;&#10;&#13;&#10;&#9;local bitsToPack = bit.lshift(packValue, firstBit)&#13;&#10;&#13;&#10;&#9;--console(string.format(&quot;valueEx=%d, shiftedV=%d, srcV=%d, src-shift=%d, packVal=%d, shift=%d, shiftedPV=%d, fb=%d, lb=%d&quot;, existingValue, &#13;&#10;&#9;--&#9;bit.lshift(existingValue, firstBit), srcValue, prepValue, packValue, 8 - firstBit - valSize, bitsToPack, firstBit, lastBit))&#13;&#10;&#13;&#10;&#9;-- ([..0.. OR value] bits)&#13;&#10;&#9;return bit.bor(prepValue, bitsToPack)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="e5b3afec7de740f89178a6388277d974"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setSEFormula" luaMethodCode="function setSEFormulaMod(modName, modNumber)&#13;&#10;&#13;&#10;&#9;-- Replace mod values to new LS MS&#13;&#10;&#13;&#10;&#9;local lsms = calculateLSBMSB(modNumber, true)&#13;&#10;&#13;&#10;&#9;local seFormula = string.format(&quot;F0 42 3y 58 41 %.2X %.2X LS MS F7&quot;, lsms[1], lsms[2])&#13;&#10;&#13;&#10;&#9;modByName(modName):getMidiMessage():setPropertyString(&quot;midiMessageSysExFormula&quot;, seFormula)&#13;&#10;end&#13;&#10;&#13;&#10;function setNewModNumber(seTable, modNumber)&#13;&#10;&#13;&#10;&#9;local lsms = calculateLSBMSB(modNumber, true)&#13;&#10;&#13;&#10;&#9;local result = seTable&#13;&#10;&#13;&#10;&#9;result[6] = lsms[1]&#13;&#10;&#9;result[7] = lsms[2]&#13;&#10;&#13;&#10;&#9;return seTable&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="f2b1901977e14b2cb8ac711043a2e4fb"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="enableControls" luaMethodCode="function enableControls(controlList, enable)&#10;&#9;&#13;&#10;&#9;-- Disabled controls must be inactive and half-transparent&#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;if not enable then&#13;&#10;&#13;&#10;&#9;&#9;for i = 1, #controlList do&#13;&#10;&#13;&#10;&#9;&#9;&#9;getComp(controlList[i]):setAlpha(COMP_DISABLED_ALPHA)&#13;&#10;&#9;&#9;&#9;setCompProp(controlList[i], &quot;componentDisabled&quot;, &quot;1&quot;)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;for i = 1, #controlList do&#13;&#10;&#13;&#10;&#9;&#9;&#9;getComp(controlList[i]):setAlpha(COMP_ENABLED_ALPHA)&#13;&#10;&#9;&#9;&#9;setCompProp(controlList[i], &quot;componentDisabled&quot;, &quot;0&quot;)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="ab01cfe388fa4472b2bc01591ffd3bcc"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="normalizeSysExDumpData" luaMethodCode="function normalizeSysExDumpData(dataTable)&#10;&#9;&#13;&#10;&#9;-- Throwing away data which is not belong to &quot;midi dump data&quot;&#13;&#10;&#9;-- Filter bytes - block must start with F0 and end with F7&#13;&#10;&#13;&#10;&#9;-- Other data will be cutted out&#13;&#10;&#13;&#10;&#9;local processedData = {}&#13;&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local readState = false&#13;&#10;&#9;local dataSize = #dataTable&#13;&#10;&#13;&#10;&#9;for i = 1, dataSize do&#13;&#10;&#13;&#10;&#9;&#9;if (not readState) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if dataTable[i] == 0xF0 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;readState = true&#13;&#10;&#9;&#9;&#9;&#9;table.insert(processedData, dataTable[i])&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;if dataTable[i] == 0xF7 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;readState = false&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;table.insert(processedData, dataTable[i])&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return processedData&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="2355abbccaf74efdbaf6faa000d51198"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="concatTables" luaMethodCode="function concatTables(tabOne, tabTwo)&#10;&#9;&#13;&#10;&#9;local resultTable = copyTable(tabOne)&#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;for i = 1, #tabTwo do&#13;&#10;&#9;&#9;table.insert(resultTable, tabTwo[i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return resultTable&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="6503af5c5a2e46b8964f644baea6ee76"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="copyTable" luaMethodCode="function copyTable(srcTable)&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local result = {}&#13;&#10;&#13;&#10;&#9;for i = 1, #srcTable do&#13;&#10;&#9;&#9;table.insert(result, srcTable[i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return result&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="45c68ae5f3174bbeaa7c98c4997b49f4"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="removeSystemSymbols" luaMethodCode="function removeSystemSymbols(origStr)&#10;&#9;&#13;&#10;&#9;local  newStr = string.gsub(origStr, '[/\*:?&quot;&lt;&gt;|]',  '')&#13;&#10;&#9;return newStr&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="cf6f284b245240f68abef42df54e5109"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="csvUtils" luaMethodCode="-- code get from http://lua-users.org/wiki/CsvUtils&#13;&#10;&#13;&#10;-- Used to escape &quot;'s by toCSV&#13;&#10;function escapeCSV (s)&#13;&#10;&#13;&#10;&#9;if string.find(s, '[,&quot;]') then&#13;&#10;&#9;&#9;s = '&quot;' .. string.gsub(s, '&quot;', '&quot;&quot;') .. '&quot;'&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;return s&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;-- Convert from CSV string to table (converts a single line of a CSV file)&#13;&#10;function fromCSV (s)&#13;&#10;&#13;&#10;&#9;s = s .. ','        -- ending comma&#13;&#10;&#9;local t = {}        -- table to collect fields&#13;&#10;&#9;local fieldstart = 1&#13;&#10;&#9;local i  = fieldstart&#13;&#10;&#13;&#10;&#9;repeat&#13;&#10;&#9;&#9;-- next field is quoted? (start with &#96;&quot;'?)&#13;&#10;&#9;&#9;if string.find(s, '&#94;&quot;', fieldstart) then&#13;&#10;&#9;&#9;&#9;local a, c&#13;&#10;&#13;&#10;&#9;&#9;&#9;repeat&#13;&#10;&#9;&#9;&#9;&#9;-- find closing quote&#13;&#10;&#9;&#9;&#9;&#9;a, i, c = string.find(s, '&quot;(&quot;?)', i+1)&#13;&#10;&#9;&#9;&#9;until c ~= '&quot;'    -- quote not followed by quote?&#13;&#10;&#13;&#10;&#9;&#9;&#9;if not i then error('unmatched &quot;') end&#13;&#10;&#13;&#10;&#9;&#9;&#9;local f = string.sub(s, fieldstart+1, i-1)&#13;&#10;&#9;&#9;&#9;table.insert(t, (string.gsub(f, '&quot;&quot;', '&quot;')))&#13;&#10;&#9;&#9;&#9;fieldstart = string.find(s, ',', i) + 1&#13;&#10;&#9;&#9;else                -- unquoted; find next comma&#13;&#10;&#9;&#9;&#9;local nexti = string.find(s, ',', fieldstart)&#13;&#10;&#9;&#9;&#9;table.insert(t, string.sub(s, fieldstart, nexti-1))&#13;&#10;&#9;&#9;&#9;fieldstart = nexti + 1&#13;&#10;&#9;&#9;end&#13;&#10;&#9;until fieldstart &gt; string.len(s)&#13;&#10;&#13;&#10;&#9;for i = 1, fieldstart do&#13;&#10;&#9;&#9;t[i] = tonumber(t[i])&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;return t&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;-- Convert from table to CSV string&#13;&#10;function toCSV (tt)&#13;&#10;&#13;&#10;&#9;local s = &quot;&quot;&#13;&#10;&#13;&#10;&#9;-- assumption is that fromCSV and toCSV maintain data as ordered array&#13;&#10;&#9;for _,p in ipairs(tt) do  &#13;&#10;&#9;&#9;s = s .. &quot;,&quot; .. escapeCSV(p)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return string.sub(s, 2)      -- remove first comma&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="4bbb24f91dda469791c906cc870a8a35"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="rndValue" luaMethodCode="function rndValue(modName)&#13;&#10;&#13;&#10;&#9;local currCtrlBounds = {}&#13;&#10;&#9;local rnd&#13;&#10;&#13;&#10;&#9;currCtrlBounds[1] = getComp(modName):getPropertyInt(&quot;uiSliderMin&quot;)&#13;&#10;&#9;currCtrlBounds[2] = getComp(modName):getPropertyInt(&quot;uiSliderMax&quot;)&#13;&#10;&#13;&#10;&#9;rnd = math.random(currCtrlBounds[1], currCtrlBounds[2])&#13;&#10;&#13;&#10;&#9;return rnd&#10;end&#13;&#10;&#13;&#10;function rndValueMan(min, max)&#13;&#10;&#13;&#10;&#9;return math.random(min, max)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="655159ac533a4ee6b03f5ae6fb4f08a3"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="checkPanelVersion" luaMethodCode="function checkPanelVersion()&#10;&#13;&#10;&#9;local panelSettingsExt = {}&#13;&#10;&#9;local localVersion = &quot;&quot;&#13;&#10;&#13;&#10;&#9;-- Get local version if exists&#13;&#10;&#9;local settingsFile = getLocalSettingsFile()&#13;&#10;&#13;&#10;&#9;if settingsFile ~= nil then&#13;&#10;&#13;&#10;&#9;&#9;panelSettingsExt = json.decode(settingsFile:loadFileAsString())&#13;&#10;&#9;&#9;localVersion = panelSettingsExt.panelVersion&#13;&#10;&#13;&#10;&#9;&#9;if localVersion ~= panelVersion then&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Delete required file and display reload message&#13;&#10;&#9;&#9;&#9;removeResourceUpdateFile()&#13;&#10;&#13;&#10;&#9;&#9;&#9;sharedValues.restartRequired = true&#13;&#10;&#9;&#9;&#9;getComp(&quot;uiAboutInfo&quot;):repaint()&#13;&#10;&#13;&#10;&#9;&#9;&#9;saveGlobalSettings()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="6ed5b8754969406da9e001ba1eb8e877"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="getLocalSettingsFile" luaMethodCode="function getLocalSettingsFile()&#10;&#13;&#10;&#9;local settingsFile = getLocalFile(&quot;config.json&quot;)&#13;&#10;&#13;&#10;&#9;-- Check if file is empty or not exists&#13;&#10;&#9;if (settingsFile ~= nil) and (settingsFile:getSize() &gt; 0) then &#13;&#10;&#9;&#9;return settingsFile&#13;&#10;&#9;else&#13;&#10;&#9;&#9;return nil&#13;&#10;&#9;end&#10;end&#13;&#10;&#13;&#10;function getLocalFile(fileName)&#10;&#13;&#10;&#9;local panelSharedDir, localFile&#13;&#10;&#13;&#10;&#9;-- Loading shared settings from file&#13;&#10;&#9;&#13;&#10;&#9;-- Getting file to load&#13;&#10;&#9;panelSharedDir = File.getSpecialLocation(File.currentExecutableFile):getChildFile(panel:getProperty(&quot;name&quot;))&#13;&#10;&#9;localFile = File(panelSharedDir:getChildFile(fileName))&#13;&#10;&#13;&#10;&#9;-- Check if file exists&#13;&#10;&#9;if localFile:existsAsFile() == true then&#13;&#10;&#13;&#10;&#9;&#9;return localFile&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;return nil&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="216d4fd2a25f4d37a97edb3b9261235f"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="removeResourceUpdateFile" luaMethodCode="function removeResourceUpdateFile()&#10;&#13;&#10;&#9;local resourceReloadFile = getLocalFile(&quot;.delete_me_to_reload_resources&quot;)&#13;&#10;&#13;&#10;&#9;if resourceReloadFile ~= nil then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;resourceReloadFile:deleteFile()&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="e235310314b54277855b2af567e251e6"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="getMidiInOut" luaMethodCode="function getMidiInOut(getInput)&#10;&#13;&#10;&#9;local result = &quot;&quot;&#13;&#10;&#9;local midiCh = &quot;&quot;&#13;&#10;&#13;&#10;&#9;if getInput then&#13;&#10;&#9;&#9;result = panel:getProperty(&quot;panelMidiInputDevice&quot;)&#13;&#10;&#9;&#9;midiCh = panel:getProperty(&quot;panelMidiInputChannelDevice&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if midiCh == &quot;0&quot; then&#13;&#10;&#9;&#9;&#9;midiCh = &quot;All&quot;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#9;&#9;result = panel:getProperty(&quot;panelMidiOutputDevice&quot;)&#13;&#10;&#9;&#9;midiCh = panel:getProperty(&quot;panelMidiOutputChannelDevice&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if result ~= &quot;-- None&quot; then&#13;&#10;&#13;&#10;&#9;&#9;result = result .. &quot; : CH &quot; .. midiCh&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return result&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="3df1266c3a4e4adcb387d08cb7cbe0d9"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Debug" uuid="ba9c9248951f43d78ba4838d6e0bed05">
          <luaMethod luaMethodName="debugActions" luaMethodCode="function debugActions(mod, value, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;--prepareForExport()&#13;&#10;&#13;&#10;&#9;--setGlobalVars()&#13;&#10;&#9;--setGlobalConstants()&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="b4ff654cadff4fef9f44d90feef6cfcc"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="devNotes" luaMethodCode="function devNotes()&#10;&#9;--[[ &#13;&#10;&#9;&#9;[HIGH PRIOR]&#13;&#10;&#9;&#9;- None&#13;&#10;&#13;&#10;&#9;&#9;[LOW PRIOR]&#13;&#10;&#9;&#9;- Improve compatibility with more midi-dumps formats if it is possible&#13;&#10;&#9;--]]&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="0730e2bf7a5143bd99326227ec232337"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="UIMethods" uuid="531e4ceb429642b29f1ffa1f46136e3e">
          <luaMethodGroup name="PopupMenus" uuid="38afc42c3b53401dad5e95292793d922">
            <luaMethod luaMethodName="presetPopupMenu" luaMethodCode="function presetPopupMenu(mod, value, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Fix shown value in the variable to avoid frustration if program number&#13;&#10; &#9;-- will change on the fly at the synthesizer side&#13;&#10;&#9;sharedValues.synthProgram = (sharedValues.synthBank * 16) + sharedValues.synthPreset&#13;&#10;&#13;&#10;&#9;local popupWin = PopupMenu()&#13;&#10;&#9;local loadPresetFromBankWin = bankListPopup(true)&#13;&#10;&#9;local savePresetToBankWin = bankListPopup(false)&#13;&#10;&#13;&#10;&#9;popupWin:addSectionHeader(&quot;Preset menu:&quot;)&#13;&#10;&#13;&#10;&#9;popupWin:addSubMenu(&quot;Load program&quot;, loadPresetFromBankWin, true, Image(), false, 0)&#13;&#10;&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;if sharedValues.saveToRamEnabled == 0 then&#13;&#10;&#9;&#9;popupWin:addItem(prSaveToRAM, &quot;Save program to RAM&quot;, false, false)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;popupWin:addItem(prSaveToRAM, &quot;Save program to RAM&quot;, true, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;popupWin:addSubMenu(&quot;Save program to RAM as&quot;, savePresetToBankWin, true, Image(), false, 0)&#13;&#10;&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;if sharedValues.saveToRamEnabled == 0 then&#13;&#10;&#9;&#9;popupWin:addItem(prRenameProgram, &quot;Rename program&quot;, false, false)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;popupWin:addItem(prRenameProgram, &quot;Rename program&quot;, true, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;popupWin:addItem(prOpenProgram, &quot;Open single program from disk&quot;, true, false)&#13;&#10;&#9;popupWin:addItem(prOpenDump, &quot;Open full sysex dump from disk&quot;, true, false)&#13;&#10;&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;popupWin:addItem(prSaveProgram, &quot;Export single program to disk&quot;, true, false)&#13;&#10;&#9;popupWin:addItem(prSaveDump, &quot;Export full sysex dump to disk&quot;, true, false)&#13;&#10;&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;popupWin:addItem(prInitProgram, &quot;Initialize program&quot;, true, false)&#13;&#10;&#9;popupWin:addItem(prInitBank, &quot;Initialize program bank&quot;, true, false)&#13;&#10;&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;popupWin:addSectionHeader(&quot;Request data:&quot;)&#13;&#10;&#13;&#10;&#9;popupWin:addItem(prRequestProgram, &quot;Request current program from hardware&quot;, true, false)&#13;&#10;&#9;popupWin:addItem(prRequestSysexDump, &quot;Request full sysex dump from hardware&quot;, true, false)&#13;&#10;&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;popupWin:addSectionHeader(&quot;Store data:&quot;)&#13;&#10;&#13;&#10;&#9;popupWin:addItem(prWriteProgram, string.format(&quot;Write current program to device memory [%s:%.2d]&quot;, &#13;&#10;&#9;&#9;&#9;&#9;&#9;bankIDToName(sharedValues.synthBank + 1), sharedValues.synthPreset + 1), true, false)&#13;&#10;&#13;&#10;&#9;popupWin:addItem(prWriteSysexDump, &quot;Write full sysex dump to hardware&quot;, true, false)&#13;&#10;&#13;&#10;&#9;popupWin:addSectionHeader(&quot; &quot;)&#13;&#10;&#9;--popupWin:addItem(-1, &quot;DEBUG ACTION&quot;, true, false)&#13;&#10;&#13;&#10;&#9;processPopupResult(popupWin:show(0, 0, 0, 22))&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="7cd44047011448cfa8f1758260914e61"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="bankListPopup" luaMethodCode="function bankListPopup(load)&#10;&#9;&#13;&#10;&#9;local popupWin = PopupMenu()&#13;&#10;&#13;&#10;&#9;popupWin:addSectionHeader(&quot;Select bank:&quot;)&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;popupWin:addSubMenu(&quot;Bank A&quot;, constructPresetBankMenu(1, &quot;A&quot;, load), true, Image(), false, 0)&#13;&#10;&#9;popupWin:addSubMenu(&quot;Bank B&quot;, constructPresetBankMenu(2, &quot;B&quot;, load), true, Image(), false, 0)&#13;&#10;&#9;popupWin:addSubMenu(&quot;Bank C&quot;, constructPresetBankMenu(3, &quot;C&quot;, load), true, Image(), false, 0)&#13;&#10;&#9;popupWin:addSubMenu(&quot;Bank D&quot;, constructPresetBankMenu(4, &quot;D&quot;, load), true, Image(), false, 0)&#13;&#10;&#9;popupWin:addSubMenu(&quot;Bank E&quot;, constructPresetBankMenu(5, &quot;E&quot;, load), true, Image(), false, 0)&#13;&#10;&#9;popupWin:addSubMenu(&quot;Bank F&quot;, constructPresetBankMenu(6, &quot;F&quot;, load), true, Image(), false, 0)&#13;&#10;&#9;popupWin:addSubMenu(&quot;Bank G&quot;, constructPresetBankMenu(7, &quot;G&quot;, load), true, Image(), false, 0)&#13;&#10;&#9;popupWin:addSubMenu(&quot;Bank H&quot;, constructPresetBankMenu(8, &quot;H&quot;, load), true, Image(), false, 0)&#13;&#10;&#13;&#10;&#9;return popupWin&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="ad2a8d8b7982459da6125a909bdf36f4"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="constructPresetBankMenu" luaMethodCode="function constructPresetBankMenu(bankNumber, bankName, load)&#10;&#9;&#13;&#10;&#9;local popupWin = PopupMenu()&#13;&#10;&#9;local bankID = 100 * bankNumber&#13;&#10;&#13;&#10;&#9;if not load then&#13;&#10;&#9;&#9;bankID = bankID + 1000&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;popupWin:addSectionHeader(string.format(&quot;Preset bank %s:&quot;, bankName))&#13;&#10;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;popupWin:addItem(bankID + i, string.format(&quot;%d. %s&quot;, i, getPresetNameByID(bankNumber, i)), true, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return popupWin&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="8ae69196fcb74843af290d77fe931081"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="processPopupResult" luaMethodCode="function processPopupResult(puResult)&#13;&#10;&#13;&#10;&#9;-- Load preset range&#13;&#10;&#9;if (puResult &gt;= 100) and (puResult &lt; 900) then&#13;&#10;&#9;&#9;chosenPresetToBuffer(puResult, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Save current program to RAM&#13;&#10;&#9;if puResult == prSaveToRAM then&#13;&#10;&#9;&#9;if confirmDialog(&quot;Warning!&quot;, &quot;This will erase selected program. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;saveProgramToPatchBank(1000 + (sharedValues.selectedBank * 100) + sharedValues.selectedPreset)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Save preset range&#13;&#10;&#9;if (puResult &gt;= 1000) and (puResult &lt; 1900) then&#13;&#10;&#9;&#9;if confirmDialog(&quot;Warning!&quot;, &quot;This will erase selected program. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;saveProgramToPatchBank(puResult)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Remame current preset&#13;&#10;&#9;if puResult == prRenameProgram then&#13;&#10;&#9;&#9;renameProgram()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Open single program&#13;&#10;&#9;if puResult == prOpenProgram then&#13;&#10;&#9;&#9;openSingleProgramFile()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Open preset bank&#13;&#10;&#9;if puResult == prOpenDump then&#13;&#10;&#9;&#9;openProgramBankFile()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Export program to file&#13;&#10;&#9;if puResult == prSaveProgram then&#13;&#10;&#9;&#9;saveSingleProgramFile()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Export full bank to file&#13;&#10;&#9;if puResult == prSaveDump then&#13;&#10;&#9;&#9;saveProgramBankFile()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Init patch&#13;&#10;&#9;if puResult == prInitProgram then&#13;&#10;&#9;&#9;if confirmDialog(&quot;Warning!&quot;, &quot;This will erase the program in the panel buffer. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;initBufferWithInitPatch()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;-- Init program bank&#13;&#10;&#9;if puResult == prInitBank then&#13;&#10;&#9;&#9;if confirmDialog(&quot;Warning!&quot;, &quot;This will erase all programs stored in RAM bank. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;presetBank = initPresetBank()&#13;&#10;&#13;&#10;&#9;&#9;&#9;if panelSettings.sendOnProgChange == 1 then&#13;&#10;&#9;&#9;&#9;&#9;chosenPresetToBuffer(101, false)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;chosenPresetToBuffer(101, true)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Request current program from device&#13;&#10;&#9;if puResult == prRequestProgram then&#13;&#10;&#9;&#9;if confirmDialog(&quot;Warning!&quot;, &quot;This will erase the program in the panel buffer. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;requestSingleProgram()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Request bulk dump from device&#13;&#10;&#9;if puResult == prRequestSysexDump then&#13;&#10;&#9;&#9;if confirmDialog(&quot;Warning!&quot;, &quot;This will erase the whole RAM bank in the panel. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;requestProgramBank()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Store current program on device&#13;&#10;&#9;if puResult == prWriteProgram then&#13;&#10;&#9;&#9;if confirmDialog(&quot;Warning!&quot;, &quot;This will erase selected program on the hardware. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;storeSingleProgram()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Store bulk dump on device&#13;&#10;&#9;if puResult == prWriteSysexDump then&#13;&#10;&#9;&#9;if confirmDialog(&quot;Warning!&quot;, &quot;This will erase the whole program bank on the hardware. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;storeProgramBank()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if puResult == -1 then&#13;&#10;&#9;&#9;debugActions()&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="a051185f5bf3431c9b4b9e5e8ed8e8cf"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="openPresetPopup" luaMethodCode="function openPresetPopup(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local popupWin = bankListPopup(true)&#13;&#10;&#13;&#10;&#9;processPopupResult(popupWin:show(0, 0, 0, 22))&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="30e9c984af9a4967b08f02c3add5d34d"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="Osc1" uuid="04eef9b57cbc4816a24c81b68ffe8d3c">
            <luaMethod luaMethodName="drawOsc1Waveforms" luaMethodCode="function drawOsc1Waveforms(comp, g)&#10;&#9;&#13;&#10;&#9;drawSaw(comp, g, 22, 5, 10, 2)&#13;&#10;&#9;drawPulse(comp, g, 31, 5, 10, 2)&#13;&#10;&#9;drawTriangle(comp, g, 60, 5, 10, 2)&#13;&#10;&#9;drawSine(comp, g, 76, 5, 2)&#9;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="93e02e5b97fc4304b23151a3218887ab"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="cycleOsc1Waveforms" luaMethodCode="function cycleOsc1Waveforms(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local osc1WFAddress&#13;&#10;&#9;local currentValue&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;osc1WFAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + OSC1_WAVEFORM_DISP&#13;&#10;&#9;&#9;currentValue = dataBuffer[osc1WFAddress]&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;currentValue = vocoderBuffer[OSC1_WAVEFORM_VCD_DISP]&#13;&#10;&#9;end&#13;&#10;&#9; &#13;&#10;&#9;currentValue = currentValue + 1&#13;&#10;&#13;&#10;&#9;if currentValue &gt; 7 then&#13;&#10;&#9;&#9;currentValue = 0&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setOsc1WaveformByValue(currentValue)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="e7d7c2b0a00c472092f4d7ab32680181"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setOsc1Waveform" luaMethodCode="function setOsc1Waveform(comp)&#13;&#10;&#13;&#10;&#9;local selectedWave = getModPropN(comp:getOwner(), &quot;modulatorCustomIndex&quot;)&#13;&#10;&#13;&#10;&#9;setOsc1WaveformByValue(selectedWave)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="df29c913bd9048faa5360ba4443f8307"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setOsc1WaveformByValue" luaMethodCode="function setOsc1WaveformByValue(selectedWave, muteOutput)&#13;&#10;&#13;&#10;&#9;local blockMessage = false&#13;&#10;&#13;&#10;&#9;if muteOutput ~= nil then&#13;&#10;&#9;&#9;blockMessage = muteOutput&#13;&#10;&#9;end&#10;&#9;&#13;&#10;&#9;local lightModName = &quot;imgOsc1Lamp&quot;&#13;&#10;&#9;local osc1WFAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + OSC1_WAVEFORM_DISP&#13;&#10;&#9;local currentWave&#13;&#10;&#13;&#10;&#9;turnLightsOff(lightModName, 7)&#13;&#10;&#13;&#10;&#9;setLightState(string.format(&quot;%s%d&quot;, lightModName, selectedWave), true)&#13;&#10;&#13;&#10;&#9;if not blockMessage then&#13;&#10;&#13;&#10;&#9;&#9;checkLCDModeEnabled()&#13;&#10;&#13;&#10;&#9;&#9;-- Osc1 Waveform = 49(H)&#13;&#10;&#9;&#9;local lsms = calculateLSBMSB(selectedWave)&#13;&#10;&#9;&#9;local midiChan = getGlobalMidiChannel()&#13;&#10;&#9;&#9;local seMessage = copyTable(sharedValues.osc1SEValues)&#13;&#10;&#13;&#10;&#9;&#9;seMessage[3], seMessage[8], seMessage[9] = midiChan, lsms[1], lsms[2] &#13;&#10;&#9;&#13;&#10;&#9;&#9;sendSysExMessage(seMessage)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;currentWave = dataBuffer[osc1WFAddress]&#13;&#10;&#9;&#9;dataBuffer[osc1WFAddress] = selectedWave&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;currentWave = vocoderBuffer[OSC1_WAVEFORM_VCD_DISP]&#13;&#10;&#9;&#9;vocoderBuffer[OSC1_WAVEFORM_VCD_DISP] = selectedWave&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- DWGS assertions&#13;&#10;&#9;if tonumber(selectedWave) == 5 then&#13;&#10;&#13;&#10;&#9;&#9;-- Any =&gt; DWGS&#13;&#10;&#9;&#9;if (currentWave ~= 5) or (sharedValues.resetDWGS) then&#13;&#10;&#9;&#9;&#9;setDWGSWaveform(true)&#13;&#10;&#9;&#9;end&#13;&#10; &#9;else&#13;&#10;&#13;&#10;&#9;&#9;-- DWGS =&gt; Any&#13;&#10;&#9;&#9;if (currentWave == 5) or (sharedValues.resetDWGS) then&#13;&#10;&#9;&#9;&#9;setDWGSWaveform(false)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="4540c552dbc3432c846edcc7f9cd308d"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="Osc2" uuid="103cf4fbc09e4b25b7dab3707dd813b0">
            <luaMethod luaMethodName="drawOsc2Waveforms" luaMethodCode="function drawOsc2Waveforms(comp, g)&#10;&#9;&#13;&#10;&#9;drawSaw(comp, g, 22, 5, 10, 2)&#13;&#10;&#9;drawPulse(comp, g, 31, 5, 10, 2)&#13;&#10;&#9;drawTriangle(comp, g, 60, 5, 10, 2)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="36b7b0a782fa4bef9c2b63db3866da78"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="cycleOsc2Waveforms" luaMethodCode="function cycleOsc2Waveforms(mod, value, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local osc2WFAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + OSC2_WAVEFORM_DISP&#13;&#10;&#9;local currentValue = extractPackByte(dataBuffer[osc2WFAddress], 0, 1)&#13;&#10;&#13;&#10;&#9;currentValue = currentValue + 1&#13;&#10;&#10;&#9;if currentValue &gt; 2 then&#13;&#10;&#9;&#9;currentValue = 0&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setOsc2WaveformByValue(currentValue)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="2669eab415ed4283bf8c0242ec1cf4f3"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setOsc2Waveform" luaMethodCode="function setOsc2Waveform(comp)&#10;&#13;&#10;&#9;-- Ignore changes if lamp disabled (Vocoder)&#13;&#10;&#9;if comp:getPropertyInt(&quot;componentDisabled&quot;) == 1 then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local selectedWave = getModProp(comp:getOwner(), &quot;modulatorCustomIndex&quot;)&#13;&#10;&#9;&#13;&#10;&#9;setOsc2WaveformByValue(selectedWave)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="0e64dbe26f1141a1a4ebe2b0e375bb64"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setOsc2WaveformByValue" luaMethodCode="function setOsc2WaveformByValue(selectedWave, muteOutput)&#13;&#10;&#13;&#10;&#9;local blockMessage = false&#13;&#10;&#13;&#10;&#9;if muteOutput ~= nil then&#13;&#10;&#9;&#9;blockMessage = muteOutput&#13;&#10;&#9;end&#10;&#13;&#10;&#9;local lightModName = &quot;imgOsc2Lamp&quot;&#13;&#10;&#13;&#10;&#9;-- Get OSC2 waveform byte number in data buffer&#13;&#10;&#9;local osc2WFAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + OSC2_WAVEFORM_DISP&#13;&#10;&#13;&#10;&#9;turnLightsOff(lightModName, 2)&#13;&#10;&#13;&#10;&#9;setLightState(string.format(&quot;%s%d&quot;, lightModName, selectedWave), true)&#13;&#10;&#13;&#10;&#9;if not blockMessage then&#13;&#10;&#13;&#10;&#9;&#9;checkLCDModeEnabled()&#13;&#10;&#13;&#10;&#9;&#9;-- Osc2 Waveform = 4D(H)&#13;&#10;&#9;&#9;local lsms = calculateLSBMSB(selectedWave)&#13;&#10;&#9;&#9;local midiChan = getGlobalMidiChannel()&#13;&#10;&#9;&#9;local seMessage = copyTable(sharedValues.osc2SEValues)&#13;&#10;&#13;&#10;&#9;&#9;seMessage[3], seMessage[8], seMessage[9] = midiChan, lsms[1], lsms[2] &#13;&#10;&#9;&#13;&#10;&#9;&#9;sendSysExMessage(seMessage)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Pack current value into assigned byte&#13;&#10;&#9;dataBuffer[osc2WFAddress] = packBitsToByte(dataBuffer[osc2WFAddress], selectedWave, 0, 1)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="803e75d0ab3d4d3699c5ca999e61f8b1"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="OscMod" uuid="6050d163e66e4733a5ba3894d1d518fe">
            <luaMethod luaMethodName="calculateOscMod" luaMethodCode="function calculateOscMod(ring, sync)&#10;&#9;&#13;&#10;&#9;if (ring or sync) == false then&#13;&#10;&#9;&#9;return 0&#13;&#10;&#9;elseif (ring == true) and (sync == false) then&#13;&#10;&#9;&#9;return 1&#13;&#10;&#9;elseif (ring == false) and (sync == true) then&#13;&#10;&#9;&#9;return 2&#13;&#10;&#9;else&#13;&#10;&#9;&#9;return 3&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="154c98c06a3b4544abfba3aacfd5e780"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="processOscModData" luaMethodCode="function processOscModData(modValue, muteOutput)&#10;&#9;&#13;&#10;&#9;local ring&#13;&#10;&#9;local sync&#13;&#10;&#9;local OscModAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + OSCMODULATION_DISP&#13;&#10;&#13;&#10;&#9;if modValue == 0 then&#13;&#10;&#9;&#9;ring, sync = false, false&#13;&#10;&#9;elseif modValue == 1 then&#13;&#10;&#9;&#9;ring, sync = true, false&#13;&#10;&#9;elseif modValue == 2 then&#13;&#10;&#9;&#9;ring, sync = false, true&#13;&#10;&#9;else&#13;&#10;&#9;&#9;ring, sync = true, true&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setLightState(&quot;imgOsc2ModLamp0&quot;, ring)&#13;&#10;&#9;setLightState(&quot;imgOsc2ModLamp1&quot;, sync)&#13;&#10;&#13;&#10;&#9;dataBuffer[OscModAddress] = packBitsToByte(dataBuffer[OscModAddress], calculateOscMod(ring, sync), 4, 5)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="8285b8ae917d4e57a20c993ff787634b"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="cycleOscMod" luaMethodCode="function cycleOscMod(mod, value, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local OscModAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + OSCMODULATION_DISP&#13;&#10;&#9;local currentValue = extractPackByte(dataBuffer[OscModAddress], 4, 5)&#13;&#10;&#13;&#10;&#9;currentValue = currentValue + 1&#13;&#10;&#10;&#9;if currentValue &gt; 3 then&#13;&#10;&#9;&#9;currentValue = 0&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;processOscModData(currentValue)&#13;&#10;&#9;sendOscModMessage(currentValue)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="546886687e884e25acb97c9dfa8c5ae3"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="sendOscModMessage" luaMethodCode="function sendOscModMessage(oscmodMode)&#13;&#10;&#13;&#10;&#9;checkLCDModeEnabled()&#13;&#10;&#13;&#10;&#9;-- Osc Modulation = 4E(H)&#13;&#10;&#9;local lsms = calculateLSBMSB(oscmodMode)&#13;&#10;&#9;local midiChan = getGlobalMidiChannel()&#13;&#10;&#9;local seMessage = copyTable(sharedValues.oscModSEValues)&#13;&#10;&#13;&#10;&#9;seMessage[3], seMessage[8], seMessage[9] = midiChan, lsms[1], lsms[2] &#13;&#10;&#13;&#10;&#9;sendSysExMessage(seMessage)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="aeb2bd5006ca41f083fc79f23790a96c"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setOscModMode" luaMethodCode="function setOscModMode(comp)&#13;&#10;&#13;&#10;&#9;-- Ignore changes if lamp disabled (Vocoder)&#13;&#10;&#9;if comp:getPropertyInt(&quot;componentDisabled&quot;) == 1 then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local ownerMod = getModProp(comp:getOwner(), &quot;name&quot;)&#13;&#10;&#9;local OscModAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + OSCMODULATION_DISP&#13;&#10;&#13;&#10;&#9;setLightState(ownerMod, not getLightState(ownerMod))&#13;&#10;&#13;&#10;&#9;local ringLight = getLightState(&quot;imgOsc2ModLamp0&quot;)&#13;&#10;&#9;local syncLight = getLightState(&quot;imgOsc2ModLamp1&quot;)&#9;&#13;&#10;&#9;local oscmodMode = calculateOscMod(ringLight, syncLight)&#13;&#10;&#13;&#10;&#9;sendOscModMessage(oscmodMode)&#13;&#10;&#13;&#10;&#9;dataBuffer[OscModAddress] = packBitsToByte(dataBuffer[OscModAddress], oscmodMode, 4, 5)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="4895022d324c4b51ac71a920f0489fc8"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="lightsControls" uuid="969fe2f02b3141a39f8747e7d0b05a36">
            <luaMethod luaMethodName="turnLightsOff" luaMethodCode="function turnLightsOff(sharedName, lightsCount)&#10;&#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;for i = 0, lightsCount do&#13;&#10;&#9;&#9;setLightState(string.format(&quot;%s%d&quot;, sharedName, i), false)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="e82bc29fb03f4165bab3558836f3cb12"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="getLightState" luaMethodCode="function getLightState(lightModName)&#10;&#9;&#13;&#10;&#9;if getCompProp(lightModName, &quot;uiImageResource&quot;) == &quot;radio_on&quot; then&#13;&#10;&#9;&#9;return true&#13;&#10;&#9;else&#13;&#10;&#9;&#9;return false&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="435a52ad477d45669371638bb3076b35"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setLightState" luaMethodCode="function setLightState(lightModName, lightStatus)&#10;&#13;&#10;&#9;if lightStatus == true then&#13;&#10;&#9;&#9;setCompProp(lightModName, &quot;uiImageResource&quot;, &quot;radio_on&quot;)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;setCompProp(lightModName, &quot;uiImageResource&quot;, &quot;radio_off&quot;)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="58eb7a533d69437e95837a6a7b5fb826"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="shutDownTheLights" luaMethodCode="function shutDownTheLights()&#10;&#9;&#13;&#10;&#9;-- Can help to keep correct lights glowing&#13;&#10;&#13;&#10;&#9;turnLightsOff(&quot;imgOsc1Lamp&quot;, 7)&#13;&#10;&#9;turnLightsOff(&quot;imgOsc2Lamp&quot;, 2)&#13;&#10;&#9;turnLightsOff(&quot;imgOsc2ModLamp&quot;, 1)&#13;&#10;&#9;turnLightsOff(&quot;imgFilterTypeLamp&quot;, 3)&#13;&#10;&#9;turnLightsOff(&quot;imgSeqLamp&quot;, 2)&#13;&#10;&#9;turnLightsOff(&quot;imgLFO1Lamp&quot;, 3)&#13;&#10;&#9;turnLightsOff(&quot;imgLFO2Lamp&quot;, 3)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="360815b5b4304fdfa09679c59f6f73bf"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="mainElements" uuid="2ae646c6f4b043968fab579e2021b031">
            <luaMethod luaMethodName="drawLCDScreen" luaMethodCode="&#13;&#10;function drawLCDScreen(comp, g)&#13;&#10;&#13;&#10;&#9;if not panelReady then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local leftBorder = 5&#13;&#10;&#9;local topBorder = 5&#13;&#10;&#9;local fullW = comp:getWidth()&#13;&#10;&#9;local fullH = comp:getHeight()&#13;&#10;&#9;local rectCount = 16&#13;&#10;&#9;local rectSpace = 2&#13;&#10;&#9;local topSpacer = topBorder * 2 + math.floor(rectSpace / 2 + 0.5)&#13;&#10;&#9;local leftSpacer = leftBorder * 2 + math.floor(rectSpace / 2 + 0.5)&#13;&#10;&#13;&#10;&#9;-- Filling dark background&#13;&#10;&#9;g:fillAll(LCD_BASE)&#13;&#10;&#9;g:setColour(skinColors.LCDBacklight)&#13;&#10;&#13;&#10;&#9;-- Filling light green&#13;&#10;&#9;g:fillRoundedRectangle(leftBorder, topBorder, fullW - leftBorder * 2, &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  fullH - topBorder * 2, 2)&#13;&#10;&#13;&#10;&#9;-- Setting a bit darker colour&#13;&#10;&#9;g:setColour(skinColors.LCDDigits)&#13;&#10;&#13;&#10;&#9;-- Filling background squares for chars&#13;&#10;&#9;local i&#9;&#13;&#10;&#9;local j&#13;&#10;&#9;local rectWd = math.floor((fullW - 4 * leftBorder) / rectCount)&#13;&#10;&#9;local rectHg = math.floor((fullH - 4 * topBorder) / 2)&#13;&#10;&#9;local debug = false&#13;&#10;&#13;&#10;&#9;-- Rewritten from scratch&#13;&#10;&#9;for i = 0, rectCount - 1 do&#13;&#10;&#9;&#9;for j = 0, 1 do&#13;&#10;&#9;&#9;&#9;g:fillRect(leftSpacer + i * rectWd, topSpacer + j * rectHg,&#13;&#10;&#9;&#9;&#9;&#9;&#9;   rectWd - rectSpace, rectHg - rectSpace)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Adding some glance&#13;&#10;&#9;g:setGradientFill(ColourGradient(LCD_GLOW_START, fullW, 0, LCD_GLOW_END,&#13;&#10;&#9;&#9;&#9;&#9;&#9;  fullW, fullH / 2, false))&#13;&#10;&#13;&#10;&#9;g:fillRoundedRectangle(1, 1, fullW - 2, fullH - 2, 1)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="852782b57fe14a538a1dc681ac419504"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="showSettings" luaMethodCode="function showSettings(mod, value, source)&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Pretty dumb, but cannot find any better solution&#13;&#10;&#9;if sharedValues.ignoreSettingsButton == true then&#13;&#10;&#9;&#9;sharedValues.ignoreSettingsButton = false&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if value == 1 then&#13;&#10;&#13;&#10;&#9;&#9;local i, devNum = 0, 0&#13;&#10;&#9;&#9;local cDev = &quot;&quot;&#13;&#10;&#9;&#9;local devArr = StringArray()&#13;&#10;&#13;&#10;&#9;&#9;-- Apply stored values to settings controls&#13;&#10;&#9;&#9;setModValue(&quot;btnSendProgramOnStartup&quot;, panelSettings.sendProgOnStartup)&#13;&#10;&#9;&#9;setModValue(&quot;btnSendDataOnProgramChange&quot;, panelSettings.sendOnProgChange)&#13;&#10;&#9;&#9;setModValue(&quot;btnContinuousPolling&quot;, panelSettings.continuousPolling)&#13;&#10;&#9;&#9;setModValue(&quot;btnAutocheckLCDMode&quot;, panelSettings.autocheckLCDMode)&#13;&#10;&#9;&#9;setModValue(&quot;btnSettingsLocalMode&quot;, panelSettings.localMode)&#13;&#10;&#9;&#9;setModValue(&quot;cbClockSource&quot;, panelSettings.clockSource)&#13;&#10;&#9;&#9;setModValue(&quot;btnDisableWarnings&quot;, panelSettings.disableWarnings)&#13;&#10;&#9;&#9;setModValue(&quot;cbColorScheme&quot;, panelSettings.selectedSkin)&#13;&#10;&#9;&#9;setModValue(&quot;btnRequestDataOnProgramChange&quot;, panelSettings.reqProgOnChange)&#13;&#10;&#13;&#10;&#9;&#9;-- Load MIDI input \ output devices into certain combos&#13;&#10;&#13;&#10;&#9;&#9;-- Input devices list&#13;&#10;&#9;&#9;devArr:addLines(&quot;-- None&quot;)&#13;&#10;&#9;&#9;cDev = panel:getProperty(&quot;panelMidiInputDevice&quot;)&#13;&#10;&#13;&#10;&#9;&#9;for i = 0, utils.getMidiInputDevices():size() - 1 do&#13;&#10;&#9;&#9;&#9;devArr:addLines(utils.getMidiInputDevices():get(i))&#13;&#10;&#13;&#10;&#9;&#9;&#9;if cDev == utils.getMidiInputDevices():get(i) then&#13;&#10;&#9;&#9;&#9;&#9;devNum = i + 1&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;getComp(&quot;cbInputMIDIDevice&quot;):setProperty(&quot;uiComboContent&quot;, devArr:joinIntoString(&quot;\n&quot;, 0, devArr:size()), false)&#13;&#10;&#9;&#9;getComp(&quot;cbInputMIDIDevice&quot;):setSelectedItemIndex(devNum, true)&#13;&#10;&#13;&#10;&#9;&#9;devNum = 0&#13;&#10;&#13;&#10;&#9;&#9;-- Output device list&#13;&#10;&#9;&#9;devArr:clear()&#13;&#10;&#9;&#9;devArr:addLines(&quot;-- None&quot;)&#13;&#10;&#9;&#9;cDev = panel:getProperty(&quot;panelMidiOutputDevice&quot;)&#13;&#10;&#13;&#10;&#9;&#9;for i = 0, utils.getMidiOutputDevices():size() - 1 do&#13;&#10;&#9;&#9;&#9;devArr:addLines(utils.getMidiOutputDevices():get(i))&#13;&#10;&#13;&#10;&#9;&#9;&#9;if cDev == utils.getMidiOutputDevices():get(i) then&#13;&#10;&#9;&#9;&#9;&#9;devNum = i + 1&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;getComp(&quot;cbOutputMIDIDevice&quot;):setProperty(&quot;uiComboContent&quot;, devArr:joinIntoString(&quot;\n&quot;, 0, devArr:size()), false)&#13;&#10;&#9;&#9;getComp(&quot;cbOutputMIDIDevice&quot;):setSelectedItemIndex(devNum, true)&#13;&#10;&#13;&#10;&#9;&#9;-- Input / output channels&#13;&#10;&#9;&#9;setModValue(&quot;cbInputMIDIChannel&quot;, panel:getPropertyInt(&quot;panelMidiInputChannelDevice&quot;))&#13;&#10;&#9;&#9;setModValue(&quot;cbOutputMIDIChannel&quot;, panel:getPropertyInt(&quot;panelMidiOutputChannelDevice&quot;) - 1)&#13;&#10;&#13;&#10;&#9;&#9;showLayer(&quot;Settings&quot;)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;panelSettings.sendProgOnStartup = getModValue(&quot;btnSendProgramOnStartup&quot;)&#13;&#10;&#9;&#9;panelSettings.sendOnProgChange = getModValue(&quot;btnSendDataOnProgramChange&quot;)&#13;&#10;&#9;&#9;panelSettings.continuousPolling = getModValue(&quot;btnContinuousPolling&quot;)&#13;&#10;&#9;&#9;panelSettings.autocheckLCDMode = getModValue(&quot;btnAutocheckLCDMode&quot;)&#13;&#10;&#9;&#9;panelSettings.localMode = getModValue(&quot;btnSettingsLocalMode&quot;)&#13;&#10;&#9;&#9;panelSettings.clockSource = getModValue(&quot;cbClockSource&quot;)&#13;&#10;&#9;&#9;panelSettings.disableWarnings = getModValue(&quot;btnDisableWarnings&quot;)&#13;&#10;&#9;&#9;panelSettings.reqProgOnChange = getModValue(&quot;btnRequestDataOnProgramChange&quot;)&#13;&#10;&#13;&#10;&#9;&#9;-- Start or stop poller now&#13;&#10;&#9;&#9;if panelSettings.continuousPolling == 1 then&#13;&#10;&#9;&#9;&#9;synthPoller()&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;timer:stopTimer(POLL_TIMER_ID)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Apply MIDI settings&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiInputDevice&quot;, getComp(&quot;cbInputMIDIDevice&quot;):getComponentText())&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiOutputDevice&quot;, getComp(&quot;cbOutputMIDIDevice&quot;):getComponentText())&#13;&#10;&#9;&#9;panel:setProperty(&quot;panelMidiInputChannelDevice&quot;, getModValue(&quot;cbInputMIDIChannel&quot;), true)&#13;&#10;&#9;&#9;panel:setProperty(&quot;panelMidiOutputChannelDevice&quot;, getModValue(&quot;cbOutputMIDIChannel&quot;) + 1, true)&#13;&#10;&#13;&#10;&#9;&#9;if panelSettings.selectedSkin ~= getModValue(&quot;cbColorScheme&quot;) then&#13;&#10;&#9;&#9;&#9;setColorScheme(getModValue(&quot;cbColorScheme&quot;))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Write global settings&#13;&#10;&#9;&#9;saveGlobalSettings()&#13;&#10;&#13;&#10;&#9;&#9;externalRepaintInfoWindow()&#13;&#10;&#9;&#9;hideLayer(&quot;Settings&quot;)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="213656e88e61458bbfbf6283ffb90390"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="paintSettingsBG" luaMethodCode="function paintSettingsBG(mod, g)&#10;&#13;&#10;&#9;local canvasW = mod:getWidth()&#13;&#10;&#9;local canvasH = mod:getHeight()&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:fillRoundedRectangle(0, 0, canvasW, canvasH, 2)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="4bdcd8ea4a2a4b79b287eaa8e8c23ba5"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="Filter" uuid="5906f043a8804ca6a58aada32945aba8">
            <luaMethod luaMethodName="cycleFilterTypes" luaMethodCode="function cycleFilterTypes(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local FilterTypeAddress&#13;&#10;&#9;local currentValue&#13;&#10;&#9;local modMax = 3&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;FilterTypeAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + FILTER_TYPE_DISP&#13;&#10;&#9;&#9;currentValue = dataBuffer[FilterTypeAddress]&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;modMax = 4&#13;&#10;&#9;&#9;currentValue = vocoderBuffer[FILTER_TYPE_VCD_DISP]&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;currentValue = currentValue + 1&#13;&#10;&#13;&#10;&#9;if currentValue &gt; modMax then&#13;&#10;&#9;&#9;currentValue = 0&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setFilterTypeByValue(currentValue)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="afae2b38f74641d2b58c3c2b5095ff4b"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setFilterType" luaMethodCode="function setFilterType(comp)&#10;&#13;&#10;&#9;local selectedFilter = getModPropN(comp:getOwner(), &quot;modulatorCustomIndex&quot;)&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;FilterTypeAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + FILTER_TYPE_DISP&#13;&#10;&#9;&#9;currentValue = dataBuffer[FilterTypeAddress]&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;currentValue = vocoderBuffer[FILTER_TYPE_VCD_DISP]&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmVocoder then&#13;&#10;&#13;&#10;&#9;&#9;-- Vocoder filter have range from 0 to 4, 0 - no light indication&#13;&#10;&#9;&#9;if (currentValue - 1) == selectedFilter then&#13;&#10;&#9;&#9;&#9;setFilterTypeByValue(0)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;setFilterTypeByValue(selectedFilter + 1)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#9;&#9;setFilterTypeByValue(selectedFilter)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="3eb8a1c6500249439a455db0b4bd5521"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setFilterTypeByValue" luaMethodCode="function setFilterTypeByValue(selectedFilter, muteOutput)&#10;&#13;&#10;&#9;local blockMessage = false&#13;&#10;&#13;&#10;&#9;if muteOutput ~= nil then&#13;&#10;&#9;&#9;blockMessage = muteOutput&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local lightModName = &quot;imgFilterTypeLamp&quot;&#13;&#10;&#9;local FilterTypeAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + FILTER_TYPE_DISP&#13;&#10;&#9;local filterValue = selectedFilter&#13;&#10;&#13;&#10;&#9;turnLightsOff(lightModName, 3)&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmVocoder then&#13;&#10;&#9;&#9;filterValue = selectedFilter - 1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (sharedValues.timbreMode == tmSynth) or &#13;&#10;&#9;   ((sharedValues.timbreMode == tmVocoder) and (selectedFilter &gt; 0)) then&#13;&#10;&#13;&#10;&#9;&#9;setLightState(string.format(&quot;%s%d&quot;, lightModName, filterValue), true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if not blockMessage then&#13;&#10;&#13;&#10;&#9;&#9;checkLCDModeEnabled()&#13;&#10;&#13;&#10;&#9;&#9;-- Filter type = 54(H)&#13;&#10;&#9;&#9;local lsms = calculateLSBMSB(selectedFilter)&#13;&#10;&#9;&#9;local midiChan = getGlobalMidiChannel()&#13;&#10;&#9;&#9;local seMessage = copyTable(sharedValues.filterSEValues)&#13;&#10;&#13;&#10;&#9;&#9;seMessage[3], seMessage[8], seMessage[9] = midiChan, lsms[1], lsms[2] &#13;&#10;&#9;&#13;&#10;&#9;&#9;sendSysExMessage(seMessage)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;dataBuffer[FilterTypeAddress] = selectedFilter&#13;&#10;&#9;else&#13;&#10;&#9;&#9;vocoderBuffer[FILTER_TYPE_VCD_DISP] = selectedFilter&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="0191a388d4d947eb9d8f7ef026df67a7"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="sequencerUI" uuid="09c5cf3ad68a4d9ba83d1887eaf72336">
            <luaMethod luaMethodName="paintSequencer" luaMethodCode="function paintSequencer(comp, g)&#10;&#10;&#9;local i&#13;&#10;&#9;local roundRect = 3&#10;&#9;local canvasW = comp:getWidth()&#10;&#9;local canvasH = comp:getHeight()&#10;&#9;local canvasMid = canvasH / 2&#13;&#10;&#9;local figStartY = canvasMid&#10;&#9;local dashLen = 9&#10;&#9;local dashSpace = 1&#10;&#9;local dashCount = math.floor(canvasW / dashLen)&#13;&#10;&#9;local graphW = math.ceil(canvasW / 16)&#10;&#9;local maxGraphHeight = canvasMid * 0.75&#10;&#9;local drawProportion&#13;&#10;&#9;local lastStep = modByName(&quot;knobSeqLastStep&quot;):getValue()&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:fillRoundedRectangle(0, 0, canvasW, canvasH, roundRect)&#13;&#10;&#13;&#10;&#9;-- Paint background, zebra-style&#13;&#10;&#9;g:setColour(skinColors.customBGAlter)&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;if i % 2 &gt; 0 then&#13;&#10;&#9;&#9;&#9;if i &lt; 15 then&#13;&#10;&#9;&#9;&#9;&#9;g:fillRect(i * graphW, 0, graphW, canvasH)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;g:fillRect(i * graphW, 0, graphW - roundRect, canvasH)&#13;&#10;&#9;&#9;&#9;&#9;g:fillRoundedRectangle(i * graphW, 0, graphW, canvasH, roundRect)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#10;&#9;&#9;drawProportion = maxGraphHeight / getSeqStepMaxVal(modByName(string.format(&quot;cbSeqKnob%d&quot;, &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   &#9;sharedValues.selectedSequence + 1)):getValue())[2]&#13;&#10;&#9;else&#13;&#10;&#9;&#9;if sharedValues.selectedSequence == 0 then&#13;&#10;&#9;&#9;&#9;maxGraphHeight = canvasH * 0.875&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Start bar from the bottom&#13;&#10;&#9;&#9;&#9;figStartY = canvasH&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;drawProportion = maxGraphHeight / getSeqStepMaxVal(sharedValues.selectedSequence)[2]&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Dashed line only for +/- ranges&#13;&#10;&#9;g:setColour(skinColors.lineColor)&#13;&#10;&#13;&#10;&#9;-- Paint dashed line&#10;&#9;for i = 0, dashCount do&#13;&#10;&#13;&#10;&#9;&#9;if maxGraphHeight &lt; canvasMid then&#13;&#10;&#9;&#9;&#9;g:fillRect(i * dashLen, canvasMid, dashLen - dashSpace, 1)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;g:fillRect(i * dashLen, canvasMid * 1.125, dashLen - dashSpace, 1)&#13;&#10;&#9;&#9;end&#10;&#9;end&#13;&#10;&#10;&#9;local knobVal&#10;&#9;local graphEnd&#10;&#9;&#10;&#9;if sharedValues.selectedSequence == 0 then&#10;&#9;&#9;g:setColour(skinColors.seqOneBars)&#10;&#9;elseif sharedValues.selectedSequence == 1 then&#10;&#9;&#9;g:setColour(skinColors.seqTwoBars)&#10;&#9;else&#10;&#9;&#9;g:setColour(skinColors.seqThreeBars)&#10;&#9;end&#10;&#10;&#9;g:setFont(Font(10.0, 0))&#10;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;if i == lastStep + 1 then&#13;&#10;&#9;&#9;&#9;g:setColour(skinColors.seqGrayedOut)&#13;&#10;&#9;&#9;end&#13;&#10;&#10;&#9;&#9;knobVal = modByName(string.format(&quot;knobSeq%dStep%d&quot;, &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;  sharedValues.selectedSequence + 1, i)):getValue()&#13;&#10;&#13;&#10;&#9;&#9;if knobVal &gt;= 0 then&#13;&#10;&#9;&#9;&#9;g:setOpacity(0.42 - skinColors.seqOpacityMinus)&#13;&#10;&#10;&#9;&#9;&#9;graphEnd = knobVal * drawProportion&#10;&#9;&#9;&#9;g:fillRect((i - 1) * graphW, figStartY - graphEnd, graphW - 1, graphEnd + 1)&#10;&#9;&#9;&#9;g:setOpacity(0.9)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Paint these tiny value labels&#10;&#9;&#9;&#9;g:drawText(tostring(knobVal), (i - 1) * graphW, &#10;&#9;&#9;&#9;           figStartY - graphEnd - 9, 20, 8, Justification(Justification.left), false)  &#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;-- Negative values are more transparent&#13;&#10;&#9;&#9;&#9;g:setOpacity(0.30 - skinColors.seqOpacityMinus)&#13;&#10;&#10;&#9;&#9;&#9;graphEnd = math.abs(knobVal * drawProportion)&#10;&#9;&#9;&#9;g:fillRect((i - 1) * graphW, canvasMid, graphW - 1, graphEnd)&#10;&#9;&#9;&#9;g:setOpacity(0.9)&#13;&#10;&#10;&#9;&#9;&#9;g:drawText(tostring(knobVal), (i - 1) * graphW, &#10;&#9;&#9;&#9;           canvasMid + graphEnd + 2, 20, 8, Justification(Justification.left), false)&#10;&#9;&#9;end&#10;&#9;end&#9;&#10;&#10;&#9;g:setOpacity(1)&#10;end&#13;&#10;                       "
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="7fa91a2adf9e4885a2ee0f71239fa3d2"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="lampFiring" luaMethodCode="function lampFiring(mod, value, source)&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local modName = getModProp(mod, &quot;name&quot;)&#13;&#10;&#13;&#10;&#9;-- Block sequence changing until last control will be set&#13;&#10;&#9;if sharedValues.allowChangeSeq then&#13;&#10;&#9;&#9;selectSequenceByValue(getModPropN(mod, &quot;modulatorCustomIndex&quot;))&#13;&#10;&#9;end&#10;&#13;&#10;&#9;if  ((modName == &quot;knobSeq3Step16&quot;) and (sharedValues.timbreMode == tmSynth)) or&#13;&#10; &#9;&#9;((modName == &quot;knobSeq2Step16&quot;) and (sharedValues.timbreMode == tmVocoder))then&#13;&#10;&#13;&#10;&#9;&#9;sharedValues.allowChangeSeq = true&#13;&#10;&#9;end&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="fc28709c5d1f48d2bb41338a856e1976"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="paintSeq2BG" luaMethodCode="function paintSeq2BG(mod, g)&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:fillRoundedRectangle(0, 0, mod:getWidth(), mod:getHeight(), 2)&#13;&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local spacer = 4&#13;&#10;&#9;local textH = 9&#13;&#10;&#13;&#10;&#9;local mainSeqRect = getCompProp(&quot;uiSequencerScreen&quot;, &quot;componentRectangle&quot;)&#13;&#10;&#9;local mainSeqWidth = getComp(&quot;uiSequencerScreen&quot;):getWidth()&#13;&#10;&#9;local mainSeqWLeft = tonumber(string.sub(mainSeqRect, 1, string.find(mainSeqRect, &quot; &quot;)))&#13;&#10;&#9;local graphW = math.floor(mainSeqWidth / 16 + 0.5)&#13;&#10;&#13;&#10;&#9;local knobSeqBGRect = getCompProp(&quot;uiSeq2BG&quot;, &quot;componentRectangle&quot;)&#13;&#10;&#9;local knobSeqBGLeft = tonumber(string.sub(knobSeqBGRect, 1, string.find(knobSeqBGRect, &quot; &quot;)))&#13;&#10;&#9;local canvasH = mod:getHeight()&#13;&#10;&#13;&#10;&#9;local startX = math.abs(mainSeqWLeft - knobSeqBGLeft) - 2&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.darkText)&#13;&#10;&#9;g:setFont(Font(8.0, 1))&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#13;&#10;&#9;&#9;-- Step numbers&#13;&#10;&#9;&#9;g:drawText(tostring(i), startX + (i - 1) * graphW, spacer, graphW, textH,&#13;&#10;&#9;&#9;&#9;&#9; &#9;&#9;&#9;&#9;     Justification(Justification.centred), false)&#13;&#10;&#13;&#10;&#9;&#9;g:drawText(tostring(i), startX + (i - 1) * graphW, canvasH - (textH + spacer), graphW, textH,&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; Justification(Justification.centred), false)&#13;&#10;&#9;end&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="e0dd5f955f3c4da8a5e26ede810e162d"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="externalRepaintSequencer" luaMethodCode="function externalRepaintSequencer()&#10;&#9;&#13;&#10;&#9;getComp(&quot;uiSequencerScreen&quot;):repaint()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="aa62430a658244baaacffa59d9c1f742"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="lampFiringComp" luaMethodCode="function lampFiringComp(comp, value, source)&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Ignore changes if lamp disabled (Vocoder)&#13;&#10;&#9;if comp:getPropertyInt(&quot;componentDisabled&quot;) == 1 then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;selectSequenceByValue(getModPropN(comp:getOwner(), &quot;modulatorCustomIndex&quot;))&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="fff2a2799c5947f1a3a1548c09477983"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="sequencerMouseDown" luaMethodCode="function sequencerMouseDown(comp, event)&#13;&#10;&#13;&#10;&#9;local barW = (comp:getWidth() / 16)&#13;&#10;&#9;local cBar = math.ceil(event.x / barW)&#13;&#10;&#13;&#10;&#9;-- Catch knob name and value to operate on it&#13;&#10;&#9;sharedValues.sequencerKnob = string.format(&quot;knobSeq%dStep%d&quot;, sharedValues.selectedSequence + 1, cBar)&#13;&#10;&#9;sharedValues.sequencerKnobValue = getModValue(sharedValues.sequencerKnob)&#13;&#10;&#13;&#10;&#9;sharedValues.sequencerStartY = event.y&#13;&#10;&#9;sharedValues.isSequencerDragging = true&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="ecbba30aa0e94805a8d78cc384cae4fc"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="sequencerMouseUp" luaMethodCode="function sequencerMouseUp()&#10;&#13;&#10;&#9;sharedValues.isSequencerDragging = false&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="d6eb0263dabc453bb3151c95dd2d8462"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="sequencerMouseDrag" luaMethodCode="function sequencerMouseDrag(comp, event)&#10;&#13;&#10;&#9;if sharedValues.isSequencerDragging == true then&#13;&#10;&#13;&#10;&#9;&#9;local bounds&#13;&#10;&#9;&#9;local newValue&#13;&#10;&#9;&#9;local compH = comp:getHeight()&#13;&#10;&#9;&#9;local ratio, barRatio&#13;&#10;&#9;&#9;local deltaY = sharedValues.sequencerStartY - event.y&#13;&#10;&#9;&#9;local currKnobValue = getModValue(sharedValues.sequencerKnob)&#13;&#10;&#13;&#10;&#9;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;&#9;bounds = getSeqStepMaxVal(modByName(string.format(&quot;cbSeqKnob%d&quot;, &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;sharedValues.selectedSequence + 1)):getValue())&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;bounds = getSeqStepMaxVal(sharedValues.selectedSequence)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if bounds[1] &lt; 0 then&#13;&#10;&#9;&#9;&#9;barRatio = 1.25&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;barRatio = 1.125&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;ratio = (math.abs(bounds[1]) + math.abs(bounds[2])) / compH&#13;&#10;&#13;&#10;&#9;&#9;newValue = math.floor(sharedValues.sequencerKnobValue + (deltaY * ratio * barRatio))&#13;&#10;&#13;&#10;&#9;&#9;-- Set min or max values if they were exceeded&#13;&#10;&#9;&#9;if newValue &lt; bounds[1] then&#13;&#10; &#9;&#9;&#9;newValue = bounds[1]&#13;&#10; &#9;&#9;elseif newValue &gt; bounds[2] then&#13;&#10;&#9;&#9;&#9;newValue = bounds[2]&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;modByName(sharedValues.sequencerKnob):setModulatorValue(newValue, false, true, false)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="4cf6a7906aec4f70b9c7c9fff1008bca"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="selectSequenceByValue" luaMethodCode="function selectSequenceByValue(seqNumber)&#13;&#10;&#10;&#9;if sharedValues.selectedSequence ~= seqNumber then&#13;&#10;&#10;&#9;&#9;turnLightsOff(&quot;imgSeqLamp&quot;, 2)&#10;&#9;&#9;setLightState(string.format(&quot;imgSeqLamp%d&quot;, seqNumber), true)&#10;&#9;&#9;sharedValues.selectedSequence = seqNumber&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Repaint SEQ graph since modulator value is changed&#10;&#9;getComp(&quot;uiSequencerScreen&quot;):repaint()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="1adec91562f84231a649a7425d383c5b"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="sequencerMouseDblClick" luaMethodCode="function sequencerMouseDblClick(comp, event)&#13;&#10;&#9;-- Resetting related knob to its default value by double click&#13;&#10;&#13;&#10;&#9;local barW = (comp:getWidth() / 16)&#13;&#10;&#9;local cBar = math.ceil(event.x / barW)&#13;&#10;&#13;&#10;&#9;local opKnob = string.format(&quot;knobSeq%dStep%d&quot;, sharedValues.selectedSequence + 1, cBar)&#13;&#10;&#13;&#10;&#9;setModValue(opKnob, getCompPropN(opKnob, &quot;uiSliderDoubleClickValue&quot;))&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="08e8e20b05b0482d96b7c8cd04626621"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="Timbre" uuid="5476ebc99ec24beebd16477e21403842">
            <luaMethod luaMethodName="setSelectedTimbre" luaMethodCode="function setSelectedTimbre(mod, value, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local selTimbre = tonumber(getModProp(mod, &quot;modulatorCustomIndex&quot;))&#13;&#10;&#13;&#10;&#9;if sharedValues.selectedTimbre == selTimbre then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;selectTimbreByValue(selTimbre, false, false)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="5fa168c6615d4141acf6b70beb210318"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="showSplitPointNote" luaMethodCode="function showSplitPointNote(mod, value)&#10;&#9;&#13;&#10;&#9;local octave = math.floor(value / 12) - 1&#13;&#10;&#9;local note = value % 12&#13;&#10;&#9;local noteStr = &quot;&quot;&#13;&#10;&#13;&#10;&#9;if note == 0 then&#13;&#10;&#9;&#9;noteStr = &quot;C&quot;&#13;&#10;&#9;elseif note == 1 then&#13;&#10;&#9;&#9;noteStr = &quot;C#&quot;&#13;&#10;&#9;elseif note == 2 then&#13;&#10;&#9;&#9;noteStr = &quot;D&quot;&#13;&#10;&#9;elseif note == 3 then&#13;&#10;&#9;&#9;noteStr = &quot;D#&quot;&#13;&#10;&#9;elseif note == 4 then&#13;&#10;&#9;&#9;noteStr = &quot;E&quot;&#13;&#10;&#9;elseif note == 5 then&#13;&#10;&#9;&#9;noteStr = &quot;F&quot;&#13;&#10;&#9;elseif note == 6 then&#13;&#10;&#9;&#9;noteStr = &quot;F#&quot;&#13;&#10;&#9;elseif note == 7 then&#13;&#10;&#9;&#9;noteStr = &quot;G&quot;&#13;&#10;&#9;elseif note == 8 then&#13;&#10;&#9;&#9;noteStr = &quot;G#&quot;&#13;&#10;&#9;elseif note == 9 then&#13;&#10;&#9;&#9;noteStr = &quot;A&quot;&#13;&#10;&#9;elseif note == 10 then&#13;&#10;&#9;&#9;noteStr = &quot;A#&quot;&#13;&#10;&#9;elseif note == 11 then&#13;&#10;&#9;&#9;noteStr = &quot;B&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;noteStr = string.format(&quot;%s%d&quot;, noteStr, octave)&#13;&#10;&#13;&#10;&#9;getComp(&quot;lblTimbreSplitPointValue&quot;):setText(noteStr)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="fe41850cad8d4d48934f93c0b40e4fb7"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="selectTimbreByValue" luaMethodCode="function selectTimbreByValue(selTimbre, muteOutput, noSync)&#10;&#13;&#10;&#9;if sharedValues.selectedTimbre == selTimbre then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if selTimbre == 0 then&#13;&#10;&#9;&#9;setLightState(&quot;imgTimbreLamp0&quot;, true)&#13;&#10;&#9;&#9;setLightState(&quot;imgTimbreLamp1&quot;, false)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;setLightState(&quot;imgTimbreLamp0&quot;, false)&#13;&#10;&#9;&#9;setLightState(&quot;imgTimbreLamp1&quot;, true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;sharedValues.selectedTimbre = selTimbre&#13;&#10;&#13;&#10;&#9;if not noSync then&#13;&#10;&#13;&#10;&#9;&#9;if (sharedValues.voiceMode == vmSplit) or (sharedValues.voiceMode == vmDual) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;assertSysExFormulas(selTimbre)&#13;&#10;&#9;&#9;&#9;syncTimbreWithBuffer(selTimbre - 1)&#13;&#10;&#9;&#9;&#9;applyTimbreData(selTimbre, dataBuffer)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if not muteOutput then&#13;&#10;&#13;&#10;&#9;&#9;local midiChan = 0xB0 + getGlobalMidiChannel(true)&#13;&#10;&#9;&#9;local seMessage = {midiChan, 0x5F, 0x7f * sharedValues.selectedTimbre}&#13;&#10;&#13;&#10;&#9;&#9;sendSysExMessage(seMessage)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="0c054419168b47f7a979c508d8bb4422"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="paintRandomizeButton" luaMethodCode="function paintRandomizeButton(mod, g)&#10;&#13;&#10;&#9;local canvasW = mod:getWidth()&#13;&#10;&#9;local canvasH = mod:getHeight()&#13;&#10;&#9;local rectRounding = 2&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.labelTextColor)&#13;&#10;&#9;g:fillRoundedRectangle(0, 0, canvasW, canvasH, rectRounding)&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:setFont(Font(10, 1))&#13;&#10;&#9;g:drawText(&quot;RANDOMIZE&quot;, 4, 3, canvasW, 10, Justification(Justification.left), false)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="10b2bbc485a3411fb58bd89734bdd505"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="LFO1" uuid="9edfc45608fc49129990688d9636defe">
            <luaMethod luaMethodName="drawLFO1Waveforms" luaMethodCode="function drawLFO1Waveforms(comp, g)&#10;&#9;&#13;&#10;&#9;drawSaw(comp, g, 16, 5, 10, 2)&#13;&#10;&#9;drawPulse(comp, g, 26, 5, 10, 2)&#13;&#10;&#9;drawTriangle(comp, g, 55, 5, 10, 2)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="af3656d98b9546d285ea14930b6633f2"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setLFO1Type" luaMethodCode="function setLFO1Type(comp)&#10;&#13;&#10;&#9;local selectedType = getModProp(comp:getOwner(), &quot;modulatorCustomIndex&quot;)&#13;&#10;&#13;&#10;&#9;setLFO1TypeByValue(selectedType)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="5d59bd498d674451bd0877f546e81c65"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="cycleLFO1Type" luaMethodCode="function cycleLFO1Type(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local LFO1WFAddress&#13;&#10;&#9;local currentValue&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;LFO1WFAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + LFO1_TYPE_DISP&#13;&#10;&#9;&#9;currentValue = extractPackByte(dataBuffer[LFO1WFAddress], 0, 1)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;currentValue = extractPackByte(vocoderBuffer[LFO1_TYPE_VCD_DISP], 0, 1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;currentValue = currentValue + 1&#13;&#10;&#13;&#10;&#9;if currentValue &gt; 3 then&#13;&#10;&#9;&#9;currentValue = 0&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setLFO1TypeByValue(currentValue)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="2aa9edfd4cf94bc19b441293f3b8098d"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setLFO1TypeByValue" luaMethodCode="function setLFO1TypeByValue(selectedType, muteOutput)&#13;&#10;&#10;&#9;local blockMessage = false&#13;&#10;&#13;&#10;&#9;if muteOutput ~= nil then&#13;&#10;&#9;&#9;blockMessage = muteOutput&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local lightModName = &quot;imgLFO1Lamp&quot;&#13;&#10;&#9;local LFO1WFAddress&#13;&#10;&#13;&#10;&#9;turnLightsOff(lightModName, 3)&#13;&#10;&#13;&#10;&#9;setLightState(string.format(&quot;%s%d&quot;, lightModName, selectedType), true)&#13;&#10;&#13;&#10;&#9;if not blockMessage then&#13;&#10;&#13;&#10;&#9;&#9;checkLCDModeEnabled()&#13;&#10;&#13;&#10;&#9;&#9;-- LFO1 type = 68(H)&#13;&#10;&#9;&#9;local lsms = calculateLSBMSB(selectedType)&#13;&#10;&#9;&#9;local midiChan = getGlobalMidiChannel()&#13;&#10;&#9;&#9;local seMessage = copyTable(sharedValues.LFO1SEValues)&#13;&#10;&#13;&#10;&#9;&#9;seMessage[3], seMessage[8], seMessage[9] = midiChan, lsms[1], lsms[2] &#13;&#10;&#9;&#13;&#10;&#9;&#9;sendSysExMessage(seMessage)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;LFO1WFAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + LFO1_TYPE_DISP&#13;&#10;&#9;&#9;dataBuffer[LFO1WFAddress] = packBitsToByte(dataBuffer[LFO1WFAddress], selectedType, 0, 1)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;vocoderBuffer[LFO1_TYPE_VCD_DISP] = packBitsToByte(vocoderBuffer[LFO1_TYPE_VCD_DISP], selectedType, 0, 1)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="9a7fc690a3464ee8a497ccccea6752ba"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="LFO2" uuid="54fa8d3bfee94fc0b76a3aa761189e5f">
            <luaMethod luaMethodName="drawLFO2Waveforms" luaMethodCode="function drawLFO2Waveforms(comp, g)&#13;&#10;&#9;&#13;&#10;&#9;drawSaw(comp, g, 16, 5, 10, 2)&#13;&#10;&#9;drawPulse(comp, g, 26, 5, 10, 2, true)&#13;&#10;&#9;drawSine(comp, g, 51, 5, 2)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="491dd066b28a433a9fbde678afaada2c"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setLFO2Type" luaMethodCode="function setLFO2Type(comp)&#13;&#10;&#10;&#9;local selectedType = getModProp(comp:getOwner(), &quot;modulatorCustomIndex&quot;)&#13;&#10;&#13;&#10;&#9;setLFO2TypeByValue(selectedType)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="dcb5fcc169bb4b5a8df14b1ed02bbfae"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="cycleLFO2Type" luaMethodCode="function cycleLFO2Type(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local LFO2WFAddress&#13;&#10;&#9;local currentValue&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;LFO2WFAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + LFO2_TYPE_DISP&#13;&#10;&#9;&#9;currentValue = extractPackByte(dataBuffer[LFO2WFAddress], 0, 1)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;currentValue = extractPackByte(vocoderBuffer[LFO2_TYPE_VCD_DISP], 0, 1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;currentValue = currentValue + 1&#13;&#10;&#13;&#10;&#9;if currentValue &gt; 3 then&#13;&#10;&#9;&#9;currentValue = 0&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setLFO2TypeByValue(currentValue)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="f4bf593a640945a8b5a2f1b235a5f19e"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="setLFO2TypeByValue" luaMethodCode="function setLFO2TypeByValue(selectedType, muteOutput)&#13;&#10;&#10;&#9;local blockMessage = false&#13;&#10;&#13;&#10;&#9;if muteOutput ~= nil then&#13;&#10;&#9;&#9;blockMessage = muteOutput&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local lightModName = &quot;imgLFO2Lamp&quot;&#13;&#10;&#9;local LFO2WFAddress&#13;&#10;&#13;&#10;&#9;turnLightsOff(lightModName, 3)&#13;&#10;&#13;&#10;&#9;setLightState(string.format(&quot;%s%d&quot;, lightModName, selectedType), true)&#13;&#10;&#13;&#10;&#9;if not blockMessage then&#13;&#10;&#13;&#10;&#9;&#9;checkLCDModeEnabled()&#13;&#10;&#13;&#10;&#9;&#9;-- LFO2 type = 6D(H)&#13;&#10;&#9;&#9;local lsms = calculateLSBMSB(selectedType)&#13;&#10;&#9;&#9;local midiChan = getGlobalMidiChannel()&#13;&#10;&#9;&#9;local seMessage = copyTable(sharedValues.LFO2SEValues)&#13;&#10;&#13;&#10;&#9;&#9;seMessage[3], seMessage[8], seMessage[9] = midiChan, lsms[1], lsms[2] &#13;&#10;&#9;&#13;&#10;&#9;&#9;sendSysExMessage(seMessage)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;LFO2WFAddress = TIMBRE_ONE_STARTBYTE + (sharedValues.selectedTimbre * TIMBRE_DATA_SIZE) + LFO2_TYPE_DISP&#13;&#10;&#9;&#9;dataBuffer[LFO2WFAddress] = packBitsToByte(dataBuffer[LFO2WFAddress], selectedType, 0, 1)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;vocoderBuffer[LFO2_TYPE_VCD_DISP] = packBitsToByte(vocoderBuffer[LFO2_TYPE_VCD_DISP], selectedType, 0, 1)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="ee16076e16b94b4da9462dd145e0fd4a"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="Figures" uuid="e1bda990f49141ce97c0640d561bc8c4">
            <luaMethod luaMethodName="drawSine" luaMethodCode="function drawSine(comp, g, startY, spacer, lineW)&#10;&#9;&#13;&#10;&#9;g:setColour(skinColors.lineColor)&#13;&#10;&#13;&#10;&#9;local figureW = comp:getWidth() - (2 * spacer)&#13;&#10; &#9;local sinCoeff = (2 * math.pi) / figureW&#13;&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local prevX = 0&#13;&#10;&#9;local prevY = startY&#13;&#10;&#9;local sinVal&#13;&#10;&#13;&#10;&#9;-- Eh, looks like drawing a simple sine is not that easy task to me&#13;&#10;&#9;for i = 0, figureW - 1 do&#13;&#10;&#9;&#9;sinVal = prevY + sin((i + (figureW / 4)) * -sinCoeff)&#13;&#10;&#9;&#9;g:drawLine(spacer + prevX, prevY, spacer + i, sinVal, lineW)&#13;&#10;&#9;&#9;prevX = i&#13;&#10;&#9;&#9;prevY = sinVal&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="068214ed91c24fc8b227e872bc0654b2"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="drawPulse" luaMethodCode="function drawPulse(comp, g, startY, spacer, figH, lineW, isShort)&#10;&#13;&#10;&#9;local shortPulse&#13;&#10;&#13;&#10;&#9;if isShort == nil then&#13;&#10;&#9;&#9;shortPulse = false&#13;&#10;&#9;else&#13;&#10;&#9;&#9;shortPulse = isShort&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.lineColor)&#13;&#10;&#13;&#10;&#9;local figureW = comp:getWidth() - (2 * spacer)&#13;&#10;&#9;local halfLine = lineW / 2&#13;&#10;&#9;local halfFig = figureW / 2&#13;&#10;&#9;local halfFigH = figH / 2&#13;&#10;&#13;&#10;&#9;g:drawLine(spacer, startY + (figH / 2), spacer, startY, lineW)&#13;&#10;&#13;&#10;&#9;g:drawLine(spacer - halfLine, startY, spacer + halfFig, startY, lineW)&#13;&#10;&#13;&#10;&#9;if not isShort then&#13;&#10;&#9;&#9;g:drawLine(spacer + halfFig - halfLine, startY - halfLine, &#13;&#10;&#9;&#9;&#9;   &#9;   spacer + halfFig - halfLine, startY + figH + halfLine, lineW)&#13;&#10;&#13;&#10;&#9;&#9;g:drawLine(spacer + halfFig - halfLine, startY + figH,&#13;&#10; &#9;&#9;&#9;       spacer + 2 * halfFig, startY + figH, lineW)&#13;&#10;&#13;&#10;&#9;&#9;g:drawLine(spacer + 2 * halfFig - halfLine, startY + figH, &#13;&#10;&#9;&#9;&#9;       spacer + 2 * halfFig - halfLine, startY + (figH / 2), lineW)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;g:drawLine(spacer + halfFig - halfLine, startY - halfLine, &#13;&#10;&#9;&#9;&#9;   &#9;   spacer + halfFig - halfLine, startY + halfFigH + halfLine, lineW)&#13;&#10;&#13;&#10;&#9;&#9;g:drawLine(spacer + halfFig - halfLine, startY + halfFigH,&#13;&#10; &#9;&#9;&#9;       spacer + 2 * halfFig, startY + halfFigH, lineW)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="b4a6c8ccc05b42a9a07e9e89a6737165"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="drawSaw" luaMethodCode="function drawSaw(comp, g, startY, spacer, figH, lineW)&#10;&#9;&#13;&#10;&#9;g:setColour(skinColors.lineColor)&#13;&#10;&#13;&#10;&#9;local figureW = comp:getWidth() - (2 * spacer)&#13;&#10;&#13;&#10;&#9;g:drawLine(spacer, startY, spacer + figureW, startY - figH, lineW)&#13;&#10;&#9;g:drawLine(spacer + figureW - lineW / 2, startY - figH, spacer + figureW - lineW / 2, startY, lineW)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="f47ace3d1ba54a11b7a4843c514400d2"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="drawTriangle" luaMethodCode="function drawTriangle(comp, g, startY, spacer, figH, lineW)&#10;&#9;&#13;&#10;&#9;g:setColour(skinColors.lineColor)&#13;&#10;&#13;&#10;&#9;local figureW = comp:getWidth() - (2 * spacer)&#13;&#10;&#13;&#10;&#9;g:drawLine(spacer, startY, spacer + figureW / 2, startY - figH, lineW)&#13;&#10;&#9;g:drawLine(spacer + figureW / 2, startY - figH, spacer + figureW, startY, lineW)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="af2a7016951c4c4f990c4c4e769a5f6a"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="drawSynthReachableIcon" luaMethodCode="function drawSynthReachableIcon(g, startX, startY)&#10;&#13;&#10;&#9;local iconColor&#13;&#10;&#9;local ds = sharedValues.deviceStatus&#13;&#10;&#13;&#10;&#9;if ds == dsOffline then&#13;&#10;&#9;&#9;iconColor = skinColors.lineColorDark&#13;&#10;&#9;elseif ds == dsOnline then&#13;&#10;&#9;&#9;iconColor = ICON_GREEN&#13;&#10;&#9;elseif ds == dsBusy then&#13;&#10;&#9;&#9;iconColor = ICON_ORANGE&#13;&#10;&#9;elseif ds == dsError then&#13;&#10;&#9;&#9;iconColor = ICON_RED&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;g:setColour(iconColor)&#13;&#10;&#13;&#10;&#9;g:drawLine(startX + 11, startY + 4, startX + 7, startY, 2)&#13;&#10;&#9;g:drawLine(startX, startY + 8, startX + 12, startY + 8, 2)&#13;&#10;&#9;g:drawLine(startX, startY + 4, startX + 12, startY + 4, 2)&#13;&#10;&#9;g:drawLine(startX + 1, startY + 8, startX + 5, startY + 12, 2)&#9;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="3fce40746b3740e6a6ab97f0d6b0610e"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="drawSynthClockIcon" luaMethodCode="function drawSynthClockIcon(g, startX, startY)&#10;&#9;&#13;&#10;&#9;local iconColor&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.lineColorDark)&#13;&#10;&#13;&#10;&#9;g:drawLine(startX, startY + 12, startX + 7, startY, 2)&#13;&#10;&#9;g:drawLine(startX + 6, startY, startX + 13, startY + 12, 2)&#13;&#10;&#9;g:drawLine(startX, startY + 11, startX + 13, startY + 11, 2)&#13;&#10;&#9;g:drawLine(startX + 6, startY + 11, startX + 12, startY + 3, 2)&#13;&#10;&#13;&#10;&#9;if panelSettings.clockSource == 0 then&#13;&#10;&#13;&#10;&#9;&#9;-- Internal clock source&#13;&#10;&#9;&#9;g:drawArrow(Line(startX + 13, startY + 6, startX + 24, startY + 6), 2, 4, 4)&#13;&#10;&#9;elseif panelSettings.clockSource == 1 then&#13;&#10;&#13;&#10;&#9;&#9;-- External clock source&#13;&#10;&#9;&#9;g:drawArrow(Line(startX + 24, startY + 6, startX + 13, startY + 6), 2, 5, 5)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;-- Auto clock source&#13;&#10;&#9;&#9;g:setFont(Font(10, 1))&#13;&#10;&#9;&#9;g:drawText(&quot;A&quot;, startX + 13, startY + 1, 10, 10, Justification(Justification.left), false)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="f85ddc2bdbec4cc29655ea79217db9d2"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="drawLocalIcon" luaMethodCode="function drawLocalIcon(g, startX, startY)&#10;&#13;&#10;&#9;local iconColor&#13;&#10;&#13;&#10;&#9;if panelSettings.localMode == 0 then&#13;&#10;&#9;&#9;iconColor = skinColors.lineColorDark&#13;&#10;&#9;elseif panelSettings.localMode == 1 then&#13;&#10;&#9;&#9;iconColor = ICON_GREEN&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;g:setColour(iconColor)&#13;&#10;&#13;&#10;&#9;g:fillRect(startX, startY, 4, 12)&#13;&#10;&#9;g:fillRect(startX + 5, startY, 4, 12)&#13;&#10;&#9;g:fillRect(startX + 10, startY, 4, 12)&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#13;&#10;&#9;g:fillRect(startX + 3, startY, 3, 7)&#13;&#10;&#9;g:fillRect(startX + 8, startY, 3, 7)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="220bbaa515de42c78f0626b15adeadce"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="drawPanelModeIcon" luaMethodCode="function drawPanelModeIcon(g, startX, startY)&#10;&#9;&#13;&#10;&#9;g:setColour(skinColors.lineColorDark)&#13;&#10;&#9;g:setFont(Font(14, 1))&#13;&#10;&#13;&#10;&#9;local xDisp = 4&#13;&#10;&#13;&#10;&#9;if sharedValues.operationMode == omDefault then&#13;&#10;&#13;&#10;&#9;&#9;g:drawText(&quot;P&quot;, startX + xDisp, startY, 12, 12, Justification(Justification.left), false)&#13;&#10;&#9;elseif sharedValues.operationMode == omLCD then&#13;&#10;&#13;&#10;&#9;&#9;g:fillRect(startX + (xDisp / 2), startY, 13, 13)&#13;&#10;&#9;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;&#9;g:drawText(&quot;E&quot;, startX + xDisp, startY, 13, 12, Justification(Justification.left), false)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;g:fillRect(startX + (xDisp / 2), startY, 13, 13)&#13;&#10;&#9;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;&#9;g:drawText(&quot;G&quot;, startX + xDisp, startY, 12, 12, Justification(Justification.left), false)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="2ea724bb27c8403490e27c24565bf19c"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="panelAlerts" uuid="80916c9e8cb7483daa579017d1bf296e">
            <luaMethod luaMethodName="genAlertWindow" luaMethodCode="function genAlertWindow(alertTitle, alertMessage)&#10;&#9;&#13;&#10;&#9;utils.warnWindow(alertTitle, alertMessage)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="d9ef0000e4d14d89bc2f21f8f0b8d8f3"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="confirmDialog" luaMethodCode="function confirmDialog(title, message)&#10;&#13;&#10;&#9;local result = true&#13;&#10;&#13;&#10;&#9;if panelSettings.disableWarnings == 0 then&#13;&#10;&#9;&#9;result = utils.questionWindow(title, message, &quot;OK&quot;, &quot;Cancel&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return result&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="30a2f2cb6d39489ab0f61d9009c9c481"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="genAssertErrorMessage" luaMethodCode="function genAssertErrorMessage(errSource, srcMax, srcVal, errCode)&#10;&#13;&#10;&#9;if not DEFINE_DEBUG then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local errorMessage = &quot;Assertion Error:&quot;&#13;&#10;&#13;&#10;&#9;if errCode == errMaxValExceeded then&#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;&#9;errorMessage = string.format(&quot;%s the %s value %d exceeded by %d for the controller %s&quot;, errorMessage, &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Maximum&quot;, srcMax, srcVal - srcMax, errSource)&#13;&#10;&#9;&#9;errorMessage = errorMessage .. &quot;\nFalling back to maximum value&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;console(errorMessage)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="8b0bf8c05d764e8bb27623a325635936"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="fileDialogs" uuid="1081f8a9f9a54a54af62984bc43f00d2">
            <luaMethod luaMethodName="openFileDialog" luaMethodCode="function openFileDialog(title, ext)&#13;&#10;&#13;&#10;&#9;local bulkDump = utils.openFileWindow(title, File(&quot;&quot;), ext, true)&#13;&#10;&#13;&#10;&#9;-- If file exists, then proceed&#13;&#10;&#9;if bulkDump:existsAsFile() then&#13;&#10;&#9;&#9;return bulkDump&#13;&#10;&#9;else&#13;&#10;&#9;&#9;return nil&#13;&#10;&#9;end&#13;&#10;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="49ff1024b9a44084a2f5cd45e673bb60"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="infoWindowUI" uuid="b0efe637038e437880a68080d171793a">
            <luaMethod luaMethodName="paintInfoWindow" luaMethodCode="function paintInfoWindow(mod, g)&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:fillAll()&#13;&#10;&#13;&#10;&#9;local frameW = mod:getWidth()&#13;&#10;&#9;local frameH = mod:getHeight()&#13;&#10;&#9;local iconSpacer = 10&#13;&#10;&#9;local iconCount = 4&#13;&#10;&#13;&#10;&#9;local rightSpacer = 8&#13;&#10;&#9;local iconW = 12&#13;&#10;&#9;local iconH = 12&#13;&#10;&#9;local iconX = 12&#13;&#10;&#9;local iconY = 6&#13;&#10;&#13;&#10;&#9;drawPanelModeIcon(g, iconX, iconY)&#13;&#10;&#9;drawSynthReachableIcon(g, iconX + (iconW + iconSpacer), iconY)&#13;&#10;&#9;drawLocalIcon(g, iconX + ((iconW + iconSpacer) * 2), iconY)&#13;&#10;&#9;drawSynthClockIcon(g, iconX + ((iconW + iconSpacer) * 3), iconY)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="daf7720265bc4bc2adc6e84c3a310969"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="showHint" luaMethodCode="function showHint(hintMsg)&#10;&#9;&#13;&#10;&#9;sharedValues.hintMessage = hintMsg&#13;&#10;&#9;externalRepaintHintWindow()&#13;&#10;&#9;showHintTimer()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="b2959a5a626b452e86badd5ca44b71ea"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="externalRepaintInfoWindow" luaMethodCode="function externalRepaintInfoWindow()&#13;&#10;&#10;&#9;getComp(&quot;uiInfoScreen&quot;):repaint()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="791d4fe9957849bc96f811f1cdb3ba5e"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="paintAboutInfo" luaMethodCode="function paintAboutInfo(mod, g)&#10;&#9;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:fillAll()&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.darkText)&#13;&#10;&#9;g:setFont(Font(9, 1))&#13;&#10;&#9;g:drawText(&quot;Created by inteyes&quot;, 10, 2, 100, 10, Justification(Justification.left), false)&#13;&#10;&#9;g:drawText(&quot;with Ctrlr 5.3.201&quot;, 10, 12, 100, 10, Justification(Justification.left), false)&#13;&#10;&#13;&#10;&#9;g:setFont(Font(10, 1))&#13;&#10;&#9;g:drawText(&quot;  --- KORG ---&quot;, 155, 2, 100, 10, Justification(Justification.left), false)&#13;&#10;&#9;g:drawText(&quot;   Re:MS2000&quot;, 153, 12, 100, 10, Justification(Justification.left), false)&#13;&#10;&#13;&#10;&#9;g:fillRoundedRectangle(240, 12, 47, 10, 1)&#13;&#10;&#13;&#10;&#9;g:drawText(&quot;MIDI IN    : &quot;, 552, 2, 100, 10, Justification(Justification.left), false)&#13;&#10;&#9;g:drawText(&quot;MIDI OUT : &quot;, 552, 12, 100, 10, Justification(Justification.left), false)&#13;&#10;&#9;g:drawText(getMidiInOut(true), 608, 2, 160, 10, Justification(Justification.left), false)&#13;&#10;&#9;g:drawText(getMidiInOut(false), 608, 12, 160, 10, Justification(Justification.left), false)&#13;&#10;&#13;&#10;&#9;if sharedValues.restartRequired == true then&#13;&#10;&#9;&#9;g:setColour(ICON_ORANGE)&#13;&#10;&#9;&#9;g:fillRoundedRectangle(292, 12, 110, 10, 1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:drawText(&quot;v. &quot; .. panelVersion, 246, 12, 100, 10, Justification(Justification.left), false)&#13;&#10;&#9;g:drawText(&quot;RESTART SUGGESTED&quot;, 298, 12, 150, 10, Justification(Justification.left), false)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="230784949f7c45a283cccf8769d54310"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="paintHintWindow" luaMethodCode="function paintHintWindow(mod, g)&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:fillAll()&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.darkText)&#13;&#10;&#9;g:setFont(Font(10, 1))&#13;&#10;&#13;&#10;&#9;local frameW = mod:getWidth()&#13;&#10;&#13;&#10;&#9;-- Show hint&#13;&#10;&#9;g:drawText(sharedValues.hintMessage, 0, 7, mod:getWidth(), 10, Justification(Justification.left), false)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="eec34e61bc50408dac5971164591995c"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="externalRepaintHintWindow" luaMethodCode="function externalRepaintHintWindow()&#10;&#9;&#13;&#10;&#9;getComp(&quot;uiHintScreen&quot;):repaint()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="d35b6975abab46fdbba7483c990a91d9"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="paintMidiActivity" luaMethodCode="function paintMidiActivity(mod, g)&#10;&#9;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#9;g:fillAll()&#13;&#10;&#13;&#10;&#9;if sharedValues.midiActivity == 1 then&#13;&#10;&#9;&#9;g:setColour(ICON_ORANGE)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;g:fillEllipse(2, 7, 10, 10)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="5b14d83c5aec47dea58d9f81b9f00fcb"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="blinkMidiLight" luaMethodCode="function blinkMidiLight()&#10;&#9;&#13;&#10;&#9;sharedValues.midiActivity = 1&#13;&#10;&#9;externalRepaintMidiActivity()&#13;&#10;&#9;blinkMidiLightTimer()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="b8b6f389ae724b80bb93567206f854eb"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="externalRepaintMidiActivity" luaMethodCode="function externalRepaintMidiActivity()&#10;&#9;&#13;&#10;&#9;getComp(&quot;uiMidiActivity&quot;):repaint()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="0f9f09f49d3449b395316a2b30e17fbb"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="vocoderStuff" uuid="902e2aa55437435a8919127fed65e75b">
            <luaMethod luaMethodName="applyVocoderLabels" luaMethodCode="function applyVocoderLabels(vocoderSelected)&#10;&#13;&#10;&#9;local textColor&#13;&#10;&#9;local labelBG &#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;local onlyColorChangeLabels = {&#13;&#10;&#9;&#9;&quot;lblTimbreMidiCh&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbreAssign&quot;,&#13;&#10;&#9;&#9;&quot;lblEG2Reset&quot;,&#13;&#10;&#9;&#9;&quot;lblEG1Reset&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbreTrigger&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbrePriority&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbreDetune&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbreTune&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbreBendRange&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbreTranspose&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbreVibrato&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbrePorta&quot;,&#13;&#10;&#9;&#9;&quot;lblAmpDistortion&quot;,&#13;&#10;&#9;&#9;&quot;lblAmpVeloSens&quot;,&#13;&#10;&#9;&#9;&quot;lblAmpKeyTrack&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO1KeySync&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO1TempoSync&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO1SyncNote&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO2KeySync&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO2TempoSync&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO2SyncNote&quot;,&#13;&#10;&#9;&#9;&quot;lblOsc1Control1&quot;,&#13;&#10;&#9;&#9;&quot;lblOsc1Control2&quot;,&#13;&#10;&#9;&#9;&quot;lblOsc1WaveCycle&quot;,&#13;&#10;&#9;&#9;&quot;lblMixerOsc1&quot;,&#13;&#10;&#9;&#9;&quot;lblMixerNoise&quot;,&#13;&#10;&#9;&#9;&quot;lblFilterCutoff&quot;,&#13;&#10;&#9;&#9;&quot;lblFilterResonance&quot;,&#13;&#10;&#9;&#9;&quot;lblEG1Attack&quot;,&#13;&#10;&#9;&#9;&quot;lblEG2Attack&quot;,&#13;&#10;&#9;&#9;&quot;lblEG1Decay&quot;,&#13;&#10;&#9;&#9;&quot;lblEG2Decay&quot;,&#13;&#10;&#9;&#9;&quot;lblEG1Sustain&quot;,&#13;&#10;&#9;&#9;&quot;lblEG2Sustain&quot;,&#13;&#10;&#9;&#9;&quot;lblEG1Release&quot;,&#13;&#10;&#9;&#9;&quot;lblEG2Release&quot;,&#13;&#10;&#9;&#9;&quot;lblAmpLevel&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO1TypeCycle&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO2TypeCycle&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO1Frequency&quot;,&#13;&#10;&#9;&#9;&quot;lblLFO2Frequency&quot;,&#13;&#10;&#9;&#9;&quot;lblArpOnOff&quot;,&#13;&#10;&#9;&#9;&quot;lblArpLatch&quot;,&#13;&#10;&#9;&#9;&quot;lblArpKeySync&quot;,&#13;&#10;&#9;&#9;&quot;lblArpTempo&quot;,&#13;&#10;&#9;&#9;&quot;lblArpGate&quot;,&#13;&#10;&#9;&#9;&quot;lblArpResolution&quot;,&#13;&#10;&#9;&#9;&quot;lblArpSwing&quot;,&#13;&#10;&#9;&#9;&quot;lblArpTempo&quot;,&#13;&#10;&#9;&#9;&quot;lblArpType&quot;,&#13;&#10;&#9;&#9;&quot;lblArpRange&quot;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;--Change text and background for dedicated labels&#13;&#10;&#9;if vocoderSelected then&#13;&#10;&#13;&#10;&#9;&#9;-- Color depends on selected skin&#13;&#10;&#9;&#9;textColor = skinColors.vocoderText:toString()&#13;&#10;&#9;&#9;labelBG = skinColors.vocoderElements:toString()&#13;&#10;&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilter24LPF&quot;, &quot;+ 1&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilter12LPF&quot;, &quot;+ 2&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilter12BPF&quot;, &quot;-  1&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilter12HPF&quot;, &quot;-  2&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblOsc2Semitone&quot;, &quot;HPF LEVEL&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblOsc2Tune&quot;, &quot;THRESHOLD&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblMixerOsc2&quot;, &quot;DIRECT&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilterTypeCycle&quot;, &quot;FORMANT SHIFT&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilterKbdTrack&quot;, &quot;E.F.SENSE&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblAmpPan&quot;, &quot;DIRECT&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblSequence1&quot;, &quot;LVL&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblSequence2&quot;, &quot;PAN&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilterVeloSens&quot;, &quot;GATE SENS&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblAmpEG2Gate&quot;, &quot;HPF GATE&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilterEG1Int&quot;, &quot;FC MOD INT&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblPatchSource1&quot;, &quot;FC MOD SOURCE&quot;, labelBG, textColor)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;textColor = skinColors.labelTextColor:toString()&#13;&#10;&#9;&#9;labelBG = COLOR_TRANSPARENT:toString()&#13;&#10;&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilter24LPF&quot;, &quot;24LPF&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilter12LPF&quot;, &quot;12LPF&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilter12BPF&quot;, &quot;12BPF&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilter12HPF&quot;, &quot;12HPF&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblOsc2Semitone&quot;, &quot;SEMITONE&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblOsc2Tune&quot;, &quot;TUNE&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblMixerOsc2&quot;, &quot;OSC 2&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilterTypeCycle&quot;, &quot;FILTER TYPE&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilterKbdTrack&quot;, &quot;KBD TRK&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblAmpPan&quot;, &quot;PAN&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblSequence1&quot;, &quot;SEQ 1&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblSequence2&quot;, &quot;SEQ 2&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilterVeloSens&quot;, &quot;VELO SENS&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblAmpEG2Gate&quot;, &quot;EG2 / GATE&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblFilterEG1Int&quot;, &quot;EG 1 INT&quot;, labelBG, textColor)&#13;&#10;&#9;&#9;alterLableProps(&quot;lblPatchSource1&quot;, &quot;SOURCE 1&quot;, labelBG, textColor)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i = 1, #onlyColorChangeLabels do&#13;&#10;&#9;&#9;alterLabelColors(onlyColorChangeLabels[i], labelBG, textColor)&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="d1f9d1f155284ec3bfe63b206085e13e"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="alterLableProps" luaMethodCode="function alterLableProps(modName, lblText, bgColor, textColor)&#13;&#10;&#13;&#10;&#9;alterLabelColors(modName, bgColor, textColor)&#13;&#10;&#9;getComp(modName):setText(lblText)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="01e81ee8038040aea1f87399720ef9bc"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="alterLabelColors" luaMethodCode="function alterLabelColors(modName, bgColor, textColor)&#10;&#13;&#10;&#9;setCompProp(modName, &quot;uiLabelTextColour&quot;, textColor)&#13;&#10;&#9;setCompProp(modName, &quot;uiLabelBgColour&quot;, bgColor)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="5e0382e7bf1a4aeeb49de6e6e88f91f2"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="copyPasteButtons" uuid="6bc35ccb3f8f4929924b6a2b4fdf4822">
            <luaMethod luaMethodName="paintTimbreCPButtons" luaMethodCode="function paintTimbreCPButtons(mod, g)&#10;&#13;&#10;&#9;local canvasW = mod:getWidth()&#13;&#10;&#9;local canvasH = mod:getHeight()&#13;&#10;&#9;local rectRounding = 2&#13;&#10;&#9;local compSource = getModPropN(mod:getOwner(), &quot;modulatorCustomIndex&quot;)&#13;&#10;&#13;&#10;&#9;local bgColor = skinColors.customBG&#13;&#10;&#9;local textColor = skinColors.copyColorTextEmpty&#13;&#10;&#13;&#10;&#9;-- If clipboard is not empty, set another BG and text color for &quot;Copy&quot; button&#13;&#10;&#9;if compSource == 0 then&#13;&#10;&#9;&#9;if #timbreClipboard ~= 0 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if timbreClipboard[1] == tmSynth then&#13;&#10;&#9;&#9;&#9;&#9;bgColor = skinColors.copyTimbreData&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;bgColor = skinColors.copyVocoderData&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;textColor = skinColors.copyColorText&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#9;&#9;if #seqClipboard ~= 0 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if seqClipboard[1] == tmSynth then&#13;&#10;&#9;&#9;&#9;&#9;bgColor = skinColors.copyTimbreData&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;bgColor = skinColors.copyVocoderData&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;textColor = skinColors.copyColorText&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Copy button background&#13;&#10;&#9;g:setColour(bgColor)&#13;&#10;&#9;g:fillRoundedRectangle(0, 0, canvasW, canvasH, rectRounding)&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.labelTextColor)&#13;&#10;&#13;&#10;&#9;-- Paste button background&#13;&#10;&#9;g:fillRect(canvasW / 2, 0, 5, canvasH)&#13;&#10;&#9;g:fillRoundedRectangle(canvasW / 2, 0, canvasW / 2, canvasH, rectRounding)&#13;&#10;&#13;&#10;&#9;g:setColour(textColor)&#13;&#10;&#13;&#10;&#9;-- Copy button text&#13;&#10;&#9;g:setFont(Font(10, 1))&#13;&#10;&#9;g:drawText(&quot;COPY&quot;, 4, 3, canvasW / 2, 10, Justification(Justification.left), false)&#13;&#10;&#13;&#10;&#9;g:setColour(skinColors.customBG)&#13;&#10;&#13;&#10;&#9;-- Paste button text&#13;&#10;&#9;g:drawText(&quot;PASTE&quot;, (canvasW / 2) + 1, 3, canvasW / 2, 10, Justification(Justification.left), false)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="7745d4034dbc42c2a0c9faa3b2da65ad"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="bufferMouseClick" luaMethodCode="function bufferMouseClick(comp, event, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local compSource = getModPropN(comp:getOwner(), &quot;modulatorCustomIndex&quot;)&#13;&#10;&#9;local canvasW = comp:getWidth()&#13;&#10;&#13;&#10;&#9;-- Handling Timbre Buffer button press&#13;&#10;&#9;if compSource == 0 then&#13;&#10;&#13;&#10;&#9;&#9;if event.x &lt; (canvasW / 2) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;copyTimbreToClipboard()&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;pasteTimbreFromClipboard()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;-- Handling Sequence Buffer button press&#13;&#10;&#9;&#9;if event.x &lt; (canvasW / 2) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;copySequenceToClipboard()&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;pasteSequenceFromClipboard()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="uiCustomMouseDownCallback" luaMethodSource="0"
                       uuid="0c6ca80ea83b422b821230d88e514344" luaMethodValid="1"/>
            <luaMethod luaMethodName="repaintTimbreCPButtons" luaMethodCode="function repaintTimbreCPButtons()&#10;&#9;&#13;&#10;&#9;getComp(&quot;uiTimbreBuffer&quot;):repaint()&#13;&#10;&#9;getComp(&quot;uiSequenceBuffer&quot;):repaint()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="5febe7180e2d4dcd9add3f7c39f211b1"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="synthSideSelectorUI" uuid="0e6ba528b04248938b90c180a5b76b8f">
            <luaMethod luaMethodName="paintSynthSideLines" luaMethodCode="function paintSynthSideLines(mod, g)&#10;&#13;&#10;&#9;local spacer = 10&#13;&#10;&#9;local roundDisp = 2&#13;&#10;&#13;&#10;&#9;local canvasW = mod:getWidth()&#13;&#10;&#9;local canvasH = mod:getHeight()&#13;&#10;&#13;&#10;&#9;local lineW = 2&#13;&#10;&#13;&#10;&#9;-- Draw straight lines&#13;&#10;&#9;g:setColour(skinColors.lineColor)&#13;&#10;&#13;&#10;&#9;g:fillRoundedRectangle(&#9;canvasW - 14, spacer, canvasW - (canvasW - 14), &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;canvasH - (spacer * 2), roundDisp)&#13;&#10;&#13;&#10;&#9;g:fillRect(0, canvasH / 2 - 1, canvasW - 14, lineW)&#13;&#10;&#13;&#10;&#9;-- Color depends on selected skin&#13;&#10;&#9;g:setColour(skinColors.groupBoxMainWin)&#13;&#10;&#9;g:fillRoundedRectangle(&#9;canvasW - 14 + lineW, spacer + lineW, canvasW - (canvasW - 14 - lineW), &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;canvasH - (spacer * 2) - (lineW * 2), roundDisp)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="072e0efa884948e9b293165d0da46ee9"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="paintSynthSideSelector" luaMethodCode="function paintSynthSideSelector(mod, g)&#10;&#13;&#10;&#9;local bgColor = skinColors.customBG&#13;&#10;&#9;local lineColor = COLOR_GREY_TEXT&#13;&#10;&#13;&#10;&#9;if panelSettings.selectorsSource ~= pbsPanel then&#13;&#10;&#9;&#9;lineColor = ICON_ORANGE&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local canvasW = mod:getWidth()&#13;&#10;&#9;local canvasH = mod:getHeight()&#13;&#10;&#13;&#10;&#9;local spacerH = 8&#13;&#10;&#9;local spacerV = 5&#13;&#10;&#13;&#10;&#9;local startX = spacerH&#13;&#10;&#9;local startY = spacerV&#13;&#10;&#13;&#10;&#9;local iconW = (canvasW / 1.65) - (spacerH * 2)&#13;&#10;&#9;local iconH = canvasH - (spacerV * 2)&#13;&#10;&#13;&#10;&#9;local kbSX, kbSY, kbH, spc&#13;&#10;&#13;&#10;&#9;local rectRounding = 2&#13;&#10;&#13;&#10;&#9;-- Selector background&#13;&#10;&#9;g:setColour(bgColor)&#13;&#10;&#9;g:fillRoundedRectangle(0, 0, canvasW, canvasH, rectRounding)&#13;&#10;&#13;&#10;&#9;-- Icon outline&#13;&#10;&#9;g:setColour(lineColor)&#13;&#10;&#9;g:fillRect(startX, startY, iconW, iconH)&#13;&#10;&#13;&#10;&#9;-- Selected bank on synth&#13;&#10;&#9;g:setFont(Font(12, 1))&#13;&#10;&#9;g:drawText(string.format(&quot;%s%.2d&quot;, bankIDToName(sharedValues.synthBank + 1), sharedValues.synthPreset + 1), &#13;&#10;&#9;&#9;&#9;   startX + iconW + 5, startY + 2, 24, 10, Justification(Justification.left), false) &#13;&#10;&#13;&#10;&#9;-- Icon surface&#13;&#10;&#9;g:setColour(bgColor)&#13;&#10;&#9;g:fillRect(startX + 1, startY + 1, iconW - 2, iconH - 2)&#13;&#10;&#13;&#10;&#9;-- Icon KB surface&#13;&#10;&#9;g:setColour(lineColor)&#13;&#10;&#13;&#10;&#9;kbSX = startX + (iconW / 3)&#13;&#10;&#9;kbSY = startY + (iconH / 2.5) + 1&#13;&#10;&#13;&#10;&#9;g:fillRect(kbSX, kbSY, iconW - (iconW / 3) - 1, iconH - (iconH / 2.5) - 1)&#13;&#10;&#13;&#10;&#9;-- Knobs on the icon&#13;&#10;&#9;g:fillEllipse(startX + 2, startY + 2, 3, 3)&#13;&#10;&#9;g:fillEllipse(startX + 7, startY + 2, 3, 3)&#13;&#10;&#13;&#10;&#9;-- Pitch/Bend wheels&#13;&#10;&#9;g:fillRect(startX + 3, startY + (iconH / 2), 1, iconH / 3)&#13;&#10;&#9;g:fillRect(startX + 5, startY + (iconH / 2), 1, iconH / 3)&#13;&#10;&#13;&#10;&#9;-- Keys on keyboard&#13;&#10;&#9;g:setColour(bgColor)&#13;&#10;&#13;&#10;&#9;kbH = iconH - (kbSY - startY)&#13;&#10;&#9;spc = (iconW - (iconW - kbSX)) / 3&#13;&#10;&#13;&#10;&#9;-- White keys&#13;&#10;&#9;g:fillRect(kbSX + spc - 1, kbSY, 1, kbH)&#13;&#10;&#9;g:fillRect(kbSX + (spc * 2) - 1, kbSY, 1, kbH)&#13;&#10;&#9;g:fillRect(kbSX + (spc * 3) - 2, kbSY, 1, kbH)&#13;&#10;&#13;&#10;&#9;-- Black keys&#13;&#10;&#9;g:fillRect(kbSX + spc - 2, kbSY, 3, 5)&#13;&#10;&#9;g:fillRect(kbSX + (spc * 2) - 2, kbSY, 3, 5)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="f92d5fdd5b5440369cf7b07a1ed7a1b9"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="synthSideSelectorClick" luaMethodCode="function synthSideSelectorClick(comp, event)&#10;&#13;&#10;&#9;-- Left mouse button - enable / disable synth side control&#13;&#10;&#9;if event.mods:isLeftButtonDown() then&#13;&#10;&#13;&#10;&#9;&#9;if panelSettings.selectorsSource == pbsPanel then&#13;&#10;&#9;&#9;&#9;panelSettings.selectorsSource = pbsSynth&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;panelSettings.selectorsSource = pbsPanel&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;getComp(&quot;uiSynthSideSelector&quot;):repaint()&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;-- Right mouse button - quick select program&#13;&#10;&#9;&#9;local popupWin = PopupMenu()&#13;&#10;&#9;&#9;local i, j, retVal&#13;&#10;&#13;&#10;&#9;&#9;for i = 0, 7 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;popupWin:addSectionHeader(string.format(&quot;Bank %s&quot;, bankIDToName(i + 1)))&#13;&#10;&#9;&#9;&#9;popupWin:addSeparator()&#13;&#10;&#13;&#10;&#9;&#9;&#9;for j = 0, 15 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;popupWin:addItem((i * 16) + j + 1, string.format(&quot;Program %d&quot;, j + 1), true, false)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;retVal = popupWin:show(0, 0, 4, 22)&#13;&#10;&#13;&#10;&#9;&#9;-- Make sure program was selected. 0 = no selection&#13;&#10;&#9;&#9;if retVal ~= 0 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;retVal = retVal - 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;sharedValues.synthBank = math.floor(retVal / 16)&#13;&#10;&#9;&#9;&#9;sharedValues.synthPreset = retVal - (sharedValues.synthBank * 16)&#13;&#10;&#13;&#10;&#9;&#9;&#9;selectPresetOnSynth()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="3b24fe1780064d538b2003bfd1fad7e6"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="changeColorScheme" uuid="1c01b4682dd44c5ead0881c7ca6b533f">
            <luaMethodGroup name="colorSchemes" uuid="54c629db7caa4a148b6aaba8055cd2c8">
              <luaMethod luaMethodName="defaultScheme" luaMethodCode="function defaultScheme()&#10;&#13;&#10;&#9;-- Default (blue) color scheme&#13;&#10;&#13;&#10;&#9;-- Background&#13;&#10;&#9;skinColors.panelBG&#9;&#9;&#9;= COLOR_PANEL_BG&#13;&#10;&#9;skinColors.customBG&#9;&#9;&#9;= SEQ_BACKGROUND&#13;&#10;&#9;skinColors.customBGAlter&#9;= SEQ_BG_ALTER&#13;&#10;&#13;&#10;&#9;-- Text&#13;&#10;&#9;skinColors.labelTextColor&#9;= COLOR_SURFACE_LINE&#13;&#10;&#9;skinColors.darkText&#9;&#9;&#9;= COLOR_GREY_TEXT&#13;&#10;&#9;skinColors.comboText&#9;&#9;= COLOR_COMBO_TEXT&#13;&#10;&#13;&#10;&#9;-- Label&#13;&#10;&#9;skinColors.vocoderElements&#9;= COLOR_VOCODER_LABEL&#13;&#10;&#9;skinColors.vocoderText&#9;&#9;= COLOR_PANEL_BG&#13;&#10;&#13;&#10;&#9;-- Draw&#13;&#10;&#9;skinColors.lineColor&#9;&#9;= COLOR_SURFACE_LINE&#13;&#10;&#9;skinColors.lineColorDark&#9;= COLOR_SURFACE_LINE_DARK&#13;&#10;&#13;&#10;&#9;-- Sequencer&#13;&#10;&#9;skinColors.seqOneBars&#9;&#9;= SEQ_NUMBER_ONE&#13;&#10;&#9;skinColors.seqTwoBars&#9;&#9;= SEQ_NUMBER_TWO&#13;&#10;&#9;skinColors.seqThreeBars&#9;&#9;= SEQ_NUMBER_THREE&#13;&#10;&#9;skinColors.seqGrayedOut&#9;&#9;= SEQ_GRAYED_OUT&#13;&#10;&#9;skinColors.seqOpacityMinus&#9;= 0&#13;&#10;&#13;&#10;&#9;-- Copy / Paste buttons&#13;&#10;&#9;skinColors.copyTimbreData&#9;&#9;= COLOR_BUFFER_COPY&#13;&#10;&#9;skinColors.copyVocoderData&#9;&#9;= COLOR_BUFFER_COPY_V&#13;&#10;&#9;skinColors.copyColorText&#9;&#9;= COLOR_BUFFER_TEXT&#13;&#10;&#9;skinColors.copyColorTextEmpty&#9;= COLOR_BUFFER_TEXT_EMPTY&#13;&#10;&#13;&#10;&#9;-- LCD&#13;&#10;&#9;skinColors.LCDBacklight&#9;&#9;= LCD_BACKLIGHT&#13;&#10;&#9;skinColors.LCDDigits&#9;&#9;= LCD_DIGITS&#13;&#10;&#9;skinColors.LCDText&#9;&#9;&#9;= LCD_TEXT&#13;&#10;&#13;&#10;&#9;-- Group box&#13;&#10;&#9;skinColors.groupBoxBG&#9;&#9;&#9;&#9;= skinColors.panelBG&#13;&#10;&#9;skinColors.groupBoxMainWin&#9;&#9;&#9;= skinColors.panelBG&#13;&#10;&#9;skinColors.groupBoxOutline&#9;&#9;&#9;= COLOR_GROUPBOX_OUTLINE&#13;&#10;&#9;skinColors.groupBoxOutlineMainWin&#9;= skinColors.groupBoxOutline&#13;&#10;&#9;skinColors.groupBoxLabel&#9;&#9;&#9;= COLOR_GROUPBOX_LABEL&#13;&#10;&#9;skinColors.groupBoxLabelMainWin&#9;&#9;= skinColors.groupBoxLabel&#13;&#10;&#9;skinColors.groupBoxRounding&#9;&#9;&#9;= 0&#13;&#10;&#13;&#10;&#9;-- Settings layer&#13;&#10;&#9;skinColors.settingsAlpha&#9;= 0.99&#10;end"
                         luaMethodLinkedProperty="" luaMethodSource="0" uuid="291fb01c09be4e38acd08d0d69449bff"
                         luaMethodValid="1"/>
              <luaMethod luaMethodName="blackScheme" luaMethodCode="function blackScheme()&#10;&#13;&#10;&#9;-- Default (blue) color scheme&#13;&#10;&#13;&#10;&#9;-- Background&#13;&#10;&#9;skinColors.panelBG&#9;&#9;&#9;= COLOR_PANEL_BG_BLK&#13;&#10;&#9;skinColors.customBG&#9;&#9;&#9;= COLOR_SEQ_BG_BLACK&#13;&#10;&#9;skinColors.customBGAlter&#9;= SEQ_BG_ALTER_BLACK&#13;&#10;&#13;&#10;&#9;-- Text&#13;&#10;&#9;skinColors.labelTextColor&#9;= COLOR_SURFACE_LINE&#13;&#10;&#9;skinColors.darkText&#9;&#9;&#9;= COLOR_GREY_TEXT&#13;&#10;&#9;skinColors.comboText&#9;&#9;= COLOR_COMBO_TEXT&#13;&#10;&#13;&#10;&#9;-- Label&#13;&#10;&#9;skinColors.vocoderElements&#9;= COLOR_VOCODER_LABEL&#13;&#10;&#9;skinColors.vocoderText&#9;&#9;= COLOR_PANEL_BG_BLK&#13;&#10;&#13;&#10;&#9;-- Draw&#13;&#10;&#9;skinColors.lineColor&#9;&#9;= COLOR_SURFACE_LINE&#13;&#10;&#9;skinColors.lineColorDark&#9;= COLOR_SURFACE_LINE_DARK&#13;&#10;&#13;&#10;&#9;-- Sequencer&#13;&#10;&#9;skinColors.seqOneBars&#9;&#9;= SEQ_NUMBER_ONE&#13;&#10;&#9;skinColors.seqTwoBars&#9;&#9;= SEQ_NUMBER_TWO&#13;&#10;&#9;skinColors.seqThreeBars&#9;&#9;= SEQ_NUMBER_THREE&#13;&#10;&#9;skinColors.seqGrayedOut&#9;&#9;= SEQ_GRAYED_OUT&#13;&#10;&#9;skinColors.seqOpacityMinus&#9;= 0.1&#13;&#10;&#13;&#10;&#9;-- Copy / Paste buttons&#13;&#10;&#9;skinColors.copyTimbreData&#9;&#9;= COLOR_BUFFER_COPY&#13;&#10;&#9;skinColors.copyVocoderData&#9;&#9;= COLOR_BUFFER_COPY_V&#13;&#10;&#9;skinColors.copyColorText&#9;&#9;= COLOR_BUFFER_TEXT&#13;&#10;&#9;skinColors.copyColorTextEmpty&#9;= COLOR_SURFACE_LINE&#13;&#10;&#13;&#10;&#9;-- LCD&#13;&#10;&#9;skinColors.LCDBacklight&#9;&#9;= LCD_BACKLIGHT&#13;&#10;&#9;skinColors.LCDDigits&#9;&#9;= LCD_DIGITS&#13;&#10;&#9;skinColors.LCDText&#9;&#9;&#9;= LCD_TEXT&#13;&#10;&#13;&#10;&#9;-- Group box&#13;&#10;&#9;skinColors.groupBoxBG&#9;&#9;&#9;&#9;= skinColors.panelBG&#13;&#10;&#9;skinColors.groupBoxMainWin&#9;&#9;&#9;= skinColors.panelBG&#13;&#10;&#9;skinColors.groupBoxOutline&#9;&#9;&#9;= COLOR_GROUPBOX_OUTLINE&#13;&#10;&#9;skinColors.groupBoxOutlineMainWin&#9;= skinColors.groupBoxOutline&#13;&#10;&#9;skinColors.groupBoxLabel&#9;&#9;&#9;= COLOR_GROUPBOX_LABEL&#13;&#10;&#9;skinColors.groupBoxLabelMainWin&#9;&#9;= skinColors.groupBoxLabel&#13;&#10;&#9;skinColors.groupBoxRounding&#9;&#9;&#9;= 0&#13;&#10;&#13;&#10;&#9;-- Settings layer&#13;&#10;&#9;skinColors.settingsAlpha&#9;= 0.99&#10;end"
                         luaMethodLinkedProperty="" luaMethodSource="0" uuid="fe5f92b4fd5f49d7abdf4612448b1a48"
                         luaMethodValid="1"/>
              <luaMethod luaMethodName="nordScheme" luaMethodCode="function nordScheme()&#13;&#10;&#10;&#9;-- Yet another theme&#13;&#10;&#13;&#10;&#9;-- Background&#13;&#10;&#9;skinColors.panelBG&#9;&#9;&#9;= Colour(0xFF64262c)&#13;&#10;&#9;skinColors.customBG&#9;&#9;&#9;= Colour(0xFF26262e)&#13;&#10;&#9;skinColors.customBGAlter&#9;= SEQ_BG_ALTER&#13;&#10;&#13;&#10;&#9;-- Text&#13;&#10;&#9;skinColors.labelTextColor&#9;= Colour(0xFFd9def1)&#13;&#10;&#9;skinColors.darkText&#9;&#9;&#9;= COLOR_GREY_TEXT&#13;&#10;&#9;skinColors.comboText&#9;&#9;= Colour(0xFFd9def1)&#13;&#10;&#13;&#10;&#9;-- Label&#13;&#10;&#9;skinColors.vocoderElements&#9;= skinColors.customBG&#13;&#10;&#9;skinColors.vocoderText&#9;&#9;= skinColors.labelTextColor&#13;&#10;&#13;&#10;&#9;-- Draw&#13;&#10;&#9;skinColors.lineColor&#9;&#9;= Colour(0xFFd9def1)&#13;&#10;&#9;skinColors.lineColorDark&#9;= COLOR_SURFACE_LINE_DARK&#13;&#10;&#13;&#10;&#9;-- Sequencer&#13;&#10;&#9;skinColors.seqOneBars&#9;&#9;= Colour(0xFFDA4545)&#13;&#10;&#9;skinColors.seqTwoBars&#9;&#9;= skinColors.labelTextColor&#13;&#10;&#9;skinColors.seqThreeBars&#9;&#9;= Colour(0xFFb5abdc)&#13;&#10;&#9;skinColors.seqGrayedOut&#9;&#9;= Colour(0xFF9A9A9A)&#13;&#10;&#9;skinColors.seqOpacityMinus&#9;= 0.1&#13;&#10;&#13;&#10;&#9;-- Copy / Paste buttons&#13;&#10;&#9;skinColors.copyTimbreData&#9;&#9;= skinColors.panelBG&#13;&#10;&#9;skinColors.copyVocoderData&#9;&#9;= COLOR_BUFFER_COPY_V&#13;&#10;&#9;skinColors.copyColorText&#9;&#9;= COLOR_BUFFER_TEXT&#13;&#10;&#9;skinColors.copyColorTextEmpty&#9;= COLOR_BUFFER_TEXT&#13;&#10;&#13;&#10;&#9;-- LCD&#13;&#10;&#9;skinColors.LCDBacklight&#9;&#9;= LCD_BACKLIGHT&#13;&#10;&#9;skinColors.LCDDigits&#9;&#9;= LCD_DIGITS&#13;&#10;&#9;skinColors.LCDText&#9;&#9;&#9;= LCD_TEXT&#13;&#10;&#13;&#10;&#9;-- Group box&#13;&#10;&#9;skinColors.groupBoxBG&#9;&#9;&#9;&#9;= Colour(0xFF3e3e46)&#13;&#10;&#9;skinColors.groupBoxMainWin&#9;&#9;&#9;= skinColors.customBG&#13;&#10;&#9;skinColors.groupBoxOutline&#9;&#9;&#9;= skinColors.lineColorDark&#13;&#10;&#9;skinColors.groupBoxOutlineMainWin&#9;= skinColors.groupBoxOutline&#13;&#10;&#9;skinColors.groupBoxLabel&#9;&#9;&#9;= Colour(0xFFd9def1)&#13;&#10;&#9;skinColors.groupBoxLabelMainWin&#9;&#9;= skinColors.groupBoxLabel&#13;&#10;&#9;skinColors.groupBoxRounding&#9;&#9;&#9;= 2&#13;&#10;&#13;&#10;&#9;-- Settings layer&#13;&#10;&#9;skinColors.settingsAlpha&#9;= 0.99&#10;end"
                         luaMethodLinkedProperty="" luaMethodSource="0" uuid="e27b4d89292b4104bd68d73d9b092b15"
                         luaMethodValid="1"/>
              <luaMethod luaMethodName="jp8080Scheme" luaMethodCode="function jp8080Scheme()&#10;&#13;&#10;&#9;-- Roland JP8080-like scheme&#13;&#10;&#13;&#10;&#9;-- Background&#13;&#10;&#9;skinColors.panelBG&#9;&#9;&#9;= Colour(0xFF435a82)&#13;&#10;&#9;skinColors.customBG&#9;&#9;&#9;= Colour(0xFF0a1519)&#13;&#10;&#9;skinColors.customBGAlter&#9;= Colour(0xFF0e1a1e)&#13;&#10;&#13;&#10;&#9;-- Text&#13;&#10;&#9;skinColors.labelTextColor&#9;= Colour(0xFFdce8e8)&#13;&#10;&#9;skinColors.darkText&#9;&#9;&#9;= Colour(0xFFd2d6d6)&#13;&#10;&#9;skinColors.comboText&#9;&#9;= Colour(0xFFdca358)&#13;&#10;&#13;&#10;&#9;-- Label&#13;&#10;&#9;skinColors.vocoderElements&#9;= skinColors.customBG&#13;&#10;&#9;skinColors.vocoderText&#9;&#9;= skinColors.labelTextColor&#13;&#10;&#13;&#10;&#9;-- Draw&#13;&#10;&#9;skinColors.lineColor&#9;&#9;= skinColors.labelTextColor&#13;&#10;&#9;skinColors.lineColorDark&#9;= COLOR_SURFACE_LINE&#13;&#10;&#13;&#10;&#9;-- Sequencer&#13;&#10;&#9;skinColors.seqOneBars&#9;&#9;= Colour(0xFF4c6fb2)&#13;&#10;&#9;skinColors.seqTwoBars&#9;&#9;= Colour(0xFFdca358)&#13;&#10;&#9;skinColors.seqThreeBars&#9;&#9;= Colour(0xFF14aee0)&#13;&#10;&#9;skinColors.seqGrayedOut&#9;&#9;= SEQ_GRAYED_OUT&#13;&#10;&#9;skinColors.seqOpacityMinus&#9;= 0&#13;&#10;&#13;&#10;&#9;-- Copy / Paste buttons&#13;&#10;&#9;skinColors.copyTimbreData&#9;&#9;= COLOR_BUFFER_COPY&#13;&#10;&#9;skinColors.copyVocoderData&#9;&#9;= COLOR_BUFFER_COPY_V&#13;&#10;&#9;skinColors.copyColorText&#9;&#9;= COLOR_BUFFER_TEXT&#13;&#10;&#9;skinColors.copyColorTextEmpty&#9;= COLOR_BUFFER_TEXT_EMPTY&#13;&#10;&#13;&#10;&#9;-- LCD&#13;&#10;&#9;skinColors.LCDBacklight&#9;&#9;= LCD_BACKLIGHT&#13;&#10;&#9;skinColors.LCDDigits&#9;&#9;= LCD_DIGITS&#13;&#10;&#9;skinColors.LCDText&#9;&#9;&#9;= LCD_TEXT&#13;&#10;&#13;&#10;&#9;-- Group box&#13;&#10;&#9;skinColors.groupBoxBG&#9;&#9;&#9;&#9;= Colour(0xFF1a2529)&#13;&#10;&#9;skinColors.groupBoxMainWin&#9;&#9;&#9;= Colour(0xFF3b697e)&#13;&#10;&#9;skinColors.groupBoxOutline&#9;&#9;&#9;= Colour(0xFF182227)&#13;&#10;&#9;skinColors.groupBoxOutlineMainWin&#9;= Colour(0xFF31586a)&#13;&#10;&#9;skinColors.groupBoxLabel&#9;&#9;&#9;= Colour(0xFFdca358)&#13;&#10;&#9;skinColors.groupBoxLabelMainWin&#9;&#9;= skinColors.labelTextColor&#13;&#10;&#9;skinColors.groupBoxRounding&#9;&#9;&#9;= 10&#13;&#10;&#13;&#10;&#9;-- Settings layer&#13;&#10;&#9;skinColors.settingsAlpha&#9;= 1&#10;end"
                         luaMethodLinkedProperty="" luaMethodSource="0" uuid="a143f174cc2b4b6fb7fcf23173ec314a"
                         luaMethodValid="1"/>
            </luaMethodGroup>
            <luaMethod luaMethodName="setColorScheme" luaMethodCode="function setColorScheme(colorScheme)&#13;&#10;&#13;&#10;&#9;local i, customIndex&#13;&#10;&#9;local controlList = {}&#13;&#10;&#13;&#10;&#9;if colorScheme == csDefault then&#13;&#10;&#9;&#9;defaultScheme()&#13;&#10;&#9;elseif colorScheme == csBlack then&#13;&#10;&#9;&#9;blackScheme()&#13;&#10;&#9;elseif colorScheme == csNordLead then&#13;&#10;&#9;&#9;nordScheme()&#13;&#10;&#9;elseif colorScheme == csJP8080 then&#13;&#10;&#9;&#9;jp8080Scheme()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Changing panel BG colors&#13;&#10;&#9;panel:getPanelEditor():setPropertyString(&quot;uiPanelBackgroundColour1&quot;, skinColors.panelBG:toString())&#13;&#10;&#13;&#10;&#9;controlList = panel:getModulatorsWildcard(&quot;grp*&quot;, false)&#13;&#10;&#13;&#10;&#9;for i = 1, #controlList do&#13;&#10;&#9;&#9;if type(controlList[i]) == &quot;userdata&quot; then&#13;&#10;&#13;&#10;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyInt(&quot;uiGroupOutlineRoundAngle&quot;, skinColors.groupBoxRounding)&#13;&#10;&#13;&#10;&#9;&#9;&#9;customIndex = controlList[i]:getPropertyInt(&quot;modulatorCustomIndexGroup&quot;)&#13;&#10;&#13;&#10;&#9;&#9;&#9;if customIndex ~= 2 then&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiGroupOutlineColour1&quot;, skinColors.groupBoxOutline:toString())&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;if customIndex == 1 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiGroupBackgroundColour1&quot;, skinColors.groupBoxBG:toString())&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiGroupTextColour&quot;, skinColors.groupBoxLabel:toString())&#13;&#10;&#9;&#9;&#9;elseif customIndex == 2 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiGroupOutlineColour1&quot;, skinColors.groupBoxOutlineMainWin:toString())&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiGroupBackgroundColour1&quot;, skinColors.groupBoxMainWin:toString())&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiGroupTextColour&quot;, skinColors.groupBoxLabelMainWin:toString())&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Changing label colors&#13;&#10;&#9;controlList = panel:getModulatorsWildcard(&quot;lbl*&quot;, false)&#13;&#10;&#13;&#10;&#9;for i = 1, #controlList do&#13;&#10;&#9;&#9;if type(controlList[i]) == &quot;userdata&quot; then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if&#9;((controlList[i]:getPropertyInt(&quot;modulatorCustomIndexGroup&quot;) == 1) and (sharedValues.timbreMode == tmVocoder)) or&#13;&#10; &#9;&#9;&#9;&#9;controlList[i]:getProperty(&quot;name&quot;) == &quot;lblSettingsSPOS&quot; then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiLabelTextColour&quot;, skinColors.vocoderText:toString())&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiLabelBgColour&quot;, skinColors.vocoderElements:toString())&#13;&#10;&#9;&#9;&#9;elseif controlList[i]:getPropertyInt(&quot;modulatorCustomIndexGroup&quot;) == 2 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiLabelTextColour&quot;, skinColors.LCDText:toString())&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiLabelBgColour&quot;, &quot;00000000&quot;)&#13;&#10;&#9;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiLabelTextColour&quot;, skinColors.labelTextColor:toString())&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Changing combo text colors&#13;&#10;&#9;controlList = panel:getModulatorsWildcard(&quot;cb*&quot;, false)&#13;&#10;&#13;&#10;&#9;for i = 1, #controlList do&#13;&#10;&#9;&#9;if type(controlList[i]) == &quot;userdata&quot; then&#13;&#10;&#13;&#10;&#9;&#9;&#9;controlList[i]:getComponent():setPropertyString(&quot;uiComboTextColour&quot;, skinColors.comboText:toString())&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Settings window color&#13;&#10;&#9;setCompProp(&quot;grpSettingsBackground&quot;, &quot;uiGroupBackgroundColour1&quot;, skinColors.panelBG:toString())&#13;&#10;&#9;getComp(&quot;grpSettingsBackground&quot;):setAlpha(skinColors.settingsAlpha)&#13;&#10;&#13;&#10;&#9;panelSettings.selectedSkin = colorScheme&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="75b523ab7ceb41beaf850a51c2ae6e71"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethodGroup name="panelHiddenControls" uuid="a7548843ff3440139eca637162dcea60">
            <luaMethod luaMethodName="paintButtonEmergency" luaMethodCode="function paintButtonEmergency(mod, g)&#13;&#10;&#13;&#10;&#9;local canvasW = mod:getWidth()&#13;&#10;&#9;local canvasH = mod:getHeight()&#13;&#10;&#9;local crossW = 4&#13;&#10;&#13;&#10;&#9;g:setColour(SEQ_BACKGROUND)&#13;&#10;&#9;g:fillRoundedRectangle(0, 0, canvasW, canvasH, 2)&#13;&#10;&#13;&#10;&#9;if panel:getPanelEditor():getPropertyInt(&quot;uiPanelMenuBarVisible&quot;) == 0 then&#13;&#10;&#9;&#9;g:setColour(COLOR_EMERGENCY)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;g:setColour(COLOR_VOCODER_LABEL)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;g:fillRect((canvasW / 2) - (crossW / 2), 4, crossW, canvasH - 8)&#13;&#10;&#9;g:fillRect(4, (canvasW / 2) - (crossW / 2), canvasH - 8, crossW)&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="316fe8d224e74464b67a302b0bf89052"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="emergencyClick" luaMethodCode="function emergencyClick()&#13;&#10;&#13;&#10;&#9;if panel:getPanelEditor():getPropertyInt(&quot;uiPanelMenuBarVisible&quot;) == 1 then&#13;&#10;&#9;&#9;panel:getPanelEditor():setPropertyInt(&quot;uiPanelMenuBarVisible&quot;, 0)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;panel:getPanelEditor():setPropertyInt(&quot;uiPanelMenuBarVisible&quot;, 1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;getComp(&quot;btnEmergency&quot;):repaint()&#13;&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="ae4d190bc14e4687aa8e033e05af524c"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="paintMIDISettingsButton" luaMethodCode="function paintMIDISettingsButton(mod, g)&#10;&#13;&#10;&#9;local canvasW = mod:getWidth()&#13;&#10;&#9;local canvasH = mod:getHeight()&#13;&#10;&#13;&#10;&#9;g:setColour(SEQ_BACKGROUND)&#13;&#10;&#9;g:fillRoundedRectangle(0, 0, canvasW, canvasH, 2)&#13;&#10;&#13;&#10;&#9;g:setColour(COLOR_VOCODER_LABEL)&#13;&#10;&#9;g:fillRoundedRectangle(4, 4, canvasW - 8, canvasH - 8, 1)&#13;&#10;&#13;&#10;&#9;g:setColour(SEQ_BACKGROUND)&#13;&#10;&#9;g:setFont(Font(13, 1))&#13;&#10;&#9;g:drawText(&quot;M&quot;, 5, 3, canvasW - 6, 14, Justification(Justification.left), false)&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="b70702085f3840a8b982b37af85da089"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="midiSettingsClick" luaMethodCode="function midiSettingsClick()&#10;&#13;&#10;&#9;getComp(&quot;btnMidiDeviceDialogHidden&quot;):click()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="aa3ac7b763be4f099d3dd0f87246cd42"
                       luaMethodValid="1"/>
          </luaMethodGroup>
        </luaMethodGroup>
        <luaMethodGroup name="MIDI" uuid="c10f70d480174a55af8947c759b0933c">
          <luaMethod luaMethodName="setOperationMode" luaMethodCode="function setOperationMode(opMode, muteOutput)&#13;&#10;&#13;&#10;&#9;local blockMessage = false&#13;&#10;&#13;&#10;&#9;if muteOutput ~= nil then&#13;&#10;&#9;&#9;blockMessage = muteOutput&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local seMessage = {}&#13;&#10;&#13;&#10;&#9;-- Request operation mode&#13;&#10;&#9;if not blockMessage then&#13;&#10;&#9;&#9;local gChan = getGlobalMidiChannel()&#13;&#10;&#13;&#10;&#9;&#9;-- MODE CHANGE = 4E(H)&#13;&#10;&#9;&#9;if (panelSettings.autocheckLCDMode == 1) and (opMode ~= 1) then&#13;&#10;&#9;&#9;&#9;seMessage = {0xF0, 0x42, gChan, 0x58, 0x4E, 0x01, 0x00, 0xF7}&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;seMessage = {0xF0, 0x42, gChan, 0x58, 0x4E, opMode, 0x00, 0xF7}&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;sendSysExMessage(seMessage)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if blockMessage then&#13;&#10;&#9;&#9;-- Change this value only if changes coming from parser&#13;&#10;&#9;&#9;sharedValues.operationMode = opMode&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;externalRepaintInfoWindow()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="31281eddc1e44afaa25fdcaf3d13b0b7"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="sendSysExMessage" luaMethodCode="function sendSysExMessage(message)&#13;&#10;&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(message))&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="3cb16a66236f4c4bb50c03d8c3644b3b"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="inputMIDIParser" luaMethodCode="function inputMIDIParser(midiMessage)&#13;&#10;&#13;&#10;&#9;blinkMidiLight()&#13;&#10;&#13;&#10;&#9;local msgData = midiMessage:getData()&#13;&#10;&#9;local msgSize = midiMessage:getSize()&#13;&#10;&#13;&#10;&#9;-- Usable data is longer than 3 bytes&#13;&#10;&#13;&#10;&#9;-- MIDI data&#13;&#10;&#9;if msgSize == 2 then&#13;&#10;&#13;&#10;&#9;&#9;-- Selected patch and bank&#13;&#10;&#9;&#9;if msgData:getByte(0) == (0xC0 + getGlobalMidiChannel(true))then&#13;&#10;&#9;&#9;&#9;captureProgramChangeMessage(msgData)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;elseif msgSize == 3 then&#13;&#10;&#13;&#10;&#9;&#9;-- Incoming message from Program Play mode&#13;&#10;&#9;&#9;if msgData:getByte(0) == (0xB0 + getGlobalMidiChannel(true)) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;processProgramPlayMessage(memBlockToTable(msgData))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;-- SysEx parameter data&#13;&#10;&#9;elseif (msgSize &gt;= 6) and (msgSize &lt;= 15) then &#13;&#10;&#13;&#10;&#9;&#9;local opType = msgData:getByte(4) &#13;&#10;&#9;&#9;local opParam = msgData:getByte(5)&#13;&#10;&#13;&#10;&#9;&#9;local controlLS = msgData:getByte(5)&#13;&#10;&#9;&#9;local controlMS = msgData:getByte(6)&#13;&#10;&#13;&#10;&#9;&#9;-- Request replies may be caught here&#13;&#10;&#13;&#10;&#9;&#9;-- Identity reply&#13;&#10;&#9;&#9;if msgSize == 15 then&#13;&#10;&#9;&#9;&#9;if opType == 0x02 then&#13;&#10;&#9;&#9;&#9;&#9;if (msgData:getByte(5) == 0x42) and &#13;&#10;&#9;&#9;&#9;&#9;   (msgData:getByte(6) == 0x58) and&#13;&#10;&#9;&#9;&#9;&#9;   (msgData:getByte(7) == 0x00) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;setSynthReachStatus(dsOnline)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Exchange replies&#13;&#10;&#9;&#9;if msgSize == 6 then&#13;&#10;&#9;&#9;&#9;-- Write | Load successful reply&#13;&#10;&#9;&#9;&#9;if (opType == 0x21) or (opType == 0x23) then&#13;&#10;&#9;&#9;&#9;&#9;writeOKReply()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Write error reply&#13;&#10;&#9;&#9;&#9;if (opType == 0x22) or (opType == 0x24) then&#13;&#10;&#9;&#9;&#9;&#9;writeErrorReply()&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if msgSize == 8 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Mode data pushed from HW&#13;&#10;&#9;&#9;&#9;if opType == 0x4E then&#13;&#10;&#9;&#9;&#9;&#9;setOperationMode(opParam, true)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Parameters transmission&#13;&#10;&#9;&#9;if msgSize == 10 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Requested mode data response&#13;&#10;&#9;&#9;&#9;if opType == 0x42 then&#13;&#10;&#9;&#9;&#9;&#9;setOperationMode(opParam, true)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Control change&#13;&#10;&#9;&#9;&#9;if opType == 0x41 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Since this panel use fancy &quot;lamp radiobuttons&quot; which aren't actual controllers, &#13;&#10;&#9;&#9;&#9;&#9;-- incoming data handling code is required for them&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- OSC1 waveform changed&#13;&#10;&#9;&#9;&#9;&#9;if&#9;(controlLS == sharedValues.osc1SEValues[6]) and&#13;&#10;&#9;&#9;&#9;&#9;&#9;(controlMS == sharedValues.osc1SEValues[7])&#9;then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;setOsc1WaveformByValue(msgData:getByte(7), true)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- OSC2 waveform changed&#13;&#10;&#9;&#9;&#9;&#9;if&#9;(controlLS == sharedValues.osc2SEValues[6]) and&#13;&#10; &#9;&#9;&#9;&#9;&#9;(controlMS == sharedValues.osc2SEValues[7]) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;setOsc2WaveformByValue(msgData:getByte(7), true)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- OSC Modulation&#13;&#10;&#9;&#9;&#9;&#9;if&#9;(controlLS == sharedValues.oscModSEValues[6]) and&#13;&#10; &#9;&#9;&#9;&#9;&#9;(controlMS == sharedValues.oscModSEValues[7]) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;processOscModData(msgData:getByte(7))&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Filter type changed&#13;&#10;&#9;&#9;&#9;&#9;if&#9;(controlLS == sharedValues.filterSEValues[6]) and&#13;&#10;&#9;&#9;&#9;&#9;&#9;(controlMS == sharedValues.filterSEValues[7]) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;setFilterTypeByValue(msgData:getByte(7), true)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- LFO1 waveform changed&#13;&#10;&#9;&#9;&#9;&#9;if&#9;(controlLS == sharedValues.LFO1SEValues[6]) and&#13;&#10; &#9;&#9;&#9;&#9;&#9;(controlMS == sharedValues.LFO1SEValues[7]) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;setLFO1TypeByValue(msgData:getByte(7), true)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- LFO2 waveform changed&#13;&#10;&#9;&#9;&#9;&#9;if&#9;(controlLS == sharedValues.LFO2SEValues[6]) and&#13;&#10; &#9;&#9;&#9;&#9;&#9;(controlMS == sharedValues.LFO2SEValues[7]) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;setLFO2TypeByValue(msgData:getByte(7), true)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;elseif  msgSize &gt;= GLOBAL_DATA_SIZE then &#13;&#10;&#13;&#10;&#9;&#9;local opType = msgData:getByte(4) &#13;&#10;&#13;&#10;&#9;&#9;-- Current program data dump&#13;&#10;&#9;&#9;if (opType == 0x40) and (timerFlags.waitForSingleProgram == true) then&#13;&#10;&#9;&#9;&#9;captureProgramDumpData(msgData)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Patch bank data dump&#13;&#10;&#9;&#9;if (opType == 0x4C) and (timerFlags.waitForBulkDump == true) then&#13;&#10;&#9;&#9;&#9;captureBulkDumpData(msgData)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Global data dump&#13;&#10;&#9;&#9;if (opType == 0x51) and (timerFlags.waitForSettings == true) then&#13;&#10;&#9;&#9;&#9;captureGlobalSettings(msgData)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- All data dump&#13;&#10;&#9;&#9;--if opType == 0x50 then&#13;&#10;&#9;&#9;--end&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="c49dc505089e49048937e69ece0dfc50"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="checkLCDModeEnabled" luaMethodCode="function checkLCDModeEnabled(modulator, modulatorValue, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- In order for sysex-driven knobs to work the LCD operation mode must be set&#13;&#10;&#13;&#10;&#9;if sharedValues.operationMode ~= omLCD then&#13;&#10;&#9;&#9;setOperationMode(omLCD)&#13;&#10;&#9;&#9;requestOperationMode()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return modulatorValue &#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="7dbb8776dc9c4d07aaf536ca69fbadfc"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="getGlobalMidiChannel" luaMethodCode="function getGlobalMidiChannel(pureValue)&#13;&#10;&#13;&#10;&#9;local mcByte = 0x30&#13;&#10;&#13;&#10;&#9;if pureValue ~= nil then&#13;&#10;&#9;&#9;if pureValue == true then&#13;&#10;&#9;&#9;&#9;mcByte = 0&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#10;&#9;return mcByte + (panel:getPropertyInt(&quot;panelMidiOutputChannelDevice&quot;) - 1)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="f05e940ce65541acb315d360726a1d4e"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="muteModulator" luaMethodCode="function muteModulator(modName, disable)&#13;&#10;&#9;&#13;&#10;&#9;if disable then&#13;&#10;&#9;&#9;modByName(modName):setPropertyString(&quot;modulatorMute&quot;, &quot;1&quot;)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;modByName(modName):setPropertyString(&quot;modulatorMute&quot;, &quot;0&quot;)&#13;&#10;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="c23d7fb2b08949a5b361eb3aae255d2f"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="mutePanelOut" luaMethodCode="function mutePanelOut(disableOutput)&#10;&#9;&#13;&#10;&#9;if disableOutput then&#13;&#10;&#9;&#9;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;, 1)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;, 0)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="a85ab69bd8b6444a9616773ca1fa3b46"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="checkProgramModeEnabled" luaMethodCode="function checkProgramModeEnabled()&#10;&#13;&#10;&#9;if sharedValues.operationMode ~= omDefault then&#13;&#10;&#9;&#9;setOperationMode(omDefault)&#13;&#10;&#9;&#9;requestOperationMode()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return modulatorValue &#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="a4b2e317e5bf41569f9e73a758503b4d"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="processProgramPlayMessage" luaMethodCode="function processProgramPlayMessage(midiMessage)&#10;&#13;&#10;&#9;-- Well, I totally forgot that MS2000 do not send sysex data until it's on the Edit Mode&#13;&#10;&#9;-- Most of the controls, placed on the front panel of MS2000, should be processed here&#13;&#10;&#13;&#10;&#9;local mod = midiMessage[2]&#13;&#10;&#9;local value = midiMessage[3]&#13;&#10;&#13;&#10;&#9;-- If control showing something in the LCD mode, then is would be better to set LCD mode&#13;&#10;&#9;local reqLCD = false&#13;&#10;&#13;&#10;&#9;-- Selected timbre number&#13;&#10;&#9;if mod == 0x5F then&#13;&#10;&#9;&#9;selectTimbreByValue(bit.band(value, 0x01), true, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Handle values only if synthesizer on the program mode&#13;&#10;&#9;if sharedValues.operationMode == omDefault then&#13;&#10;&#13;&#10;&#9;&#9;-- This handling will help to avoid first message miss&#13;&#10;&#9;&#9;-- After catching first message the panel will request LCD mode on the synth&#13;&#10;&#13;&#10;&#9;&#9;-- OSC1 Waveform&#13;&#10;&#9;&#9;if mod == 0x4D then&#13;&#10;&#9;&#9;&#9;setOsc1WaveformByValue(math.floor(value / 0x12), true)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- OSC2 Waveform&#13;&#10;&#9;&#9;if mod == 0x4E then&#13;&#10;&#9;&#9;&#9;setOsc2WaveformByValue(math.floor(value / 0x3F), true)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- OSC Mod&#13;&#10;&#9;&#9;if mod == 0x52 then&#13;&#10;&#9;&#9;&#9;processOscModData(math.floor(value / 0x2A), true)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Filter type&#13;&#10;&#9;&#9;if mod == 0x53 then&#13;&#10;&#9;&#9;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;&#9;&#9;setFilterTypeByValue(math.floor(value / 0x2A), true)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;setFilterTypeByValue(math.floor(value / 0x1F), true)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- EG2 / Gate&#13;&#10;&#9;&#9;if mod == 0x56 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;btnAmpEG2Gate&quot;, bit.band(value, 0x01))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- LFO1 Type&#13;&#10;&#9;&#9;if mod == 0x57 then&#13;&#10;&#9;&#9;&#9;setLFO1TypeByValue(math.floor(value / 0x2A), true)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- LFO2 Type&#13;&#10;&#9;&#9;if mod == 0x58 then&#13;&#10;&#9;&#9;&#9;setLFO2TypeByValue(math.floor(value / 0x2A), true)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Sequence On / Off&#13;&#10;&#9;&#9;if mod == 0x59 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;btnSeqOnOff&quot;, bit.band(value, 0x01))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Distortion&#13;&#10;&#9;&#9;if mod == 0x5C then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;btnAmpDistortion&quot;, bit.band(value, 0x01))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Continuous knobs for settings LCD mode&#13;&#10;&#9;&#9;if&#9;(mod == 0x12) or&#9;-- OSC2 Semitone&#13;&#10;&#9;&#9;&#9;(mod == 0x13) or&#9;-- OSC2 Tune&#13;&#10;&#9;&#9;&#9;(mod == 0x4F) or&#9;-- EG1 Int&#13;&#10;&#9;&#9;&#9;(mod == 0x05) or&#9;-- Portamento&#13;&#10;&#9;&#9;&#9;(mod == 0x55) or&#9;-- Filter KBD Track&#13;&#10;&#9;&#9;&#9;(mod == 0x1C) or&#9;-- Patch 1&#13;&#10;&#9;&#9;&#9;(mod == 0x1D) or&#9;-- Patch 2&#13;&#10;&#9;&#9;&#9;(mod == 0x1E) or&#9;-- Patch 3&#13;&#10;&#9;&#9;&#9;(mod == 0x1F) or&#9;-- Patch 4&#13;&#10;&#9;&#9;&#9;(mod == 0x0A) then&#9;-- Amp Pan&#13;&#10;&#13;&#10;&#9;&#9;&#9;reqLCD = true&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- NRPN messages handling. Maybe using sysex over NRPN was not that good idea?&#13;&#10;&#9;&#9;-- Arpeggios and Virtual patch&#13;&#10;&#13;&#10;&#9;&#9;-- NRPN Mod MSB&#13;&#10;&#9;&#9;if mod == 0x63 then&#13;&#10;&#9;&#9;&#9;sharedValues.playMessageTuple[1] = midiMessage[3]&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- NRPN Mod LSB&#13;&#10;&#9;&#9;if mod == 0x62 then&#13;&#10;&#9;&#9;&#9;sharedValues.playMessageTuple[2] = midiMessage[3]&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- NRPN Mod Value&#13;&#10;&#9;&#9;if mod == 0x06 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Insert second message&#13;&#10;&#9;&#9;&#9;sharedValues.playMessageTuple[3] = midiMessage[3]&#13;&#10;&#13;&#10;&#9;&#9;&#9;reqLCD = processPlayMessageTuple()&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Reset message tuple variable&#13;&#10;&#9;&#9;&#9;sharedValues.playMessageTuple = {}&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Continuous controllers will not be handled here&#13;&#10;&#9;&#9;if reqLCD then&#13;&#10;&#9;&#9;&#9;checkLCDModeEnabled()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="25d35fa3abc046cf9882f831d4fd46b4"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="processPlayMessageTuple" luaMethodCode="function processPlayMessageTuple()&#10;&#13;&#10;&#9;-- Current table consists of modulator MSB, LSB and Value&#13;&#10;&#13;&#10;&#9;local modMSB = sharedValues.playMessageTuple[1]&#13;&#10;&#9;local modLSB = sharedValues.playMessageTuple[2]&#13;&#10;&#9;local modValue = sharedValues.playMessageTuple[3]&#13;&#10;&#13;&#10;&#9;local reqLCD = false&#13;&#10;&#13;&#10;&#9;if modMSB == 0x00 then&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x02 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;btnArpOnOff&quot;, bit.band(modValue, 0x01))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x03 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbArpRange&quot;, modValue)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x04 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;btnArpLatch&quot;, bit.band(modValue, 0x01))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x07 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbArpType&quot;, math.floor(modValue / 0x16))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Continuous controls will request for setting the LCD mode&#13;&#10;&#9;&#9;-- Arp Gate&#13;&#10;&#9;&#9;if modLSB == 0x0A then&#13;&#10;&#13;&#10;&#9;&#9;&#9;reqLCD = true&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;elseif modMSB == 0x04 then&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x00 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbPatchSource1&quot;, math.floor(modValue / 0x10))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x01 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbPatchSource2&quot;, math.floor(modValue / 0x10))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x02 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbPatchSource3&quot;, math.floor(modValue / 0x10))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x03 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbPatchSource4&quot;, math.floor(modValue / 0x10))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x08 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbPatchDestination1&quot;, math.floor(modValue / 0x10))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x09 then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbPatchDestination2&quot;, math.floor(modValue / 0x10))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x0A then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbPatchDestination3&quot;, math.floor(modValue / 0x10))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modLSB == 0x0B then&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbPatchDestination4&quot;, math.floor(modValue / 0x10))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Sequence knobs range&#13;&#10;&#9;&#9;if (modLSB &gt;= 0x10) and (modLSB &lt;= 0x3F) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;reqLCD = true&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return reqLCD&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="da67be3165df4d7cafdc1599a672047c"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="assertionMethods" uuid="8e937d4d609b4143a7eb2707522321c4">
          <luaMethodGroup name="copyPasteMethods" uuid="3ea9f7fd753642698c7a43f3acd2000b">
            <luaMethod luaMethodName="copyTimbreToClipboard" luaMethodCode="function copyTimbreToClipboard()&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local startByte&#13;&#10;&#13;&#10;&#9;-- Copy timbre mode data into buffer&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;-- Sync data with buffer for using actual values&#13;&#10;&#9;&#9;syncTimbreWithBuffer(sharedValues.selectedTimbre)&#13;&#10;&#13;&#10;&#9;&#9;startByte = TIMBRE_ONE_STARTBYTE + (TIMBRE_DATA_SIZE * sharedValues.selectedTimbre)&#13;&#10;&#13;&#10;&#9;&#9;-- First byte - type of data being copied&#13;&#10;&#9;&#9;timbreClipboard = {tmSynth}&#13;&#10;&#13;&#10;&#9;&#9;for i = startByte, startByte + TIMBRE_DATA_SIZE do&#13;&#10;&#13;&#10;&#9;&#9;&#9;table.insert(timbreClipboard, dataBuffer[i])&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;syncVocoderWithBuffer()&#13;&#10;&#13;&#10;&#9;&#9;timbreClipboard = {tmVocoder}&#13;&#10;&#13;&#10;&#9;&#9;for i = 1, #vocoderBuffer do&#13;&#10;&#13;&#10;&#9;&#9;&#9;table.insert(timbreClipboard, vocoderBuffer[i])&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;showHint(&quot;Info: Timbre data copied to clipboard&quot;)&#13;&#10;&#13;&#10;&#9;repaintTimbreCPButtons()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="6a8c398e136741c390637224f7509267"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="copySequenceToClipboard" luaMethodCode="function copySequenceToClipboard()&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local startByte&#13;&#10;&#13;&#10;&#9;-- Copy sequence mode data into buffer&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;-- Sync data with buffer for using actual values&#13;&#10;&#9;&#9;syncTimbreWithBuffer(sharedValues.selectedTimbre)&#13;&#10;&#13;&#10;&#9;&#9;startByte = TIMBRE_ONE_STARTBYTE + SEQUENCE_STARTBYTE_DISP + (TIMBRE_DATA_SIZE * sharedValues.selectedTimbre)&#13;&#10;&#13;&#10;&#9;&#9;-- First byte - type of data being copied&#13;&#10;&#9;&#9;seqClipboard = {tmSynth}&#13;&#10;&#13;&#10;&#9;&#9;for i = startByte, startByte + SEQUENCE_DATA_SIZE do&#13;&#10;&#13;&#10;&#9;&#9;&#9;table.insert(seqClipboard, dataBuffer[i])&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;syncVocoderWithBuffer()&#13;&#10;&#13;&#10;&#9;&#9;seqClipboard = {tmVocoder}&#13;&#10;&#13;&#10;&#9;&#9;for i = VOCODER_SEQDATA_STARTBYTE, VOCODER_SEQDATA_STARTBYTE + VOCODER_SEQDATA_SIZE - 1 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;table.insert(seqClipboard, vocoderBuffer[i])&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;showHint(&quot;Info: Sequence data copied to clipboard&quot;)&#13;&#10;&#13;&#10;&#9;repaintTimbreCPButtons()&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="66b5197343ec4e1b97ef581be17591df"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="pasteTimbreFromClipboard" luaMethodCode="function pasteTimbreFromClipboard()&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local c = 2&#13;&#10;&#9;local startByte&#13;&#10;&#13;&#10;&#9;if #timbreClipboard &gt; 0 then&#13;&#10;&#13;&#10;&#9;&#9;-- First byte of clipboard - timbre type&#13;&#10;&#9;&#9;if timbreClipboard[1] ~= sharedValues.timbreMode then&#13;&#10;&#13;&#10;&#9;&#9;&#9;genAlertWindow(&quot;Warning!&quot;, &quot;Incompatible type of data. Vocoder data cannot be applied for synthesizer mode, and vice versa&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;if not confirmDialog(&quot;Warning!&quot;, &quot;This will erase corresponded data in the buffer. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;startByte = TIMBRE_ONE_STARTBYTE + (TIMBRE_DATA_SIZE * sharedValues.selectedTimbre)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Apply clipboard data to dataBuffer&#13;&#10;&#9;&#9;&#9;&#9;for i = startByte, startByte + TIMBRE_DATA_SIZE do&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- Clipboard starts with 2nd byte. First is a clipboard type&#13;&#10;&#9;&#9;&#9;&#9;&#9;dataBuffer[i] = timbreClipboard[c]&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;c = c + 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;applyTimbreData(sharedValues.selectedTimbre, dataBuffer)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Apply clipboard to vocoderBuffer&#13;&#10;&#9;&#9;&#9;&#9;for i = 2, #timbreClipboard do&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;vocoderBuffer[i - 1] = timbreClipboard[i]&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Reapply the same voice mode for the changes to take effect&#13;&#10;&#9;&#9;&#9;&#9;applyVocoderData(vocoderBuffer)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Reset buffer and repaint buttons&#13;&#10;&#9;&#9;&#9;timbreClipboard = {}&#13;&#10;&#9;&#9;&#9;repaintTimbreCPButtons()&#13;&#10;&#13;&#10;&#9;&#9;&#9;showHint(&quot;Info: Timbre data pasted from clipboard&quot;)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="4f1b5d105c884925ab47283fa427f164"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="pasteSequenceFromClipboard" luaMethodCode="function pasteSequenceFromClipboard()&#13;&#10;&#10;&#9;local i&#13;&#10;&#9;local c = 2&#13;&#10;&#9;local startByte&#13;&#10;&#13;&#10;&#9;if #seqClipboard &gt; 0 then&#13;&#10;&#13;&#10;&#9;&#9;-- First byte of clipboard - timbre type&#13;&#10;&#9;&#9;if seqClipboard[1] ~= sharedValues.timbreMode then&#13;&#10;&#13;&#10;&#9;&#9;&#9;genAlertWindow(&quot;Warning!&quot;, &quot;Incompatible type of data. Vocoder data cannot be applied for synthesizer mode, and vice versa&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;if not confirmDialog(&quot;Warning!&quot;, &quot;This will erase corresponded data in the buffer. Proceed?&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;startByte = TIMBRE_ONE_STARTBYTE + SEQUENCE_STARTBYTE_DISP + (TIMBRE_DATA_SIZE * sharedValues.selectedTimbre)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Apply clipboard data to dataBuffer&#13;&#10;&#9;&#9;&#9;&#9;for i = startByte, startByte + SEQUENCE_DATA_SIZE do&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- Clipboard starts with 2nd byte. First is a clipboard type&#13;&#10;&#9;&#9;&#9;&#9;&#9;dataBuffer[i] = seqClipboard[c]&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;c = c + 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;applyTimbreData(sharedValues.selectedTimbre, dataBuffer)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Apply clipboard to vocoderBuffer&#13;&#10;&#9;&#9;&#9;&#9;for i = VOCODER_SEQDATA_STARTBYTE, VOCODER_SEQDATA_STARTBYTE + VOCODER_SEQDATA_SIZE - 1 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;vocoderBuffer[i] = seqClipboard[c]&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;c = c + 1&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Reapply the same voice mode for the changes to take effect&#13;&#10;&#9;&#9;&#9;&#9;applyVocoderData(vocoderBuffer)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Reset buffer and repaint buttons&#13;&#10;&#9;&#9;&#9;seqClipboard = {}&#13;&#10;&#9;&#9;&#9;repaintTimbreCPButtons()&#13;&#10;&#13;&#10;&#9;&#9;&#9;showHint(&quot;Info: Sequence data pasted from clipboard&quot;)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="3d4e59666d314cf183a77854e7461d5e"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethod luaMethodName="assertSeqKnobBounds" luaMethodCode="function assertSeqKnobBounds(mod, selectedMode, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;local knobGroup = getModPropN(mod, &quot;modulatorCustomIndex&quot;) + 1&#13;&#10;&#9;&#13;&#10;&#9;&#9;assertSeqKnobBoundsByValue(knobGroup, selectedMode)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="c1c99ed08a314ff2a90de1670c40abe2"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="getSeqStepMaxVal" luaMethodCode="function getSeqStepMaxVal(selectedMode)&#13;&#10;&#13;&#10;&#9;local minV, maxV, defV&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;-- Synthesizer mode:&#13;&#10;&#13;&#10;&#9;&#9;-- As manual states:&#13;&#10;&#9;&#9;-- When Knob is &quot;Step Length&quot; (2)&#9;&#9;&#9;&#9;00~7F : - 6~0~+ 6 (*2-6)&#13;&#10;    &#9;-- When Knob is &quot;Pitch&quot; or &quot;OSC2 Semi&quot; (1 or 6)&#9;00~7F : -24~0~+24 (*2-7)&#13;&#10;    &#9;-- When Knob is others&#9;&#9;&#9;&#9;&#9;&#9;&#9;00~7F : -63~0~+63 (*2-8)&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;if selectedMode == 2 then&#13;&#10; &#9;&#9;&#9;minV, maxV, defV = -6, 6, 0&#13;&#10;&#9;&#9;elseif selectedMode == 1 or selectedMode == 6 then&#13;&#10;&#9;&#9;&#9;minV, maxV, defV = -24, 24, 0&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;minV, maxV, defV = -63, 63, 0&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;-- Vocoder mode:&#13;&#10;&#13;&#10;&#9;&#9;-- SEQ1 - Level [0~127]&#13;&#10;&#9;&#9;-- SEQ2 - Pan [-63/+63]&#13;&#10;&#13;&#10;&#9;&#9;if selectedMode == 0 then&#13;&#10;&#9;&#9;&#9;minV, maxV, defV = 0, 127, 64&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;minV, maxV, defV = -63, 63, 0&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return {minV, maxV, defV}&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="cfbfc83ce0aa486f8e6f3ea8172951b8"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="applyProgramData" luaMethodCode="function applyProgramData(dataArray, bank, prog, muteOutput)&#13;&#10;&#13;&#10;&#9;-- Here program data will be applied to the panel controls&#13;&#10;&#13;&#10;&#9;-- Sysex header can be safely ignored&#13;&#10;&#9;-- StartByte disposition&#13;&#10;&#9;local programData = copyTable(dataArray)&#13;&#10;&#9;local sb = DATA_PREAMBLE_BYTES + 1&#13;&#10;&#9;local patchType = tmSynth&#13;&#10;&#9;local bSwap&#13;&#10;&#13;&#10;&#9;-- Reset flag to apply all the values no matter what vm was selected before&#13;&#10;&#9;sharedValues.voiceMode = vmUndefined&#13;&#10;&#9;&#13;&#10;&#9;-- Starting from program name&#13;&#10;&#9;local progName = &quot;&quot;&#13;&#10;&#13;&#10;&#9;-- Program name size = 12B&#13;&#10;&#9;progName = progName .. string.char(programData[sb])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 1])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 2])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 3])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 4])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 5])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 6])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 7])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 8])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 9])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 10])&#13;&#10;&#9;progName = progName .. string.char(programData[sb + 11])&#13;&#10;&#13;&#10;&#9;displayProgramName(progName, bank, prog)&#13;&#10;&#13;&#10;&#9;-- Mute panel MIDI output before changes applied&#13;&#10;&#9;mutePanelOut(true)&#13;&#10;&#13;&#10;&#9;-- Bytes 12~15 not in use&#13;&#10;&#13;&#10;&#9;-- Byte 16 - packed byte&#13;&#10;  &#9;-- Bit 6,7 - Timbre Voice [0~2 = 1+3, 2+2, 3+1]&#13;&#10;&#9;setModValue(&quot;cbTimbreVoice&quot;, extractPackByte(programData[sb + 16], 6, 7))&#13;&#10;&#13;&#10;&#9;-- Bit 4,5 - Voice Mode [0~3 = Single, Split, Layer(Dual?), Vocoder]&#13;&#10;&#9;-- Processed later&#13;&#10;&#13;&#10;&#9;-- Get patch type&#13;&#10;&#9;if extractPackByte(programData[sb + 16], 4, 5) == 3 then&#13;&#10;&#9;&#9;patchType = tmVocoder&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Bit 0-3 - not used&#13;&#10;&#13;&#10;&#9;-- Byte 17 - packed byte&#13;&#10;&#9;-- Bit 4~7 - Scale Key [0~11 = C,C#,D,D#,E,F,F#,G,G#,A,A#,B]&#13;&#10;&#9;setModValue(&quot;cbTimbreScaleKey&quot;, extractPackByte(programData[sb + 17], 4, 7))&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Scale Type [0~9 = Equal Temp~User Scale]&#13;&#10;&#9;setModValue(&quot;cbTimbreScaleType&quot;, extractPackByte(programData[sb + 17], 0, 3))&#13;&#10;&#9;&#13;&#10;&#9;-- 18 - Split Point [0~127 = C-1~G9]&#13;&#10;&#9;setModValue(&quot;knobTimbreSplitPoint&quot;, programData[sb + 18])&#13;&#10;&#13;&#10;&#9;-- DELAY FX&#13;&#10;&#13;&#10;&#9;-- Byte 19 - packed byte&#13;&#10;  &#9;-- Bit 7 - Delay tempo sync [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnDelayTempoSync&quot;, extractPackByte(programData[sb + 19], 7))&#13;&#10;&#13;&#10;&#9;-- Bit 4~6 - not use&#13;&#10;&#9;-- Bit 0~3 - Time Base [0~14 = 1/32~1/1]&#13;&#10;&#9;setModValue(&quot;cbDelaySyncNote&quot;, extractPackByte(programData[sb + 19], 0, 3))&#13;&#10;&#13;&#10;&#9;-- Byte 20 - Delay Time [0~127]&#13;&#10;&#9;setModValue(&quot;knobDelayTime&quot;, programData[sb + 20])&#13;&#10;&#13;&#10;&#9;-- Byte 21 - Delay Depth [0~127]&#13;&#10;&#9;setModValue(&quot;knobDelayFeedback&quot;, programData[sb + 21])&#13;&#10;&#13;&#10;&#9;-- Byte 22 - Delay Type [0~2 = StereoDelay, CrossDelay, L/R Delay]&#13;&#10;&#9;setModValue(&quot;cbDelayType&quot;, programData[sb + 22])&#13;&#10;&#13;&#10;&#9;-- MOD FX&#13;&#10;&#13;&#10;&#9;-- Byte 23 - Mod LFO Speed [0~127]&#13;&#10;&#9;setModValue(&quot;knobDelaySpeed&quot;, programData[sb + 23])&#13;&#10;&#13;&#10;&#9;-- Byte 24 - Mod Depth [0~127]&#13;&#10;&#9;setModValue(&quot;knobDelayDepth&quot;, programData[sb + 24])&#13;&#10;&#13;&#10;&#9;-- Byte 25 - Mod Type [0~2 = Cho/Flg, Ensemble, Phaser]&#13;&#10;&#9;setModValue(&quot;cbModType&quot;, programData[sb + 25])&#13;&#10;&#13;&#10;&#9;-- EQ&#13;&#10;&#13;&#10;&#9;-- Byte 26 - Hi Freq [0~29 = 1.00~18.0 KHz]&#13;&#10;&#9;setModValue(&quot;knobEQHighFreq&quot;, programData[sb + 26])&#13;&#10;&#13;&#10;&#9;-- Byte 27 - Hi Gain [64+/-12 = 0+/-12]&#13;&#10;&#9;setModValue(&quot;knobEQHighGain&quot;, programData[sb + 27] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 28 - Lo Freq [0~29 = 40~1000 Hz]&#13;&#10;&#9;setModValue(&quot;knobEQLowFreq&quot;, programData[sb + 28])&#13;&#10;&#13;&#10;&#9;-- Byte 29 - Lo Gain [64+/-12 = 0+/-12]&#13;&#10;&#9;setModValue(&quot;knobEQLowGain&quot;, programData[sb + 29] - 64)&#13;&#10;&#13;&#10;&#9;-- ARPEGGIO&#13;&#10;&#13;&#10;&#9;-- Byte 30 - Tempo (MSB) [20~300]&#13;&#10;&#9;-- Byte 31 - Tempo (LSB)&#13;&#10;&#9;setModValue(&quot;knobArpTempo&quot;, restoreValueFromLSMS(programData[sb + 30], programData[sb + 31]))&#13;&#10;&#13;&#10;&#9;-- Byte 32&#13;&#10;&#9;-- Bit 7 - Arpeggio On/Off [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnArpOnOff&quot;, extractPackByte(programData[sb + 32], 7))&#13;&#10;&#13;&#10;&#9;-- Bit 6 - Latch [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnArpLatch&quot;, extractPackByte(programData[sb + 32], 6))&#13;&#10;&#13;&#10;&#9;-- Bit 4,5 - Target [0~2 = Both, Timb1, Timb2]&#13;&#10;&#9;setModValue(&quot;cbArpTarget&quot;, extractPackByte(programData[sb + 32], 4, 5))&#13;&#10;&#13;&#10;&#9;-- Bit 1 - not use&#13;&#10;&#9;-- Bit 0 - Key Sync [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnArpKeySync&quot;, extractPackByte(programData[sb + 32], 0))&#13;&#10;&#13;&#10;&#9;-- Byte 33&#13;&#10;&#9;-- Bit 0~3 - Type [0~5 = Up~Trigger]&#13;&#10;&#9;setModValue(&quot;cbArpType&quot;, extractPackByte(programData[sb + 33], 0, 3))&#13;&#10;&#13;&#10;&#9;-- Bit 4~7 - Range [0~3 = 1~4 Octave]&#13;&#10;&#9;setModValue(&quot;cbArpRange&quot;, extractPackByte(programData[sb + 33], 4, 7))&#13;&#10;&#13;&#10;&#9;-- Byte 34 - Gate time [0~100 = 0~100 %]&#13;&#10;&#9;setModValue(&quot;knobArpGate&quot;, programData[sb + 34])&#13;&#10;&#13;&#10;&#9;-- Byte 35 - Resolution [0~5 = 1/24, 1/16, 1/12, 1/8, 1/6, 1/4]&#13;&#10;&#9;setModValue(&quot;cbArpResolution&quot;, programData[sb + 35])&#13;&#10;&#13;&#10;&#9;-- Byte 36 - Swing [0+/-100 = 0+/-100 %]&#13;&#10;&#9;bSwap = programData[sb + 36] &#13;&#10;&#13;&#10;&#9;if bSwap &lt; 0x7F then&#13;&#10;&#9;&#9;setModValue(&quot;knobArpSwing&quot;, bSwap)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;setModValue(&quot;knobArpSwing&quot;, (0xFF - (bSwap - 1)) * -1)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Byte 37 - (dummy byte)&#13;&#10;&#13;&#10;&#9;-- Init buffers&#13;&#10;&#9;if patchType == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;-- It's a synth patch, init default vocoder buffer&#13;&#10;&#9;&#9;placeTimbreDataIntoBuffer(initVocoderBuffer(), 1, dbVocoder, 1)&#13;&#10;&#13;&#10;&#9;&#9;-- No need to place data into synth buffer, because it's already there by default&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;-- It's a vocoder. Place synth data into vocoder buffer&#13;&#10;&#9;&#9;placeTimbreDataIntoBuffer(programData, TIMBRE_ONE_STARTBYTE, dbVocoder, 1)&#13;&#10;&#13;&#10;&#9;&#9;-- Init timbres in the databuffer with default values&#13;&#10;&#9;&#9;placeTimbreDataIntoBuffer(initSynthBuffer(), 1, dbSynth, TIMBRE_ONE_STARTBYTE)&#13;&#10;&#9;&#9;placeTimbreDataIntoBuffer(initSynthBuffer(), 1, dbSynth, TIMBRE_TWO_STARTBYTE)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Set voice mode here&#13;&#10;&#9;setModValue(&quot;cbTimbreVoiceMode&quot;, extractPackByte(programData[sb + 16], 4, 5))&#13;&#10;&#13;&#10;&#9;-- Unmute panel MIDI output to restore functionality&#13;&#10;&#9;mutePanelOut(false)&#13;&#10;&#13;&#10;&#9;-- If sending on program change is enabled, it's better to send data directly into the synth&#13;&#10;&#9;if (panelSettings.sendOnProgChange == 1) and (not muteOutput) then&#13;&#10;&#9;&#9;sendSysExMessage(programToMIDIData(programData, DATA_PREAMBLE_BYTES))&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="fd3916cea2bb47aeb697b692063038f5"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="applyTimbreData" luaMethodCode="function applyTimbreData(selTimbre, dataArray)&#13;&#10;&#13;&#10;&#9;-- In case this function run on it's own&#13;&#10;&#9;mutePanelOut(true)&#13;&#10;&#10;&#9;-- Applying timbre data to controllers&#13;&#10;&#9;local sb&#13;&#10;&#9;local i&#13;&#10;&#9;local programData = copyTable(dataArray)&#13;&#10;&#13;&#10;&#9;-- Some cosmetics&#13;&#10;&#9;sharedValues.allowChangeSeq = false&#13;&#10;&#13;&#10;&#9;if selTimbre == 0 then&#13;&#10;&#9;&#9;-- First byte of Timbre One data&#13;&#10;&#9;&#9;sb = TIMBRE_ONE_STARTBYTE -- 45&#13;&#10;&#9;else&#13;&#10;&#9;&#9;-- First byte of Timbre Two data&#13;&#10;&#9;&#9;sb = TIMBRE_TWO_STARTBYTE -- 152&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Synth parameter (Mode = Single, Split, Dual)&#13;&#10;&#9;-- Bytes 38~145 - TIMBRE1 DATA&#13;&#10;&#13;&#10;&#9;-- Byte 0 - MIDI ch. [-1, 0~15 = GLB, 1~16 ch]&#13;&#10;&#9;setModValue(&quot;cbTimbreMidiCh&quot;, bit.band(programData[sb] + 1, 0x7F))&#13;&#10;&#13;&#10;&#9;-- Byte 1 - packed byte&#13;&#10;   &#9;-- Bit 6,7 - Assign Mode [0, 1, 2 = Mono, Poly, Unison]&#13;&#10;&#9;setModValue(&quot;cbTimbreAssign&quot;, extractPackByte(programData[sb + 1], 6, 7))&#13;&#10;&#13;&#10;&#9;-- Bit 5 - EG2 reset [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnEG2Reset&quot;, extractPackByte(programData[sb + 1], 5))&#13;&#10;&#13;&#10;&#9;-- Bit 4 - EG1 reset [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnEG1Reset&quot;, extractPackByte(programData[sb + 1], 4))&#13;&#10;&#13;&#10;&#9;-- Bit 3 - Trigger Mode [0, 1 = Single, Multi (use Mono / Unison Mode)]&#13;&#10;&#9;setModValue(&quot;cbTimbreTrigger&quot;, extractPackByte(programData[sb + 1], 3))&#13;&#10;&#13;&#10;&#9;-- Bit 0~1 - Key Priority [0~2 = Last, Low, High]&#13;&#10;&#9;setModValue(&quot;cbTimbrePriority&quot;, extractPackByte(programData[sb + 1], 0, 1))&#13;&#10;&#13;&#10;&#9;-- Byte 2 - Unison Detune [0~99=0~99 cent (use Unison Mode)]&#13;&#10;&#9;setModValue(&quot;knobTimbreDetune&quot;, programData[sb + 2])&#13;&#10;&#13;&#10;&#9;-- PITCH&#13;&#10;&#13;&#10;&#9;-- Byte 3 - Tune [64+/-50 = 0+/-50 cent]&#13;&#10;&#9;setModValue(&quot;knobTimbreTune&quot;, programData[sb + 3] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 4 - Bend Range [64+/-12 = 0+/-12 note]&#13;&#10;&#9;setModValue(&quot;knobTimbreBendRange&quot;, programData[sb + 4] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 5 - Transpose [64+/-24 = 0+/-24 note]&#13;&#10;&#9;setModValue(&quot;knobTimbreTranspose&quot;, programData[sb + 5] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 6 - Vibrato Int [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobTimbreVibrato&quot;, programData[sb + 6] - 64)&#13;&#10;&#13;&#10;&#9;-- OSC1&#13;&#10;&#13;&#10;&#9;-- Byte 7 - Wave [0~7 = Saw~Audio In]&#9;&#13;&#10;&#9;setOsc1WaveformByValue(programData[sb + 7], true)&#13;&#10;&#13;&#10;&#9;-- Byte 8 - Waveform CTRL1 [0~127]&#13;&#10;&#9;setModValue(&quot;knobOsc1Control1&quot;, programData[sb + 8])&#13;&#10;&#13;&#10;&#9;if programData[sb + 7] ~= 5 then -- DWGS not selected&#13;&#10;&#13;&#10;&#9;&#9;-- Byte 9 - Waveform CTRL2 [0~127]&#13;&#10;&#9;&#9;setModValue(&quot;knobOsc1Control2&quot;, programData[sb + 9])&#13;&#10;&#9;else&#13;&#10; &#13;&#10;&#9;&#9;-- Byte 10 - DWGS Wave [0~63 = DWGS No. 1~64 (when OSC1 Wave is &quot;DWGS&quot;)]&#13;&#10;&#9;&#9;setModValue(&quot;knobOsc1Control2&quot;, programData[sb + 10])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Byte 11 - (dummy byte)&#13;&#10;&#13;&#10;&#9;-- OSC2&#13;&#10;&#13;&#10;&#9;-- Byte 12 - packed byte&#13;&#10;  &#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Mod Select [0~3 = Off, Ring, Sync, RingSync]&#13;&#10;&#9;processOscModData(extractPackByte(programData[sb + 12], 4, 5), true)&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~2 = Saw, Squ, Tri]&#13;&#10;&#9;setOsc2WaveformByValue(extractPackByte(programData[sb + 12], 0, 1), true)&#13;&#10;&#13;&#10;&#9;-- Byte 13 - Semitone [64+/-24 = 0+/-24 note]&#13;&#10;&#9;setModValue(&quot;knobOsc2Semitone&quot;, programData[sb + 13] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 14 - Tune [64+/-63=0+/-63]&#13;&#10;&#9;setModValue(&quot;knobOsc2Tune&quot;, programData[sb + 14] - 64)&#13;&#10;&#13;&#10;&#9;-- PITCH (2)&#13;&#10;&#13;&#10;&#9;-- Byte 15 - packed byte&#13;&#10;  &#9;-- Bit B7 - not use&#13;&#10;&#9;-- Bit B0~6 - Portamento Time [0~127]&#13;&#10;&#9;setModValue(&quot;knobTimbrePorta&quot;, extractPackByte(programData[sb + 15], 0, 6))&#13;&#10;&#13;&#10;&#9;-- MIXER&#13;&#10;&#13;&#10;&#9;-- Byte 16 - OSC1 Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobMixerOsc1&quot;, programData[sb + 16])&#13;&#10;&#13;&#10;&#9;-- Byte 17 - OSC2 Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobMixerOsc2&quot;, programData[sb + 17])&#13;&#10;&#13;&#10;&#9;-- Byte 18 - Noise [0~127]&#13;&#10;&#9;setModValue(&quot;knobMixerNoise&quot;, programData[sb + 18])&#13;&#10;&#13;&#10;&#9;-- FILTER&#13;&#10;&#13;&#10;&#9;-- Byte 19 - Filter Type [0~3 = 24LPF, 12LPF, 12BPF, 12HPF]&#13;&#10;&#9;setFilterTypeByValue(programData[sb + 19], true)&#13;&#10;&#13;&#10;&#9;-- Byte 20 - Filter Cutoff [0~127]&#13;&#10;&#9;setModValue(&quot;knobFilterCutoff&quot;, programData[sb + 20])&#13;&#10;&#13;&#10;&#9;-- Byte 21 - Filter Resonance [0~127]&#13;&#10;&#9;setModValue(&quot;knobFilterResonance&quot;, programData[sb + 21])&#13;&#10;&#13;&#10;&#9;-- Byte 22 - Filter EG1 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobFilterEG1Int&quot;, programData[sb + 22] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 23 - Filter Velocity Sense [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobFilterVeloSens&quot;, programData[sb + 23] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 24 - Filter Keyboard Track [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobFilterKbdTrk&quot;, programData[sb + 24] - 64)&#13;&#10;&#13;&#10;&#9;-- AMP&#13;&#10;&#13;&#10;&#9;-- Byte 25 - Amp Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobAmpLevel&quot;, programData[sb + 25])&#13;&#10;&#13;&#10;&#9;-- Byte 26 - Amp Panpot [0~64~127 = L64~CNT~R63]&#13;&#10;&#9;setModValue(&quot;knobAmpPan&quot;, programData[sb + 26] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 27 - packed byte&#13;&#10;  &#9;-- Bit 7 - not use&#13;&#10;&#9;-- Bit 6 - Amp SW [0, 1 = EG2, Gate]&#13;&#10;&#9;setModValue(&quot;btnAmpEG2Gate&quot;, extractPackByte(programData[sb + 27], 6))&#13;&#10;&#13;&#10;&#9;-- Bit 1~5 - not use&#13;&#10;&#9;-- Bit 0   | Distortion [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnAmpDistortion&quot;, extractPackByte(programData[sb + 27], 0))&#13;&#10;&#13;&#10;&#9;-- Byte 28 - Velocity Sense [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobAmpVeloSens&quot;, programData[sb + 28] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 29 - Keyboard Track [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobAmpKeyTrack&quot;, programData[sb + 29] - 64)&#13;&#10;&#13;&#10;&#9;-- EG1&#13;&#10;&#13;&#10;&#9;-- Byte 30 - Attack [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG1Attack&quot;, programData[sb + 30])&#13;&#10;&#13;&#10;&#9;-- Byte 31 - Decay [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG1Decay&quot;, programData[sb + 31])&#13;&#10;&#13;&#10;&#9;-- Byte 32 - Sustain [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG1Sustain&quot;, programData[sb + 32])&#13;&#10;&#13;&#10;&#9;-- Byte 33 - Release [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG1Release&quot;, programData[sb + 33])&#13;&#10;&#13;&#10;&#9;-- EG2&#13;&#10;&#13;&#10;&#9;-- Byte 34 - Attack [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG2Attack&quot;, programData[sb + 34])&#13;&#10;&#13;&#10;&#9;-- Byte 35 - Decay [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG2Decay&quot;, programData[sb + 35])&#13;&#10;&#13;&#10;&#9;-- Byte 36 - Sustain [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG2Sustain&quot;, programData[sb + 36])&#13;&#10;&#13;&#10;&#9;-- Byte 37 - Release [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG2Release&quot;, programData[sb + 37])&#13;&#10;&#13;&#10;&#9;-- LFO1&#13;&#10;&#13;&#10;&#9;-- Byte 38 - packed byte&#13;&#10;&#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Key Sync [0~2 = OFF, Timbre, Voice]&#13;&#10;&#9;setModValue(&quot;cbLFO1KeySync&quot;, extractPackByte(programData[sb + 38], 4, 5))&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~3 = Saw, Squ, Tri, S/H]&#13;&#10;&#9;setLFO1TypeByValue(extractPackByte(programData[sb + 38], 0, 1), true)&#13;&#10;&#13;&#10;&#9;-- Byte 39 - LFO1 Frequency [0~127]&#13;&#10;&#9;setModValue(&quot;knobLFO1Frequency&quot;, programData[sb + 39])&#13;&#10;&#13;&#10;&#9;-- Byte 40 - packed byte&#13;&#10;  &#9;-- Bit 7 - LFO1 Tempo Sync [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnLFO1TempoSync&quot;, extractPackByte(programData[sb + 40], 7))&#13;&#10;&#13;&#10;&#9;-- Bit 5,6 - not use&#13;&#10;&#9;-- Bit 0~4 - LFO1 Sync Note [0~14 = 1/1~1/32]&#13;&#10;&#9;setModValue(&quot;cbLFO1SyncNote&quot;, extractPackByte(programData[sb + 40], 0, 4))&#13;&#10;&#13;&#10;&#9;-- LFO2&#13;&#10;&#13;&#10;&#9;-- Byte 41 - packed byte&#13;&#10;  &#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Key Sync [0~2 = OFF, Timbre, Voice]&#13;&#10;&#9;setModValue(&quot;cbLFO2KeySync&quot;, extractPackByte(programData[sb + 41], 4, 5))&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~3 = Saw, Squ(+), Sin, S/H]&#13;&#10;&#9;setLFO2TypeByValue(extractPackByte(programData[sb + 41], 0, 1), true)&#13;&#10;&#13;&#10;&#9;-- Byte 42 - LFO2 Frequency [0~127]&#13;&#10;&#9;setModValue(&quot;knobLFO2Frequency&quot;, programData[sb + 42])&#13;&#10;&#13;&#10;&#9;-- Byte 43 - packed byte&#13;&#10;  &#9;-- Bit 7 - LFO2 Tempo Sync [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnLFO2TempoSync&quot;, extractPackByte(programData[sb + 43], 7))&#13;&#10;&#13;&#10;&#9;-- Bit 5,6 - not use&#13;&#10;&#9;-- Bit 0~4 - LFO2 Sync Note [0~14 = 1/1~1/32]&#13;&#10;&#9;setModValue(&quot;cbLFO2SyncNote&quot;, extractPackByte(programData[sb + 43], 0, 4))&#13;&#10;&#13;&#10;&#9;-- PATCH&#13;&#10;&#13;&#10;&#9;-- Byte 44 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - Patch1 Destination [0~7 = PITCH~LFO2FREQ]&#13;&#10;&#9;setModValue(&quot;cbPatchDestination1&quot;, extractPackByte(programData[sb + 44], 4, 7))&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Patch1 Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;setModValue(&quot;cbPatchSource1&quot;, extractPackByte(programData[sb + 44], 0, 3))&#13;&#10;&#13;&#10;&#9;-- Byte 45 - Patch1 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobPatch1Amount&quot;, programData[sb + 45] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 46 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - Patch2 Destination [0~7 = PITCH~LFO2FREQ]&#13;&#10;&#9;setModValue(&quot;cbPatchDestination2&quot;, extractPackByte(programData[sb + 46], 4, 7))&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Patch2 Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;setModValue(&quot;cbPatchSource2&quot;, extractPackByte(programData[sb + 46], 0, 3))&#13;&#10;&#13;&#10;&#9;-- Byte 47 - Patch2 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobPatch2Amount&quot;, programData[sb + 47] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 48 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - Patch3 Destination [0~7=PITCH~LFO2FREQ]&#13;&#10;&#9;setModValue(&quot;cbPatchDestination3&quot;, extractPackByte(programData[sb + 48], 4, 7))&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Patch3 Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;setModValue(&quot;cbPatchSource3&quot;, extractPackByte(programData[sb + 48], 0, 3))&#13;&#10;&#13;&#10;&#9;-- Byte 49 - Patch3 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobPatch3Amount&quot;, programData[sb + 49] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 50 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - Patch4 Destination [0~7 = PITCH~LFO2FREQ]&#13;&#10;&#9;setModValue(&quot;cbPatchDestination4&quot;, extractPackByte(programData[sb + 50], 4, 7))&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Patch4 Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;setModValue(&quot;cbPatchSource4&quot;, extractPackByte(programData[sb + 50], 0, 3))&#13;&#10;&#13;&#10;&#9;-- Byte 51 - Patch4 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobPatch4Amount&quot;, programData[sb + 51] - 64)&#13;&#10;&#13;&#10;&#9;-- SEQ&#13;&#10;&#13;&#10;&#9;-- Byte 52 - packed byte&#13;&#10; &#9;-- Bit 7 - SEQ On/Off [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnSeqOnOff&quot;, extractPackByte(programData[sb + 52], 7))&#13;&#10;&#13;&#10;&#9;-- Bit 6 - SEQ Run Mode [0, 1 = 1Shot, Loop (only Loop when KeySync is &quot;OFF&quot;.)]&#13;&#10;&#9;setModValue(&quot;cbSeqRunMode&quot;, extractPackByte(programData[sb + 52], 6))&#13;&#10;&#13;&#10;&#9;-- Bit 5 - not use&#13;&#10;&#9;-- Bit 0~4 - SEQ Resolution [0~15 = 1/48~1/1]&#13;&#10;&#9;setModValue(&quot;cbSeqResolution&quot;, extractPackByte(programData[sb + 52], 0, 4))&#13;&#10;&#13;&#10;&#9;-- Byte 53 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - SEQ Last Step [0~15 = 1~16]&#13;&#10;&#9;setModValue(&quot;knobSeqLastStep&quot;, extractPackByte(programData[sb + 53], 4, 7) + 1)&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - SEQ Type [0~3 = Fowrd,Reverse,Alt1,Alt2]&#13;&#10;&#9;setModValue(&quot;cbSeqType&quot;, extractPackByte(programData[sb + 53], 2, 3))&#13;&#10;&#13;&#10;&#9;-- Bit 0,1 - SEQ Key Sync [0~2 = OFF, Timbre,Voice]&#13;&#10;&#9;setModValue(&quot;cbSeqKeySync&quot;, extractPackByte(programData[sb + 53], 0, 1))&#13;&#10;&#13;&#10;&#9;-- SEQ1 parameter&#13;&#10;&#9;-- Byte 54 - Knob 1 [0~30 = None~Patch4Int]&#13;&#10;&#9;setModValue(&quot;cbSeqKnob1&quot;, programData[sb + 54])&#13;&#10;&#13;&#10;&#9;-- Byte 55 - packed byte&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - SEQ1 Motion Type [0, 1 = Smooth, Step]&#13;&#10;&#9;setModValue(&quot;cbSeqMotion1&quot;, extractPackByte(programData[sb + 55], 0))&#13;&#10;&#13;&#10;&#9;-- Byte 56~71 - SEQ1 Step Value [64+/-63 = 0+/-63]&#13;&#10;&#9;assertSeqKnobBoundsByValue(1, programData[sb + 54])&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;setModValue(string.format(&quot;knobSeq1Step%d&quot;, i), programData[sb + 55 + i] - 64)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- SEQ2 parameter&#13;&#10;&#9;-- Byte 72 - Knob 2 [0~30 = None~Patch4Int]&#13;&#10;&#9;setModValue(&quot;cbSeqKnob2&quot;, programData[sb + 72])&#13;&#10;&#9;&#13;&#10;&#9;-- Byte 73 - packed byte&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - SEQ2 Motion Type [0, 1 = Smooth, Step]&#13;&#10;&#9;setModValue(&quot;cbSeqMotion2&quot;, extractPackByte(programData[sb + 73], 0))&#13;&#10;&#13;&#10;&#9;-- Byte 74~89 - SEQ2 Step Value [64+/-63 = 0+/-63]&#13;&#10;&#9;assertSeqKnobBoundsByValue(2, programData[sb + 72])&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;setModValue(string.format(&quot;knobSeq2Step%d&quot;, i), programData[sb + 73 + i] - 64)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- SEQ3 parameter&#13;&#10;&#9;-- Byte 90 - Knob 3 [0~30 = None~Patch4Int]&#13;&#10;&#9;setModValue(&quot;cbSeqKnob3&quot;, programData[sb + 90])&#13;&#10;&#9;&#13;&#10;&#9;-- Byte 91 - packed byte&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - SEQ3 Motion Type [0, 1 = Smooth, Step]&#13;&#10;&#9;setModValue(&quot;cbSeqMotion3&quot;, extractPackByte(programData[sb + 91], 0))&#13;&#10;&#13;&#10;&#9;-- Byte 92~107 - SEQ3 Step Value [64+/-63 = 0+/-63]&#13;&#10;&#9;assertSeqKnobBoundsByValue(3, programData[sb + 90])&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;setModValue(string.format(&quot;knobSeq3Step%d&quot;, i), programData[sb + 91 + i] - 64)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Synth parameter (Mode = Split, Dual) - will be applied same actions, but&#13;&#10;&#9;-- start byte will be shifted&#13;&#10;&#9;-- Bytes 146~253 - TIMBRE2 DATA&#13;&#10;&#13;&#10;&#9;-- Select SEQ1 to show&#13;&#10;&#9;selectSequenceByValue(0)&#13;&#10;&#13;&#10;&#9;mutePanelOut(false)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="9bb574d279204d9faf21c8ea8ac9dbd2"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="syncPanelWithBuffer" luaMethodCode="function syncPanelWithBuffer()&#13;&#10;&#10;&#9;-- Write timbre knob values to buffer in order to save / send actual values&#13;&#10;&#13;&#10;&#9;-- StartByte disposition&#13;&#10;&#9;local sb = DATA_PREAMBLE_BYTES + 1 &#13;&#10;&#13;&#10;&#9;-- Program name size = 12B&#13;&#10;&#9;-- Stored directly in dataBuffer&#13;&#10;&#13;&#10;&#9;-- Bytes 12~15 not in use&#13;&#10;&#13;&#10;&#9;-- Byte 16 - packed byte&#13;&#10;  &#9;-- Bit 6,7 - Timbre Voice [0~2 = 1+3, 2+2, 3+1]&#13;&#10;&#9;dataBuffer[sb + 16] = packBitsToByte(dataBuffer[sb + 16], getModValue(&quot;cbTimbreVoice&quot;), 6, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 4,5 - Voice Mode [0~3 = Single, Split, Layer(Dual?), Vocoder]&#13;&#10;&#9;dataBuffer[sb + 16] = packBitsToByte(dataBuffer[sb + 16], getModValue(&quot;cbTimbreVoiceMode&quot;), 4, 5)&#13;&#10;&#13;&#10;&#9;-- Bit 0-3 - not used&#13;&#10;&#13;&#10;&#9;-- Byte 17 - packed byte&#13;&#10;&#9;-- Bit 4~7 - Scale Key [0~11 = C,C#,D,D#,E,F,F#,G,G#,A,A#,B]&#13;&#10;&#9;dataBuffer[sb + 17] = packBitsToByte(dataBuffer[sb + 17], getModValue(&quot;cbTimbreScaleKey&quot;), 4, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Scale Type [0~9 = Equal Temp~User Scale]&#13;&#10;&#9;dataBuffer[sb + 17] = packBitsToByte(dataBuffer[sb + 17], getModValue(&quot;cbTimbreScaleType&quot;), 0, 3)&#13;&#10;&#9;&#13;&#10;&#9;-- 18 - Split Point [0~127 = C-1~G9]&#13;&#10;&#9;dataBuffer[sb + 18] = getModValue(&quot;knobTimbreSplitPoint&quot;)&#13;&#10;&#13;&#10;&#9;-- DELAY FX&#13;&#10;&#13;&#10;&#9;-- Byte 19 - packed byte&#13;&#10;  &#9;-- Bit 7 - Delay tempo sync [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 19] = packBitsToByte(dataBuffer[sb + 19], getModValue(&quot;btnDelayTempoSync&quot;), 7)&#13;&#10;&#13;&#10;&#9;-- Bit 4~6 - not use&#13;&#10;&#9;-- Bit 0~3 - Time Base [0~14 = 1/32~1/1]&#13;&#10;&#9;dataBuffer[sb + 19] = packBitsToByte(dataBuffer[sb + 19], getModValue(&quot;cbDelaySyncNote&quot;), 0, 3)&#13;&#10;&#13;&#10;&#9;-- Byte 20 - Delay Time [0~127]&#13;&#10;&#9;dataBuffer[sb + 20] = getModValue(&quot;knobDelayTime&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 21 - Delay Depth [0~127]&#13;&#10;&#9;dataBuffer[sb + 21] = getModValue(&quot;knobDelayFeedback&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 22 - Delay Type [0~2 = StereoDelay, CrossDelay, L/R Delay]&#13;&#10;&#9;dataBuffer[sb + 22] = getModValue(&quot;cbDelayType&quot;)&#13;&#10;&#13;&#10;&#9;-- MOD FX&#13;&#10;&#13;&#10;&#9;-- Byte 23 - Mod LFO Speed [0~127]&#13;&#10;&#9;dataBuffer[sb + 23] = getModValue(&quot;knobDelaySpeed&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 24 - Mod Depth [0~127]&#13;&#10;&#9;dataBuffer[sb + 24] = getModValue(&quot;knobDelayDepth&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 25 - Mod Type [0~2 = Cho/Flg, Ensemble, Phaser]&#13;&#10;&#9;dataBuffer[sb + 25] = getModValue(&quot;cbModType&quot;)&#13;&#10;&#13;&#10;&#9;-- EQ&#13;&#10;&#13;&#10;&#9;-- Byte 26 - Hi Freq [0~29 = 1.00~18.0 KHz]&#13;&#10;&#9;dataBuffer[sb + 26] = getModValue(&quot;knobEQHighFreq&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 27 - Hi Gain [64+/-12 = 0+/-12]&#13;&#10;&#9;dataBuffer[sb + 27] = getModValue(&quot;knobEQHighGain&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 28 - Lo Freq [0~29 = 40~1000 Hz]&#13;&#10;&#9;dataBuffer[sb + 28] = getModValue(&quot;knobEQLowFreq&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 29 - Lo Gain [64+/-12 = 0+/-12]&#13;&#10;&#9;dataBuffer[sb + 29] = getModValue(&quot;knobEQLowGain&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- ARPEGGIO&#13;&#10;&#13;&#10;&#9;-- Byte 30 - Tempo (MSB) [20~300]&#13;&#10;&#9;-- Byte 31 - Tempo (LSB)&#13;&#10;&#13;&#10;&#9;dataBuffer[sb + 30] = calculateLSBMSB(getModValue(&quot;knobArpTempo&quot;), true, false)[2]&#13;&#10;&#9;dataBuffer[sb + 31] = calculateLSBMSB(getModValue(&quot;knobArpTempo&quot;), true, false)[1]&#13;&#10;&#13;&#10;&#9;-- Byte 32&#13;&#10;&#9;-- Bit 7 - Arpeggio On/Off [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 32] = packBitsToByte(dataBuffer[sb + 32], getModValue(&quot;btnArpOnOff&quot;), 7)&#13;&#10;&#13;&#10;&#9;-- Bit 6 - Latch [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 32] = packBitsToByte(dataBuffer[sb + 32], getModValue(&quot;btnArpLatch&quot;), 6)&#13;&#10;&#13;&#10;&#9;-- Bit 4,5 - Target [0~2 = Both, Timb1, Timb2]&#13;&#10;&#9;dataBuffer[sb + 32] = packBitsToByte(dataBuffer[sb + 32], getModValue(&quot;cbArpTarget&quot;), 4, 5)&#13;&#10;&#13;&#10;&#9;-- Bit 1 - not use&#13;&#10;&#9;-- Bit 0 - Key Sync [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 32] = packBitsToByte(dataBuffer[sb + 32], getModValue(&quot;btnArpKeySync&quot;), 0)&#13;&#10;&#13;&#10;&#9;-- Byte 33&#13;&#10;&#9;-- Bit 0~3 - Type [0~5 = Up~Trigger]&#13;&#10;&#9;dataBuffer[sb + 33] = packBitsToByte(dataBuffer[sb + 33], getModValue(&quot;cbArpType&quot;), 0, 3)&#13;&#10;&#13;&#10;&#9;-- Bit 4~7 - Range [0~3 = 1~4 Octave]&#13;&#10;&#9;dataBuffer[sb + 33] = packBitsToByte(dataBuffer[sb + 33], getModValue(&quot;cbArpRange&quot;), 4, 7)&#13;&#10;&#13;&#10;&#9;-- Byte 34 - Gate time [0~100 = 0~100 %]&#13;&#10;&#9;dataBuffer[sb + 34] = getModValue(&quot;knobArpGate&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 35 - Resolution [0~5 = 1/24, 1/16, 1/12, 1/8, 1/6, 1/4]&#13;&#10;&#9;dataBuffer[sb + 35] = getModValue(&quot;cbArpResolution&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 36 - Swing [0+/-100 = 0+/-100 %]&#13;&#10;&#9;dataBuffer[sb + 36] = bit.band(getModValue(&quot;knobArpSwing&quot;), 0xFF)&#13;&#10;&#13;&#10;&#9;-- Byte 37 - (dummy byte)&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;syncTimbreWithBuffer(sharedValues.selectedTimbre)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;syncVocoderWithBuffer()&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="619185285e2e48a8927f511423253964"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="assertSysExFormulas" luaMethodCode="function assertSysExFormulas(timbreNumber)&#10;&#13;&#10;&#9;-- Accepted values are:&#13;&#10;&#9;-- 0 - for Timbre mode, Timbre 1&#13;&#10;&#9;-- 1 - for Timbre mode, Timbre 2&#13;&#10;&#9;-- 2 - for Vocoder mode&#13;&#10;&#13;&#10;&#9;local i, j, startPoint&#13;&#10;&#9;local numShift&#13;&#10;&#9;local startPoint&#13;&#10;&#9;local lsms&#13;&#10;&#13;&#10;&#9;if (timbreNumber == 0) or (timbreNumber == 1) then&#13;&#10;&#13;&#10;&#9;&#9;numShift = timbreNumber * SYSEX_VAL_DIFF&#13;&#10;&#9;&#9;numShiftAlter = timbreNumber * SYSEX_VAL_DIFF_ALT&#13;&#10;&#13;&#10;&#9;&#9;-- Numbers were verified one-by-one&#13;&#10;&#13;&#10;&#9;&#9;-- Non-visual components&#13;&#10;&#9;&#9;sharedValues.osc1SEValues &#9;&#9;= setNewModNumber(sharedValues.osc1SEValues,&#9;numShift + 0x49)&#13;&#10;&#9;&#9;sharedValues.oscModSEValues&#9;&#9;= setNewModNumber(sharedValues.oscModSEValues,&#9;numShift + 0x4E)&#13;&#10;&#9;&#9;sharedValues.osc2SEValues&#9;&#9;= setNewModNumber(sharedValues.osc2SEValues,&#9;numShift + 0x4D)&#13;&#10;&#9;&#9;sharedValues.filterSEValues&#9;&#9;= setNewModNumber(sharedValues.filterSEValues,&#9;numShift + 0x54)&#13;&#10;&#9;&#9;sharedValues.LFO1SEValues&#9;&#9;= setNewModNumber(sharedValues.LFO1SEValues,&#9;numShift + 0x68)&#13;&#10;&#9;&#9;sharedValues.LFO2SEValues&#9;&#9;= setNewModNumber(sharedValues.LFO2SEValues,&#9;numShift + 0x6D)&#13;&#10;&#13;&#10;&#9;&#9;-- Visual components&#13;&#10;&#9;&#9;-- Formulas in the synth mode can be calculated&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbTimbreMidiCh&quot;, numShift + 0x43)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbTimbreAssign&quot;, numShift + 0x40)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnEG2Reset&quot;, numShift + 0x13D)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnEG1Reset&quot;, numShift + 0x13C)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbTimbreTrigger&quot;, numShift + 0x41)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbTimbrePriority&quot;, numShiftAlter + 0x7E)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreDetune&quot;, (numShift * 2) + 0x42)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreTune&quot;, numShift + 0x45)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreBendRange&quot;, numShift + 0x48)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreTranspose&quot;, numShift + 0x44)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreVibrato&quot;, numShift + 0x46)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobOsc1Control1&quot;, numShift + 0x4A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobOsc2Semitone&quot;, numShift + 0x4F)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobOsc2Tune&quot;, numShift + 0x50)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobMixerOsc1&quot;, numShift + 0x51)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobMixerOsc2&quot;, numShift + 0x52)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobMixerNoise&quot;, numShift + 0x53)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbrePorta&quot;, numShift + 0x47)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterCutoff&quot;, numShift + 0x55)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterResonance&quot;, numShift + 0x56)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterEG1Int&quot;, numShift + 0x57)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterVeloSens&quot;, numShift + 0x62)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterKbdTrk&quot;, numShift + 0x58)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobAmpLevel&quot;, numShift + 0x59)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobAmpPan&quot;, numShift + 0x5A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnAmpEG2Gate&quot;, numShift + 0x5B)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnAmpDistortion&quot;, numShift + 0x5C)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG1Attack&quot;, numShift + 0x5E)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG1Decay&quot;, numShift + 0x5F)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG1Sustain&quot;, numShift + 0x60)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG1Release&quot;, numShift + 0x61)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG2Attack&quot;, numShift + 0x63)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG2Decay&quot;, numShift + 0x64)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG2Sustain&quot;, numShift + 0x65)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG2Release&quot;, numShift + 0x66)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobAmpVeloSens&quot;, numShift + 0x67)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobAmpKeyTrack&quot;, numShift + 0x5D)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobLFO1Frequency&quot;, numShift + 0x69)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbLFO1KeySync&quot;, numShift + 0x6C)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnLFO1TempoSync&quot;, numShift + 0x6B)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbLFO1SyncNote&quot;, numShift + 0x6A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobLFO2Frequency&quot;, numShift + 0x6E)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbLFO2KeySync&quot;, numShiftAlter + 0x71)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnLFO2TempoSync&quot;, numShiftAlter + 0x70)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbLFO2SyncNote&quot;, numShift + 0x6F)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchSource1&quot;, numShiftAlter + 0x72)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchSource2&quot;, numShiftAlter + 0x75)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchSource3&quot;, numShiftAlter + 0x78)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchSource4&quot;, numShiftAlter + 0x7B)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchDestination1&quot;, numShiftAlter + 0x73)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchDestination2&quot;, numShiftAlter + 0x76)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchDestination3&quot;, numShiftAlter + 0x79)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchDestination4&quot;, numShiftAlter + 0x7C)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobPatch1Amount&quot;, numShiftAlter + 0x74)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobPatch2Amount&quot;, numShiftAlter + 0x77)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobPatch3Amount&quot;, numShiftAlter + 0x7A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobPatch4Amount&quot;, numShiftAlter + 0x7D)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnSeqOnOff&quot;, numShift + 0x100)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqRunMode&quot;, numShift + 0x103)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqResolution&quot;, numShift + 0x105)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobSeqLastStep&quot;, numShift + 0x101)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqType&quot;, numShift + 0x102)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqKeySync&quot;, numShift + 0x104)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqKnob1&quot;, numShift + 0x106)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqMotion1&quot;, numShift + 0x107)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqKnob2&quot;, numShift + 0x118)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqMotion2&quot;, numShift + 0x119)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqKnob3&quot;, numShift + 0x12A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbSeqMotion3&quot;, numShift + 0x12B)&#13;&#10;&#13;&#10;&#9;&#9;startPoint = 0x107&#13;&#10;&#9;&#9;for j = 1, 3 do&#13;&#10;&#9;&#9;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;&#9;&#9;setSEFormulaMod(string.format(&quot;knobSeq%dStep%d&quot;, j, i), numShift + startPoint + i + (18 * (j - 1)))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;-- Non-visual components&#13;&#10;&#9;&#9;sharedValues.osc1SEValues &#9;&#9;= setNewModNumber(sharedValues.osc1SEValues, 0x270)&#13;&#10;&#9;&#9;sharedValues.filterSEValues&#9;&#9;= setNewModNumber(sharedValues.filterSEValues, 0x300)&#13;&#10;&#9;&#9;sharedValues.LFO1SEValues&#9;&#9;= setNewModNumber(sharedValues.LFO1SEValues, 0x318)&#13;&#10;&#9;&#9;sharedValues.LFO2SEValues&#9;&#9;= setNewModNumber(sharedValues.LFO2SEValues, 0x320)&#13;&#10;&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbTimbreMidiCh&quot;, 0x263)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbTimbreAssign&quot;, 0x260)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnEG2Reset&quot;, 0x267)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnEG1Reset&quot;, 0x266)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbTimbreTrigger&quot;, 0x261)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbTimbrePriority&quot;, 0x264)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreDetune&quot;, 0x262)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreTune&quot;, 0x269)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreBendRange&quot;, 0x26C)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreTranspose&quot;, 0x268)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbreVibrato&quot;, 0x26A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobTimbrePorta&quot;, 0x26B)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobOsc1Control1&quot;, 0x271)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobOsc2Semitone&quot;, 0x27B)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobOsc2Tune&quot;, 0x27D)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobMixerOsc1&quot;, 0x278)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobMixerOsc2&quot;, 0x279)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobMixerNoise&quot;, 0x27A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterCutoff&quot;, 0x301)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterResonance&quot;, 0x302)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterEG1Int&quot;, 0x304)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterVeloSens&quot;, 0x27C)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobFilterKbdTrk&quot;, 0x305)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobAmpLevel&quot;, 0x308)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobAmpPan&quot;, 0x309)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnAmpEG2Gate&quot;, 0x27E)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnAmpDistortion&quot;, 0x30A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobAmpVeloSens&quot;, 0x30B)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobAmpKeyTrack&quot;, 0x30C)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG1Attack&quot;, 0x314)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG1Decay&quot;, 0x315)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG1Sustain&quot;, 0x316)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG1Release&quot;, 0x317)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG2Attack&quot;, 0x310)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG2Decay&quot;, 0x311)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG2Sustain&quot;, 0x312)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobEG2Release&quot;, 0x313)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobLFO1Frequency&quot;, 0x319)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbLFO1KeySync&quot;, 0x31C)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnLFO1TempoSync&quot;, 0x31B)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbLFO1SyncNote&quot;, 0x31A)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;knobLFO2Frequency&quot;, 0x321)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbLFO2KeySync&quot;, 0x324)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;btnLFO2TempoSync&quot;, 0x323)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbLFO2SyncNote&quot;, 0x322)&#13;&#10;&#9;&#9;setSEFormulaMod(&quot;cbPatchSource1&quot;, 0x303)&#13;&#10;&#13;&#10;&#9;&#9;startPoint = 0x32F&#13;&#10;&#9;&#9;for j = 1, 2 do&#13;&#10;&#9;&#9;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;&#9;&#9;setSEFormulaMod(string.format(&quot;knobSeq%dStep%d&quot;, j, i), startPoint + i + (16 * (j - 1)))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Make new formulas work for input messages&#13;&#10;&#9;panel:getInputComparator():rehashComparator()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="98912430126341ecb30cfaab2900b0ed"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setModValue" luaMethodCode="function setModValue(modname, modvalue)&#13;&#10;&#13;&#10;&#9;local modVal = modvalue&#13;&#10;&#9;local modMax = getModPropN(modByName(modname), &quot;modulatorMax&quot;)&#13;&#10;&#13;&#10;&#9;if modvalue &gt; modMax then&#13;&#10;&#9;&#9;modVal = modMax&#13;&#10;&#9;&#9;genAssertErrorMessage(modname, modMax, modvalue, errMaxValExceeded)&#13;&#10; &#9;end&#13;&#10;&#13;&#10;&#9;modByName(modname):setModulatorValue(modvalue, false, false, false)&#13;&#10;end&#13;&#10;&#13;&#10;function setModValueCheck(modname, modvalue)&#13;&#10;&#13;&#10;&#9;-- Set value only if the control is enabled&#13;&#10;&#9;if getComp(modname):getPropertyInt(&quot;componentDisabled&quot;) == 1 then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local modVal = modvalue&#13;&#10;&#9;local modMax = getModPropN(modByName(modname), &quot;modulatorMax&quot;)&#13;&#10;&#13;&#10;&#9;if modvalue &gt; modMax then&#13;&#10;&#9;&#9;modVal = modMax&#13;&#10;&#9;&#9;genAssertErrorMessage(modname, modMax, modvalue, errMaxValExceeded)&#13;&#10; &#9;end&#13;&#10;&#13;&#10;&#9;modByName(modname):setModulatorValue(modvalue, false, false, false)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="d35ea17f22d34584b25f075b07f54e71"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="assertSeqKnobBoundsByValue" luaMethodCode="function assertSeqKnobBoundsByValue(knobGroup, selectedMode)&#10;&#9;&#13;&#10;&#9;local i&#13;&#10;&#9;local minV, maxV, defV&#13;&#10;&#9;local currKnob&#13;&#10;&#13;&#10;&#9;local knobBounds = getSeqStepMaxVal(selectedMode)&#13;&#10;&#13;&#10;&#9;minV, maxV, defV = knobBounds[1], knobBounds[2], knobBounds[3]&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#13;&#10;&#9;&#9;currKnob = string.format(&quot;knobSeq%dStep%d&quot;, knobGroup, i)&#13;&#10;&#13;&#10;&#9;&#9;setCompPropN(currKnob, &quot;uiSliderMin&quot;, minV)&#13;&#10;&#9;&#9;setCompPropN(currKnob, &quot;uiSliderMax&quot;, maxV)&#13;&#10;&#9;&#9;setCompPropN(currKnob, &quot;uiSliderDoubleClickValue&quot;, defV)&#13;&#10;&#13;&#10;&#9;&#9;if modByName(currKnob):getValue() &gt; maxV then&#13;&#10;&#9;&#9;&#9;modByName(currKnob):setModulatorValue(maxV, false, false, false)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;if modByName(currKnob):getValue() &lt; minV then&#13;&#10;&#9;&#9;&#9;modByName(currKnob):setModulatorValue(minV, false, false, false)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;getComp(currKnob):repaint()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;externalRepaintSequencer()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="442be729f07240fa9e2a808e7fbbf7f7"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="syncTimbreWithBuffer" luaMethodCode="function syncTimbreWithBuffer(layerToSync)&#13;&#10;&#10;&#9;-- Write timbre knob values to buffer in order to save / send actual values&#13;&#10;&#9;-- or just to change timbre layer&#13;&#10;&#13;&#10;&#9;local sb &#13;&#10;&#13;&#10;&#9;if layerToSync == 0 then&#13;&#10;&#9;&#9;-- First byte of Timbre One data&#13;&#10;&#9;&#9;sb = TIMBRE_ONE_STARTBYTE -- 45&#13;&#10;&#9;else&#13;&#10;&#9;&#9;-- First byte of Timbre Two data&#13;&#10;&#9;&#9;sb = TIMBRE_TWO_STARTBYTE -- 152&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Synth parameter (Mode = Single, Split, Dual)&#13;&#10;&#9;-- Bytes 38~145 - TIMBRE1 DATA&#13;&#10;&#13;&#10;&#9;-- Byte 0 - MIDI ch. [-1, 0~15 = GLB, 1~16 ch]&#13;&#10;&#9;dataBuffer[sb] = bit.band(getModValue(&quot;cbTimbreMidiCh&quot;) - 1, 0xFF)&#13;&#10;&#13;&#10;&#9;-- Byte 1 - packed byte&#13;&#10;   &#9;-- Bit 6,7 - Assign Mode [0, 1, 2 = Mono, Poly, Unison]&#13;&#10;&#9;dataBuffer[sb + 1] = packBitsToByte(dataBuffer[sb + 1], tonumber(getModValue(&quot;cbTimbreAssign&quot;)), 6, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 5 - EG2 reset [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 1] = packBitsToByte(dataBuffer[sb + 1], getModValue(&quot;btnEG2Reset&quot;), 5)&#13;&#10;&#13;&#10;&#9;-- Bit 4 - EG1 reset [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 1] = packBitsToByte(dataBuffer[sb + 1], getModValue(&quot;btnEG1Reset&quot;), 4)&#13;&#10;&#13;&#10;&#9;-- Bit 3 - Trigger Mode [0, 1 = Single, Multi (use Mono / Unison Mode)]&#13;&#10;&#9;dataBuffer[sb + 1] = packBitsToByte(dataBuffer[sb + 1], getModValue(&quot;cbTimbreTrigger&quot;), 3)&#13;&#10;&#13;&#10;&#9;-- Bit 0~1 - Key Priority [0~2 = Last, Low, High]&#13;&#10;&#9;dataBuffer[sb + 1] = packBitsToByte(dataBuffer[sb + 1], getModValue(&quot;cbTimbrePriority&quot;), 0, 1)&#13;&#10;&#13;&#10;&#9;-- Byte 2 - Unison Detune [0~99=0~99 cent (use Unison Mode)]&#13;&#10;&#9;dataBuffer[sb + 2] = getModValue(&quot;knobTimbreDetune&quot;)&#13;&#10;&#13;&#10;&#9;-- PITCH&#13;&#10;&#13;&#10;&#9;-- Byte 3 - Tune [64+/-50 = 0+/-50 cent]&#13;&#10;&#9;dataBuffer[sb + 3] = getModValue(&quot;knobTimbreTune&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 4 - Bend Range [64+/-12 = 0+/-12 note]&#13;&#10;&#9;dataBuffer[sb + 4] = getModValue(&quot;knobTimbreBendRange&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 5 - Transpose [64+/-24 = 0+/-24 note]&#13;&#10;&#9;dataBuffer[sb + 5] = getModValue(&quot;knobTimbreTranspose&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 6 - Vibrato Int [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 6] = getModValue(&quot;knobTimbreVibrato&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- OSC1&#13;&#10;&#13;&#10;&#9;-- Byte 7 - Wave [0~7 = Saw~Audio In]&#13;&#10;&#9;-- Stored directly in buffer, not in modulator, so no reason to sync it&#13;&#10;&#13;&#10;&#9;-- Byte 8 - Waveform CTRL1 [0~127]&#13;&#10;&#9;dataBuffer[sb + 8] = getModValue(&quot;knobOsc1Control1&quot;)&#13;&#10;&#13;&#10;&#9;if dataBuffer[sb + 7] ~= 5 then -- DWGS not selected&#13;&#10;&#13;&#10;&#9;&#9;-- Byte 9 - Waveform CTRL2 [0~127]&#13;&#10;&#9;&#9;dataBuffer[sb + 9] = getModValue(&quot;knobOsc1Control2&quot;)&#13;&#10;&#9;else&#13;&#10; &#13;&#10;&#9;&#9;-- Byte 10 - DWGS Wave [0~63 = DWGS No. 1~64 (when OSC1 Wave is &quot;DWGS&quot;)]&#13;&#10;&#9;&#9;dataBuffer[sb + 10] = getModValue(&quot;knobOsc1Control2&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Byte 11 - (dummy byte)&#13;&#10;&#13;&#10;&#9;-- OSC2&#13;&#10;&#13;&#10;&#9;-- Byte 12 - packed byte&#13;&#10;  &#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Mod Select [0~3 = Off, Ring, Sync, RingSync]&#13;&#10;&#9;-- Stored directly in buffer&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~2 = Saw, Squ, Tri]&#13;&#10;&#9;-- Stored directly in buffer&#13;&#10;&#13;&#10;&#9;-- Byte 13 - Semitone [64+/-24 = 0+/-24 note]&#13;&#10;&#9;dataBuffer[sb + 13] = getModValue(&quot;knobOsc2Semitone&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 14 - Tune [64+/-63=0+/-63]&#13;&#10;&#9;dataBuffer[sb + 14] = getModValue(&quot;knobOsc2Tune&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- PITCH (2)&#13;&#10;&#13;&#10;&#9;-- Byte 15 - packed byte&#13;&#10;  &#9;-- Bit B7 - not use&#13;&#10;&#9;-- Bit B0~6 - Portamento Time [0~127]&#13;&#10;&#9;dataBuffer[sb + 15] = packBitsToByte(dataBuffer[sb + 15], getModValue(&quot;knobTimbrePorta&quot;), 0, 6)&#13;&#10;&#13;&#10;&#9;-- MIXER&#13;&#10;&#13;&#10;&#9;-- Byte 16 - OSC1 Level [0~127]&#13;&#10;&#9;dataBuffer[sb + 16] = getModValue(&quot;knobMixerOsc1&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 17 - OSC2 Level [0~127]&#13;&#10;&#9;dataBuffer[sb + 17] = getModValue(&quot;knobMixerOsc2&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 18 - Noise [0~127]&#13;&#10;&#9;dataBuffer[sb + 18] = getModValue(&quot;knobMixerNoise&quot;)&#13;&#10;&#13;&#10;&#9;-- FILTER&#13;&#10;&#13;&#10;&#9;-- Byte 19 - Filter Type [0~3 = 24LPF, 12LPF, 12BPF, 12HPF]&#13;&#10;&#9;-- Stored directly in buffer&#13;&#10;&#13;&#10;&#9;-- Byte 20 - Filter Cutoff [0~127]&#13;&#10;&#9;dataBuffer[sb + 20] = getModValue(&quot;knobFilterCutoff&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 21 - Filter Resonance [0~127]&#13;&#10;&#9;dataBuffer[sb + 21] = getModValue(&quot;knobFilterResonance&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 22 - Filter EG1 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 22] = getModValue(&quot;knobFilterEG1Int&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 23 - Filter Velocity Sense [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 23] = getModValue(&quot;knobFilterVeloSens&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 24 - Filter Keyboard Track [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 24] = getModValue(&quot;knobFilterKbdTrk&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- AMP&#13;&#10;&#13;&#10;&#9;-- Byte 25 - Amp Level [0~127]&#13;&#10;&#9;dataBuffer[sb + 25] = getModValue(&quot;knobAmpLevel&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 26 - Amp Panpot [0~64~127 = L64~CNT~R63]&#13;&#10;&#9;dataBuffer[sb + 26] = getModValue(&quot;knobAmpPan&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 27 - packed byte&#13;&#10;  &#9;-- Bit 7 - not use&#13;&#10;&#9;-- Bit 6 - Amp SW [0, 1 = EG2, Gate]&#13;&#10;&#9;dataBuffer[sb + 27] = packBitsToByte(dataBuffer[sb + 27], getModValue(&quot;btnAmpEG2Gate&quot;), 6)&#13;&#10;&#13;&#10;&#9;-- Bit 1~5 - not use&#13;&#10;&#9;-- Bit 0   | Distortion [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 27] = packBitsToByte(dataBuffer[sb + 27], getModValue(&quot;btnAmpDistortion&quot;), 0)&#13;&#10;&#13;&#10;&#9;-- Byte 28 - Velocity Sense [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 28] = getModValue(&quot;knobAmpVeloSens&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 29 - Keyboard Track [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 29] = getModValue(&quot;knobAmpKeyTrack&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- EG1&#13;&#10;&#13;&#10;&#9;-- Byte 30 - Attack [0~127]&#13;&#10;&#9;dataBuffer[sb + 30] = getModValue(&quot;knobEG1Attack&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 31 - Decay [0~127]&#13;&#10;&#9;dataBuffer[sb + 31] = getModValue(&quot;knobEG1Decay&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 32 - Sustain [0~127]&#13;&#10;&#9;dataBuffer[sb + 32] = getModValue(&quot;knobEG1Sustain&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 33 - Release [0~127]&#13;&#10;&#9;dataBuffer[sb + 33] = getModValue(&quot;knobEG1Release&quot;)&#13;&#10;&#13;&#10;&#9;-- EG2&#13;&#10;&#13;&#10;&#9;-- Byte 34 - Attack [0~127]&#13;&#10;&#9;dataBuffer[sb + 34] = getModValue(&quot;knobEG2Attack&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 35 - Decay [0~127]&#13;&#10;&#9;dataBuffer[sb + 35] = getModValue(&quot;knobEG2Decay&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 36 - Sustain [0~127]&#13;&#10;&#9;dataBuffer[sb + 36] = getModValue(&quot;knobEG2Sustain&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 37 - Release [0~127]&#13;&#10;&#9;dataBuffer[sb + 37] = getModValue(&quot;knobEG2Release&quot;)&#13;&#10;&#13;&#10;&#9;-- LFO1&#13;&#10;&#13;&#10;&#9;-- Byte 38 - packed byte&#13;&#10;&#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Key Sync [0~2 = OFF, Timbre, Voice]&#13;&#10;&#9;dataBuffer[sb + 38] = packBitsToByte(dataBuffer[sb + 38], getModValue(&quot;cbLFO1KeySync&quot;), 4, 5)&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~3 = Saw, Squ, Tri, S/H]&#13;&#10;&#9;-- Stored directly in buffer&#13;&#10;&#13;&#10;&#9;-- Byte 39 - LFO1 Frequency [0~127]&#13;&#10;&#9;dataBuffer[sb + 39] = getModValue(&quot;knobLFO1Frequency&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 40 - packed byte&#13;&#10;  &#9;-- Bit 7 - LFO1 Tempo Sync [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 40] = packBitsToByte(dataBuffer[sb + 40], getModValue(&quot;btnLFO1TempoSync&quot;), 7)&#13;&#10;&#13;&#10;&#9;-- Bit 5,6 - not use&#13;&#10;&#9;-- Bit 0~4 - LFO1 Sync Note [0~14 = 1/1~1/32]&#13;&#10;&#9;dataBuffer[sb + 40] = packBitsToByte(dataBuffer[sb + 40], getModValue(&quot;cbLFO1SyncNote&quot;), 0, 4)&#13;&#10;&#13;&#10;&#9;-- LFO2&#13;&#10;&#13;&#10;&#9;-- Byte 41 - packed byte&#13;&#10;  &#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Key Sync [0~2 = OFF, Timbre, Voice]&#13;&#10;&#9;dataBuffer[sb + 41] = packBitsToByte(dataBuffer[sb + 41], getModValue(&quot;cbLFO2KeySync&quot;), 4, 5)&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~3 = Saw, Squ(+), Sin, S/H]&#13;&#10;&#9;-- Stored directly in buffer&#13;&#10;&#13;&#10;&#9;-- Byte 42 - LFO2 Frequency [0~127]&#13;&#10;&#9;dataBuffer[sb + 42] = getModValue(&quot;knobLFO2Frequency&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 43 - packed byte&#13;&#10;  &#9;-- Bit 7 - LFO2 Tempo Sync [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 43] = packBitsToByte(dataBuffer[sb + 43], getModValue(&quot;btnLFO2TempoSync&quot;), 7)&#13;&#10;&#13;&#10;&#9;-- Bit 5,6 - not use&#13;&#10;&#9;-- Bit 0~4 - LFO2 Sync Note [0~14 = 1/1~1/32]&#13;&#10;&#9;dataBuffer[sb + 43] = packBitsToByte(dataBuffer[sb + 43], getModValue(&quot;cbLFO2SyncNote&quot;), 0, 4)&#13;&#10;&#13;&#10;&#9;-- PATCH&#13;&#10;&#13;&#10;&#9;-- Byte 44 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - Patch1 Destination [0~7 = PITCH~LFO2FREQ]&#13;&#10;&#9;dataBuffer[sb + 44] = packBitsToByte(dataBuffer[sb + 44], getModValue(&quot;cbPatchDestination1&quot;), 4, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Patch1 Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;dataBuffer[sb + 44] = packBitsToByte(dataBuffer[sb + 44], getModValue(&quot;cbPatchSource1&quot;), 0, 3)&#13;&#10;&#13;&#10;&#9;-- Byte 45 - Patch1 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 45] = getModValue(&quot;knobPatch1Amount&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 46 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - Patch2 Destination [0~7 = PITCH~LFO2FREQ]&#13;&#10;&#9;dataBuffer[sb + 46] = packBitsToByte(dataBuffer[sb + 46], getModValue(&quot;cbPatchDestination2&quot;), 4, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Patch2 Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;dataBuffer[sb + 46] = packBitsToByte(dataBuffer[sb + 46], getModValue(&quot;cbPatchSource2&quot;), 0, 3)&#13;&#10;&#13;&#10;&#9;-- Byte 47 - Patch2 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 47] = getModValue(&quot;knobPatch2Amount&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 48 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - Patch3 Destination [0~7=PITCH~LFO2FREQ]&#13;&#10;&#9;dataBuffer[sb + 48] = packBitsToByte(dataBuffer[sb + 48], getModValue(&quot;cbPatchDestination3&quot;), 4, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Patch3 Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;dataBuffer[sb + 48] = packBitsToByte(dataBuffer[sb + 48], getModValue(&quot;cbPatchSource3&quot;), 0, 3)&#13;&#10;&#13;&#10;&#9;-- Byte 49 - Patch3 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 49] = getModValue(&quot;knobPatch3Amount&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 50 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - Patch4 Destination [0~7 = PITCH~LFO2FREQ]&#13;&#10;&#9;dataBuffer[sb + 50] = packBitsToByte(dataBuffer[sb + 50], getModValue(&quot;cbPatchDestination4&quot;), 4, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 0~3 - Patch4 Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;dataBuffer[sb + 50] = packBitsToByte(dataBuffer[sb + 50], getModValue(&quot;cbPatchSource4&quot;), 0, 3)&#13;&#10;&#13;&#10;&#9;-- Byte 51 - Patch4 Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;dataBuffer[sb + 51] = getModValue(&quot;knobPatch4Amount&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- SEQ&#13;&#10;&#13;&#10;&#9;-- Byte 52 - packed byte&#13;&#10; &#9;-- Bit 7 - SEQ On/Off [0, 1 = Off, On]&#13;&#10;&#9;dataBuffer[sb + 52] = packBitsToByte(dataBuffer[sb + 52], getModValue(&quot;btnSeqOnOff&quot;), 7)&#13;&#10;&#13;&#10;&#9;-- Bit 6 - SEQ Run Mode [0, 1 = 1Shot, Loop (only Loop when KeySync is &quot;OFF&quot;.)]&#13;&#10;&#9;dataBuffer[sb + 52] = packBitsToByte(dataBuffer[sb + 52], getModValue(&quot;cbSeqRunMode&quot;), 6)&#13;&#10;&#13;&#10;&#9;-- Bit 5 - not use&#13;&#10;&#9;-- Bit 0~4 - SEQ Resolution [0~15 = 1/48~1/1]&#13;&#10;&#9;dataBuffer[sb + 52] = packBitsToByte(dataBuffer[sb + 52], getModValue(&quot;cbSeqResolution&quot;), 0, 4)&#13;&#10;&#13;&#10;&#9;-- Byte 53 - packed byte&#13;&#10;  &#9;-- Bit 4~7 - SEQ Last Step [0~15 = 1~16]&#13;&#10;&#9;dataBuffer[sb + 53] = packBitsToByte(dataBuffer[sb + 53], getModValue(&quot;knobSeqLastStep&quot;) - 1, 4, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - SEQ Type [0~3 = Fowrd,Reverse,Alt1,Alt2]&#13;&#10;&#9;dataBuffer[sb + 53] = packBitsToByte(dataBuffer[sb + 53], getModValue(&quot;cbSeqType&quot;), 2, 3)&#13;&#10;&#13;&#10;&#9;-- Bit 0,1 - SEQ Key Sync [0~2 = OFF, Timbre,Voice]&#13;&#10;&#9;dataBuffer[sb + 53] = packBitsToByte(dataBuffer[sb + 53], getModValue(&quot;cbSeqKeySync&quot;), 0, 1)&#13;&#10;&#13;&#10;&#9;-- SEQ1 parameter&#13;&#10;&#9;-- Byte 54 - Knob 1 [0~30 = None~Patch4Int]&#13;&#10;&#9;dataBuffer[sb + 54] = getModValue(&quot;cbSeqKnob1&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 55 - packed byte&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - SEQ1 Motion Type [0, 1 = Smooth, Step]&#13;&#10;&#9;dataBuffer[sb + 55] = packBitsToByte(dataBuffer[sb + 55], getModValue(&quot;cbSeqMotion1&quot;), 0)&#13;&#10;&#13;&#10;&#9;-- Byte 56~71 - SEQ1 Step Value [64+/-63 = 0+/-63]&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;dataBuffer[sb + 55 + i] = getModValue(string.format(&quot;knobSeq1Step%d&quot;, i)) + 64&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- SEQ2 parameter&#13;&#10;&#9;-- Byte 72 - Knob 2 [0~30 = None~Patch4Int]&#13;&#10;&#9;dataBuffer[sb + 72] = getModValue(&quot;cbSeqKnob2&quot;)&#13;&#10;&#9;&#13;&#10;&#9;-- Byte 73 - packed byte&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - SEQ2 Motion Type [0, 1 = Smooth, Step]&#13;&#10;&#9;dataBuffer[sb + 73] = packBitsToByte(dataBuffer[sb + 73], getModValue(&quot;cbSeqMotion2&quot;), 0)&#13;&#10;&#13;&#10;&#9;-- Byte 74~89 - SEQ2 Step Value [64+/-63 = 0+/-63]&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;dataBuffer[sb + 73 + i] = getModValue(string.format(&quot;knobSeq2Step%d&quot;, i)) + 64&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- SEQ3 parameter&#13;&#10;&#9;-- Byte 90 - Knob 3 [0~30 = None~Patch4Int]&#13;&#10;&#9;dataBuffer[sb + 90] = getModValue(&quot;cbSeqKnob3&quot;)&#13;&#10;&#9;&#13;&#10;&#9;-- Byte 91 - packed byte&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - SEQ3 Motion Type [0, 1 = Smooth, Step]&#13;&#10;&#9;dataBuffer[sb + 91] = packBitsToByte(dataBuffer[sb + 73], getModValue(&quot;cbSeqMotion3&quot;), 0)&#13;&#10;&#13;&#10;&#9;-- Byte 92~107 - SEQ3 Step Value [64+/-63 = 0+/-63]&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;dataBuffer[sb + 91 + i] = getModValue(string.format(&quot;knobSeq3Step%d&quot;, i)) + 64&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Synth parameter (Mode = Split, Dual) - will be applied same actions, but&#13;&#10;&#9;-- start byte will be shifted&#13;&#10;&#9;-- Bytes 146~253 - TIMBRE2 DATA&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="26fd8dd6a5d64c158a30011ba6ade384"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="applyVocoderData" luaMethodCode="function applyVocoderData(dataArray)&#10;&#13;&#10;&#9;mutePanelOut(true)&#13;&#10;&#13;&#10;&#9;-- Applying vocoder data to controllers&#13;&#10;&#9;local i&#13;&#10;&#9;local programData = copyTable(dataArray)&#13;&#10;&#13;&#10;&#9;-- Some cosmetics&#13;&#10;&#9;sharedValues.allowChangeSeq = false&#13;&#10;&#13;&#10;&#9;-- Vocoder buffer have no extra information&#13;&#10;&#9;local sb = 1&#13;&#10;&#13;&#10;&#9;-- Byte 0 - MIDI ch [-1, 0~15 = GLB, 1~16ch]&#13;&#10;&#9;setModValue(&quot;cbTimbreMidiCh&quot;, bit.band(programData[sb] + 1, 0x7F))&#13;&#10;&#13;&#10;&#9;-- Byte 1  &#13;&#10;&#9;-- Bit 6,7 - Assign Mode [0, 1, 2 = Mono, Poly, Unison]&#13;&#10;&#9;setModValue(&quot;cbTimbreAssign&quot;, extractPackByte(programData[sb + 1], 6, 7))&#13;&#10;&#13;&#10;&#9;-- Bit 5 - EG2 reset [0,1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnEG2Reset&quot;, extractPackByte(programData[sb + 1], 5))&#13;&#10;&#13;&#10;&#9;-- Bit 4 - EG1 reset [0,1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnEG1Reset&quot;, extractPackByte(programData[sb + 1], 4))&#13;&#10;&#13;&#10;&#9;-- Bit 3 - Trigger Mode [0,1 = Single, Multi] (use Mono/Unison Mode)&#13;&#10;&#9;setModValue(&quot;cbTimbreTrigger&quot;, extractPackByte(programData[sb + 1], 3))&#13;&#10;&#13;&#10;&#9;-- Bit 0~1 - Key Priority [0~2 = Last, Low, High]&#13;&#10;&#9;setModValue(&quot;cbTimbrePriority&quot;, extractPackByte(programData[sb + 1], 0, 1))&#13;&#10;&#13;&#10;&#9;-- Byte 2 - Unison Detune [0~99 = 0~99 cent] (use Unison Mode)&#13;&#10;&#9;setModValue(&quot;knobTimbreDetune&quot;, programData[sb + 2])&#13;&#10;&#13;&#10;&#9;-- PITCH&#13;&#10;&#13;&#10;&#9;-- Byte 3 - Tune [64+/-50 = 0+/-50 cent]&#13;&#10;&#9;setModValue(&quot;knobTimbreTune&quot;, programData[sb + 3] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 4 - Bend Range [64+/-12 = 0+/-12 note]&#13;&#10;&#9;setModValue(&quot;knobTimbreBendRange&quot;, programData[sb + 4] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 5 - Transpose [64+/-24 = 0+/-24 note]&#13;&#10;&#9;setModValue(&quot;knobTimbreTranspose&quot;, programData[sb + 5] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 6 - Vibrato Int [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobTimbreVibrato&quot;, programData[sb + 6] - 64)&#13;&#10;&#13;&#10;&#9;-- OSC&#13;&#10;&#13;&#10;&#9;-- Byte 7 - Wave [0~7 = Saw~Audio In]&#9;&#13;&#10;&#9;setOsc1WaveformByValue(programData[sb + 7], true)&#13;&#10;&#13;&#10;&#9;-- Byte 8 - Waveform CTRL1 [0~127]&#13;&#10;&#9;setModValue(&quot;knobOsc1Control1&quot;, programData[sb + 8])&#13;&#10;&#13;&#10;&#9;if programData[sb + 7] ~= 5 then -- DWGS not selected&#13;&#10;&#13;&#10;&#9;&#9;-- Byte 9 - Waveform CTRL2 [0~127]&#13;&#10;&#9;&#9;setModValue(&quot;knobOsc1Control2&quot;, programData[sb + 9])&#13;&#10;&#9;else&#13;&#10; &#13;&#10;&#9;&#9;-- Byte 10 - DWGS Wave [0~63 = DWGS No. 1~64 (when OSC1 Wave is &quot;DWGS&quot;)]&#13;&#10;&#9;&#9;setModValue(&quot;knobOsc1Control2&quot;, programData[sb + 10])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Byte 11 - (dummy byte)&#13;&#10;&#13;&#10;&#9;-- AUDIO IN2&#13;&#10;&#13;&#10;&#9;-- Byte 12&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - HPF Gate [0, 1 = Dis, Ena]&#13;&#10;&#9;setModValue(&quot;btnAmpEG2Gate&quot;, extractPackByte(programData[sb + 12], 0))&#13;&#10;&#13;&#10;&#9;-- Byte 13 - (dummy byte)&#13;&#10;&#13;&#10;&#9;-- PITCH (2)&#13;&#10;&#13;&#10;&#9;-- Byte 14&#13;&#10;&#9;-- Bit 7 - not use [(0)&#13;&#10;&#9;-- Bit 0~6 - Portamento Time [0~127]&#13;&#10;&#9;setModValue(&quot;knobTimbrePorta&quot;, extractPackByte(programData[sb + 14], 0, 6))&#13;&#10;&#13;&#10;&#9;-- MIXER&#13;&#10;&#13;&#10;&#9;-- Byte 15 - OSC1 Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobMixerOsc1&quot;, programData[sb + 15])&#13;&#10;&#13;&#10;&#9;-- Byte 16 - Ext1 Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobMixerOsc2&quot;, programData[sb + 16])&#13;&#10;&#13;&#10;&#9;-- Byte 17 - Noise Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobMixerNoise&quot;, programData[sb + 17])&#13;&#10;&#13;&#10;&#9;-- AUDIO IN2 (2)&#13;&#10;&#13;&#10;&#9;-- Byte 18 - HPF Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobOsc2Semitone&quot;, programData[sb + 18])&#13;&#10;&#13;&#10;&#9;-- Byte 19 - Gate Sense [0~127]&#13;&#10;&#9;setModValue(&quot;knobFilterVeloSens&quot;, programData[sb + 19])&#13;&#10;&#13;&#10;&#9;-- Byte 20 - Threshold [0~127]&#13;&#10;&#9;setModValue(&quot;knobOsc2Tune&quot;, programData[sb + 20])&#13;&#10;&#13;&#10;&#9;-- FILTER&#13;&#10;&#13;&#10;&#9;-- Byte 21 - Shift [0~4 = 0, +1, +2, -1, -2]&#13;&#10;&#9;setFilterTypeByValue(programData[sb + 21], true)&#13;&#10;&#13;&#10;&#9;-- Byte 22 - Cutoff [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobFilterCutoff&quot;, programData[sb + 22] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 23 - Resonance [0~127]&#13;&#10;&#9;setModValue(&quot;knobFilterResonance&quot;, programData[sb + 23])&#13;&#10;&#13;&#10;&#9;-- Byte 24 - Mod Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;setModValue(&quot;cbPatchSource1&quot;, programData[sb + 24])&#13;&#10;&#13;&#10;&#9;-- Byte 25 - Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobFilterEG1Int&quot;, programData[sb + 25] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 26 - E.F.Sense [0~127]&#13;&#10;&#9;setModValue(&quot;knobFilterKbdTrk&quot;, programData[sb + 26])&#13;&#10;&#13;&#10;&#9;-- AMP&#13;&#10;&#13;&#10;&#9;-- Byte 27 - Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobAmpLevel&quot;, programData[sb + 27])&#13;&#10;&#13;&#10;&#9;-- Byte 28 - Direct Level [0~127]&#13;&#10;&#9;setModValue(&quot;knobAmpPan&quot;, programData[sb + 28])&#13;&#10;&#13;&#10;&#9;-- Byte 29&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - Distortion On/Off [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnAmpDistortion&quot;, extractPackByte(programData[sb + 29], 0))&#13;&#10;&#13;&#10;&#9;-- Byte 30 - Vel.Sense [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobAmpVeloSens&quot;, programData[sb + 30] - 64)&#13;&#10;&#13;&#10;&#9;-- Byte 31 - KeyTrack [64+/-63 = 0+/-63]&#13;&#10;&#9;setModValue(&quot;knobAmpKeyTrack&quot;, programData[sb + 31] - 64)&#13;&#10;&#13;&#10;&#9;-- EG1&#13;&#10;&#13;&#10;&#9;-- Byte 32 - Attack [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG1Attack&quot;, programData[sb + 32])&#13;&#10;&#13;&#10;&#9;-- Byte 33 - Decay [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG1Decay&quot;, programData[sb + 33])&#13;&#10;&#13;&#10;&#9;-- Byte 34 - Sustain [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG1Sustain&quot;, programData[sb + 34])&#13;&#10;&#13;&#10;&#9;-- Byte 35 - Release [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG1Release&quot;, programData[sb + 35])&#13;&#10;&#13;&#10;&#9;-- EG2&#13;&#10;&#13;&#10;&#9;-- Byte 36 - Attack [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG2Attack&quot;, programData[sb + 36])&#13;&#10;&#13;&#10;&#9;-- Byte 37 - Decay [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG2Decay&quot;, programData[sb + 37])&#13;&#10;&#13;&#10;&#9;-- Byte 38 - Sustain [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG2Sustain&quot;, programData[sb + 38])&#13;&#10;&#13;&#10;&#9;-- Byte 39 - Release [0~127]&#13;&#10;&#9;setModValue(&quot;knobEG2Release&quot;, programData[sb + 39])&#13;&#10;&#13;&#10;&#9;-- LFO1&#13;&#10;&#13;&#10;&#9;-- Byte 40&#13;&#10;&#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Key Sync [0~2 = OFF, Timbre, Voice]&#13;&#10;&#9;setModValue(&quot;cbLFO1KeySync&quot;, extractPackByte(programData[sb + 40], 4, 5))&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~3 = Saw, Squ, Tri, S/H]&#13;&#10;&#9;setLFO1TypeByValue(extractPackByte(programData[sb + 40], 0, 1), true)&#13;&#10;&#13;&#10;&#9;-- Byte 41 - Frequency [0~127]&#13;&#10;&#9;setModValue(&quot;knobLFO1Frequency&quot;, programData[sb + 41])&#13;&#10;&#13;&#10;&#9;-- Byte 42&#13;&#10;&#9;-- Bit 7 - Tempo Sync [0,1 = Off,On]&#13;&#10;&#9;setModValue(&quot;btnLFO1TempoSync&quot;, extractPackByte(programData[sb + 42], 7))&#13;&#10;&#13;&#10;&#9;-- Bit 5,6 - not use&#13;&#10;&#9;-- Bit 0~4 - Sync Note [0~14 = 1/1~1/32]&#13;&#10;&#9;setModValue(&quot;cbLFO1SyncNote&quot;, extractPackByte(programData[sb + 42], 0, 4))&#13;&#10;&#13;&#10;&#9;-- LFO2&#13;&#10;&#13;&#10;&#9;-- Byte 43&#13;&#10;&#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Key Sync [0~2 = OFF, Timbre, Voice]&#13;&#10;&#9;setModValue(&quot;cbLFO2KeySync&quot;, extractPackByte(programData[sb + 43], 4, 5))&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~3 = Saw, Squ(+), Sin, S/H]&#13;&#10;&#9;setLFO2TypeByValue(extractPackByte(programData[sb + 43], 0, 1), true)&#13;&#10;&#13;&#10;&#9;-- Byte 44 - Frequency [0~127]&#13;&#10;&#9;setModValue(&quot;knobLFO2Frequency&quot;, programData[sb + 44])&#13;&#10;&#13;&#10;&#9;-- Byte 45&#13;&#10;&#9;-- Bit 7 - Tempo Sync [0, 1 = Off, On]&#13;&#10;&#9;setModValue(&quot;btnLFO2TempoSync&quot;, extractPackByte(programData[sb + 45], 7))&#13;&#10;&#13;&#10;&#9;-- Bit 5,6 - not use&#13;&#10;&#9;-- Bit 0~4 - Sync Note [0~14 = 1/1~1/32]&#13;&#10;&#9;setModValue(&quot;cbLFO2SyncNote&quot;, extractPackByte(programData[sb + 45], 0, 4))&#13;&#10;&#13;&#10;&#9;-- CH LEVEL [0]~[15] = CH[1]~[16]&#13;&#10;&#13;&#10;&#9;-- Byte 46~61 - Level [0~15] - 0~127&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;setModValue(string.format(&quot;knobSeq1Step%d&quot;, i), programData[sb + 45 + i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- CH PAN  [0]~[15] = CH[1]~[16]&#13;&#10;&#13;&#10;&#9;-- Byte 62~77 - Pan  [0~15] - 1~64~127 = L63~CNT~R63&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;setModValue(string.format(&quot;knobSeq2Step%d&quot;, i), programData[sb + 61 + i] - 64)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Select SEQ1 to show&#13;&#10;&#9;selectSequenceByValue(0)&#13;&#10;&#13;&#10;&#9;mutePanelOut(false)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="cc2f3d67d1864f99be9df4afa9b57d6b"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="syncVocoderWithBuffer" luaMethodCode="function syncVocoderWithBuffer()&#13;&#10;&#13;&#10;&#9;-- Applying vocoder data with buffer&#13;&#10;&#9;local sb&#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;sb = 1&#13;&#10;&#13;&#10;&#9;-- Byte 0 - MIDI ch [-1, 0~15 = GLB, 1~16ch]&#13;&#10;&#9;vocoderBuffer[sb] = bit.band(getModValue(&quot;cbTimbreMidiCh&quot;) - 1, 0xFF)&#13;&#10;&#13;&#10;&#9;-- Byte 1  &#13;&#10;&#9;-- Bit 6,7 - Assign Mode [0, 1, 2 = Mono, Poly, Unison]&#13;&#10;&#9;vocoderBuffer[sb + 1] = packBitsToByte(vocoderBuffer[sb + 1], tonumber(getModValue(&quot;cbTimbreAssign&quot;)), 6, 7)&#13;&#10;&#13;&#10;&#9;-- Bit 5 - EG2 reset [0, 1 = Off, On]&#13;&#10;&#9;vocoderBuffer[sb + 1] = packBitsToByte(vocoderBuffer[sb + 1], getModValue(&quot;btnEG2Reset&quot;), 5)&#13;&#10;&#13;&#10;&#9;-- Bit 4 - EG1 reset [0, 1 = Off, On]&#13;&#10;&#9;vocoderBuffer[sb + 1] = packBitsToByte(vocoderBuffer[sb + 1], getModValue(&quot;btnEG1Reset&quot;), 4)&#13;&#10;&#13;&#10;&#9;-- Bit 3 - Trigger Mode [0,1=Single,Multi] (use Mono/Unison Mode)&#13;&#10;&#9;vocoderBuffer[sb + 1] = packBitsToByte(vocoderBuffer[sb + 1], getModValue(&quot;cbTimbreTrigger&quot;), 3)&#13;&#10;&#13;&#10;&#9;-- Bit 0~1 - Key Priority [0~2 = Last, Low, High]&#13;&#10;&#9;vocoderBuffer[sb + 1] = packBitsToByte(vocoderBuffer[sb + 1], getModValue(&quot;cbTimbrePriority&quot;), 0, 1)&#13;&#10;&#13;&#10;&#9;-- Byte 2 - Unison Detune [0~99 = 0~99 cent] (use Unison Mode)&#13;&#10;&#9;vocoderBuffer[sb + 2] = getModValue(&quot;knobTimbreDetune&quot;)&#13;&#10;&#13;&#10;&#9;-- PITCH&#13;&#10;&#13;&#10;&#9;-- Byte 3 - Tune [64+/-50 = 0+/-50[cent]&#13;&#10;&#9;vocoderBuffer[sb + 3] = getModValue(&quot;knobTimbreTune&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 4 - Bend Range [64+/-12 = 0+/-12[note]&#13;&#10;&#9;vocoderBuffer[sb + 4] = getModValue(&quot;knobTimbreBendRange&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 5 - Transpose [64+/-24 = 0+/-24[note]&#13;&#10;&#9;vocoderBuffer[sb + 5] = getModValue(&quot;knobTimbreTranspose&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 6 - Vibrato Int [64+/-63 = 0+/-63&#13;&#10;&#9;vocoderBuffer[sb + 6] = getModValue(&quot;knobTimbreVibrato&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- OSC&#13;&#10;&#13;&#10;&#9;-- Byte 7 - Wave [0~7 = Saw~Audio In]&#13;&#10;&#9;-- Stored directly in buffer, not in modulator, so no reason to sync it&#13;&#10;&#13;&#10;&#9;-- Byte 8 - Waveform CTRL1 [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 8] = getModValue(&quot;knobOsc1Control1&quot;)&#13;&#10;&#13;&#10;&#9;if vocoderBuffer[sb + 7] ~= 5 then -- DWGS not selected&#13;&#10;&#13;&#10;&#9;&#9;-- Byte 9 - Waveform CTRL2 [0~127]&#13;&#10;&#9;&#9;vocoderBuffer[sb + 9] = getModValue(&quot;knobOsc1Control2&quot;)&#13;&#10;&#9;else&#13;&#10; &#13;&#10;&#9;&#9;-- Byte 10 - DWGS Wave [0~63 = DWGS No. 1~64 (when OSC1 Wave is &quot;DWGS&quot;)]&#13;&#10;&#9;&#9;vocoderBuffer[sb + 10] = getModValue(&quot;knobOsc1Control2&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Byte 11 - (dummy byte)&#13;&#10;&#13;&#10;&#9;-- AUDIO IN2&#13;&#10;&#13;&#10;&#9;-- Byte 12&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - HPF Gate [0, 1 = Dis, Ena]&#13;&#10;&#9;vocoderBuffer[sb + 12] = packBitsToByte(vocoderBuffer[sb + 12], getModValue(&quot;btnAmpEG2Gate&quot;), 0, 1)&#13;&#10;&#13;&#10;&#9;-- Byte 13 - (dummy byte)&#13;&#10;&#13;&#10;&#9;-- PITCH (2)&#13;&#10;&#13;&#10;&#9;-- Byte 14&#13;&#10;&#9;-- Bit 7 - not use [(0)&#13;&#10;&#9;-- Bit 0~6 - Portamento Time [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 14] = packBitsToByte(vocoderBuffer[sb + 14], getModValue(&quot;knobTimbrePorta&quot;), 0, 6)&#13;&#10;&#13;&#10;&#9;-- MIXER&#13;&#10;&#13;&#10;&#9;-- Byte 15 - OSC1 Level [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 15] = getModValue(&quot;knobMixerOsc1&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 16 - Ext1 Level [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 16] = getModValue(&quot;knobMixerOsc2&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 17 - Noise Level [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 17] = getModValue(&quot;knobMixerNoise&quot;)&#13;&#10;&#13;&#10;&#9;-- AUDIO IN2 (2)&#13;&#10;&#13;&#10;&#9;-- Byte 18 - HPF Level [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 18] = getModValue(&quot;knobOsc2Semitone&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 19 - Gate Sense [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 19] = getModValue(&quot;knobFilterVeloSens&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 20 - Threshold [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 20] = getModValue(&quot;knobOsc2Tune&quot;)&#13;&#10;&#13;&#10;&#9;-- FILTER&#13;&#10;&#13;&#10;&#9;-- Byte 21 - Shift [0~4 = 0, +1, +2, -1, -2]&#13;&#10;&#9;-- Stored directly in buffer&#13;&#10;&#13;&#10;&#9;-- Byte 22 - Cutoff [64+/-63 = 0+/-63]&#13;&#10;&#9;vocoderBuffer[sb + 22] = getModValue(&quot;knobFilterCutoff&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 23 - Resonance [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 23] = getModValue(&quot;knobFilterResonance&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 24 - Mod Source [0~7 = EG1~MIDI2]&#13;&#10;&#9;vocoderBuffer[sb + 24] = getModValue(&quot;cbPatchSource1&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 25 - Intensity [64+/-63 = 0+/-63]&#13;&#10;&#9;vocoderBuffer[sb + 25] = getModValue(&quot;knobFilterEG1Int&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 26 - E.F.Sense [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 26] = getModValue(&quot;knobFilterKbdTrk&quot;)&#13;&#10;&#13;&#10;&#9;-- AMP&#13;&#10;&#13;&#10;&#9;-- Byte 27 - Level [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 27] = getModValue(&quot;knobAmpLevel&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 28 - Direct Level [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 28] = getModValue(&quot;knobAmpPan&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 29&#13;&#10;&#9;-- Bit 1~7 - not use&#13;&#10;&#9;-- Bit 0 - Distortion On/Off [0, 1 = Off, On]&#13;&#10;&#9;vocoderBuffer[sb + 29] = packBitsToByte(vocoderBuffer[sb + 29], getModValue(&quot;btnAmpDistortion&quot;), 0)&#13;&#10;&#13;&#10;&#9;-- Byte 30 - Vel.Sense [64+/-63 = 0+/-63]&#13;&#10;&#9;vocoderBuffer[sb + 30] = getModValue(&quot;knobAmpVeloSens&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- Byte 31 - KeyTrack [64+/-63 = 0+/-63]&#13;&#10;&#9;vocoderBuffer[sb + 31] = getModValue(&quot;knobAmpKeyTrack&quot;) + 64&#13;&#10;&#13;&#10;&#9;-- EG1&#13;&#10;&#13;&#10;&#9;-- Byte 32 - Attack [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 32] = getModValue(&quot;knobEG1Attack&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 33 - Decay [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 33] = getModValue(&quot;knobEG1Decay&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 34 - Sustain [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 34] = getModValue(&quot;knobEG1Sustain&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 35 - Release [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 35] = getModValue(&quot;knobEG1Release&quot;)&#13;&#10;&#13;&#10;&#9;-- EG2&#13;&#10;&#13;&#10;&#9;-- Byte 36 - Attack [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 36] = getModValue(&quot;knobEG2Attack&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 37 - Decay [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 37] = getModValue(&quot;knobEG2Decay&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 38 - Sustain [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 38] = getModValue(&quot;knobEG2Sustain&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 39 - Release [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 39] = getModValue(&quot;knobEG2Release&quot;)&#13;&#10;&#13;&#10;&#9;-- LFO1&#13;&#10;&#13;&#10;&#9;-- Byte 40&#13;&#10;&#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Key Sync [0~2 = OFF, Timbre, Voice]&#13;&#10;&#9;vocoderBuffer[sb + 40] = packBitsToByte(vocoderBuffer[sb + 40], getModValue(&quot;cbLFO1KeySync&quot;), 4, 5)&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~3 = Saw, Squ, Tri, S/H]&#13;&#10;&#9;-- Stored directly in buffer&#13;&#10;&#13;&#10;&#9;-- Byte 41 - Frequency [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 41] = getModValue(&quot;knobLFO1Frequency&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 42&#13;&#10;&#9;-- Bit 7 - Tempo Sync [0,1 = Off,On]&#13;&#10;&#9;vocoderBuffer[sb + 42] = packBitsToByte(vocoderBuffer[sb + 42], getModValue(&quot;btnLFO1TempoSync&quot;), 7)&#13;&#10;&#13;&#10;&#9;-- Bit 5,6 - not use&#13;&#10;&#9;-- Bit 0~4 - Sync Note [0~14 = 1/1~1/32]&#13;&#10;&#9;vocoderBuffer[sb + 42] = packBitsToByte(vocoderBuffer[sb + 42], getModValue(&quot;cbLFO1SyncNote&quot;), 0, 4)&#13;&#10;&#13;&#10;&#9;-- LFO2&#13;&#10;&#13;&#10;&#9;-- Byte 43&#13;&#10;&#9;-- Bit 6,7 - not use&#13;&#10;&#9;-- Bit 4,5 - Key Sync [0~2 = OFF, Timbre, Voice]&#13;&#10;&#9;vocoderBuffer[sb + 43] = packBitsToByte(vocoderBuffer[sb + 43], getModValue(&quot;cbLFO2KeySync&quot;), 4, 5)&#13;&#10;&#13;&#10;&#9;-- Bit 2,3 - not use&#13;&#10;&#9;-- Bit 0,1 - Wave [0~3 = Saw, Squ(+), Sin, S/H]&#13;&#10;&#9;-- Stored directly in buffer&#13;&#10;&#13;&#10;&#9;-- Byte 44 - Frequency [0~127]&#13;&#10;&#9;vocoderBuffer[sb + 44] = getModValue(&quot;knobLFO2Frequency&quot;)&#13;&#10;&#13;&#10;&#9;-- Byte 45&#13;&#10;&#9;-- Bit 7 - Tempo Sync [0, 1 = Off, On]&#13;&#10;&#9;vocoderBuffer[sb + 45] = packBitsToByte(vocoderBuffer[sb + 45], getModValue(&quot;btnLFO2TempoSync&quot;), 7)&#13;&#10;&#13;&#10;&#9;-- Bit 5,6 - not use&#13;&#10;&#9;-- Bit 0~4 - Sync Note [0~14 = 1/1~1/32]&#13;&#10;&#9;vocoderBuffer[sb + 45] = packBitsToByte(vocoderBuffer[sb + 45], getModValue(&quot;cbLFO2SyncNote&quot;), 0, 4)&#13;&#10;&#13;&#10;&#9;-- CH LEVEL [0]~[15] = CH[1]~[16]&#13;&#10;&#13;&#10;&#9;-- Byte 46~61 - Level [0~15] - 0~127&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;vocoderBuffer[sb + 45 + i] = getModValue(string.format(&quot;knobSeq1Step%d&quot;, i))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- CH PAN  [0]~[15] = CH[1]~[16]&#13;&#10;&#13;&#10;&#9;-- Byte 62~77 - Pan  [0~15] - 1~64~127 = L63~CNT~R63&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;vocoderBuffer[sb + 61 + i] = getModValue(string.format(&quot;knobSeq2Step%d&quot;, i)) + 64&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="7863f924524041f9a90b1765130e2ef6"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="prepareForExport" luaMethodCode="function prepareForExport()&#13;&#10;&#9;&#13;&#10;&#9;chosenPresetToBuffer(101, true)&#13;&#10;&#13;&#10;&#9;panelSettings.sendProgOnStartup&#9;= 0&#13;&#10;&#9;panelSettings.sendOnProgChange&#9;= 0&#13;&#10;&#9;panelSettings.getSetupOnStart&#9;= 1&#13;&#10;&#9;panelSettings.continuousPolling&#9;= 1&#13;&#10;&#9;panelSettings.autocheckLCDMode&#9;= 0&#13;&#10;&#9;panelSettings.disableWarnings&#9;= 0&#13;&#10;&#9;panelSettings.clockSource&#9;&#9;= 2&#13;&#10;&#9;panelSettings.localMode&#9;&#9;&#9;= 1&#13;&#10;&#13;&#10;&#9;setModValue(&quot;btnSendProgramOnStartup&quot;, panelSettings.sendProgOnStartup)&#13;&#10;&#9;setModValue(&quot;btnSendDataOnProgramChange&quot;, panelSettings.sendOnProgChange)&#13;&#10;&#9;setModValue(&quot;btnContinuousPolling&quot;, panelSettings.continuousPolling)&#13;&#10;&#9;setModValue(&quot;btnAutocheckLCDMode&quot;, panelSettings.autocheckLCDMode)&#13;&#10;&#9;setModValue(&quot;btnDisableWarnings&quot;, panelSettings.disableWarnings)&#13;&#10;&#9;setModValue(&quot;cbClockSource&quot;, panelSettings.clockSource)&#13;&#10;&#9;setModValue(&quot;btnSettingsLocalMode&quot;, panelSettings.localMode)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="ca73657e6cc44c2093645799bf7426bd"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="placeTimbreDataIntoBuffer" luaMethodCode="function placeTimbreDataIntoBuffer(programData, inputStartByte, destBuffer, bufferStartByte)&#13;&#10;&#13;&#10;&#9;local i, c = 0, 0&#13;&#10;&#13;&#10;&#9;for i = inputStartByte, inputStartByte + (TIMBRE_DATA_SIZE * 2) - 1 do&#13;&#10;&#13;&#10;&#9;&#9;-- Copy input data into dataBuffer&#13;&#10;&#9;&#9;if destBuffer == dbSynth then&#13;&#10;&#13;&#10;&#9;&#9;&#9;dataBuffer[bufferStartByte + c] = programData[i]&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;vocoderBuffer[bufferStartByte + c] = programData[i]&#13;&#10;&#9;&#9;end&#9;&#13;&#10;&#13;&#10;&#9;&#9;c = c + 1&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="19570bfb0d294963961fcca9716b40c1"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setVoiceModeByValue" luaMethodCode="function setVoiceModeByValue(voiceMode)&#13;&#10;&#13;&#10;&#9;local modList = {&#13;&#10;&#9;&#9;&quot;cbTimbreVoice&quot;, &#13;&#10;&#9;&#9;&quot;knobTimbreSplitPoint&quot;,&#13;&#10;&#9;&#9;&quot;btnTimbreTwo&quot;,&#13;&#10;&#9;&#9;&quot;lblTimbreSplitPointValue&quot;,&#13;&#10;&#9;&#9;&quot;cbArpTarget&quot;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;-- Force updating the OSC 1 Control 2&#13;&#10;&#9;sharedValues.resetDWGS = true&#13;&#10;&#13;&#10;&#9;if voiceMode == vmVocoder then&#13;&#10;&#13;&#10;&#9;&#9;enableControls(modList, false)&#13;&#10;&#9;&#9;setVocoderMode(true)&#13;&#10;&#13;&#10;&#9;&#9;selectTimbreByValue(0, true, true)&#13;&#10;&#9;&#9;applyVocoderData(vocoderBuffer)&#13;&#10;&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;enableControls(modList, true)&#13;&#10;&#9;&#9;setVocoderMode(false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if voiceMode == vmSingle then&#13;&#10;&#13;&#10;&#9;&#9;selectTimbreByValue(0, true, false)&#13;&#10;&#9;&#9;enableControls(modList, false)&#13;&#10;&#13;&#10;&#9;&#9;-- Vocoder or Init =&gt; Single&#13;&#10;&#9;&#9;if (sharedValues.voiceMode ~= vmSplit) and (sharedValues.voiceMode ~= vmDual) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;applyTimbreData(0, dataBuffer)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;elseif voiceMode == vmSplit then&#13;&#10;&#13;&#10;&#9;&#9;enableControls(modList, true)&#13;&#10;&#13;&#10;&#9;&#9;-- Vocoder or Init =&gt; Split&#13;&#10;&#9;&#9;if (sharedValues.voiceMode ~= vmSingle) and (sharedValues.voiceMode ~= vmDual) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;applyTimbreData(0, dataBuffer)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;elseif voiceMode == vmDual then&#13;&#10;&#13;&#10;&#9;&#9;enableControls(modList, true)&#13;&#10;&#13;&#10;&#9;&#9;-- Vocoder or Init =&gt; Split&#13;&#10;&#9;&#9;if (sharedValues.voiceMode ~= vmSingle) and (sharedValues.voiceMode ~= vmSplit) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;applyTimbreData(0, dataBuffer)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;sharedValues.voiceMode = voiceMode&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="47bf57e33d12449faffacc29751ea43b"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setVocoderMode" luaMethodCode="function setVocoderMode(vocoderEnabled)&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local knobList = {&#13;&#10;&#9;&#9;&quot;knobOsc2Semitone&quot;,&#13;&#10;&#9;&#9;&quot;knobOsc2Tune&quot;, &#13;&#10;&#9;&#9;&quot;knobFilterKbdTrk&quot;, &#13;&#10;&#9;&#9;&quot;knobAmpPan&quot;, &#13;&#10;&#9;&#9;&quot;knobFilterVeloSens&quot;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;local modLIst = {&#13;&#10;&#9;&#9;&quot;btnOsc2OscModCycle&quot;,&#13;&#10;&#9;&#9;&quot;btnOsc2WaveCycle&quot;,&#13;&#10;&#9;&#9;&quot;imgOsc2Lamp0&quot;,&#13;&#10;&#9;&#9;&quot;imgOsc2Lamp1&quot;,&#13;&#10;&#9;&#9;&quot;imgOsc2Lamp2&quot;,&#13;&#10;&#9;&#9;&quot;imgOsc2ModLamp0&quot;,&#13;&#10;&#9;&#9;&quot;imgOsc2ModLamp1&quot;,&#13;&#10;&#9;&#9;&quot;cbPatchDestination1&quot;,&#13;&#10;&#9;&#9;&quot;cbPatchDestination2&quot;,&#13;&#10;&#9;&#9;&quot;cbPatchDestination3&quot;,&#13;&#10;&#9;&#9;&quot;cbPatchDestination4&quot;,&#13;&#10;&#9;&#9;&quot;cbPatchSource2&quot;,&#13;&#10;&#9;&#9;&quot;cbPatchSource3&quot;,&#13;&#10;&#9;&#9;&quot;cbPatchSource4&quot;,&#13;&#10;&#9;&#9;&quot;knobPatch1Amount&quot;,&#13;&#10;&#9;&#9;&quot;knobPatch2Amount&quot;,&#13;&#10;&#9;&#9;&quot;knobPatch3Amount&quot;,&#13;&#10;&#9;&#9;&quot;knobPatch4Amount&quot;,&#13;&#10;&#9;&#9;&quot;knobSeqLastStep&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqKnob1&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqKnob2&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqKnob3&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqMotion1&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqMotion2&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqMotion3&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqType&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqRunMode&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqKeySync&quot;,&#13;&#10;&#9;&#9;&quot;cbSeqResolution&quot;,&#13;&#10;&#9;&#9;&quot;btnSeqOnOff&quot;,&#13;&#10;&#9;&#9;&quot;imgSeqLamp2&quot;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;table.insert(modLIst, string.format(&quot;knobSeq3Step%d&quot;, i))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Vocoder used to have these fancy &quot;inverted color&quot; labels&#13;&#10;&#9;applyVocoderLabels(vocoderEnabled)&#13;&#10;&#13;&#10;&#9;if vocoderEnabled then&#13;&#10;&#13;&#10;&#9;&#9;-- Synchronizing values&#13;&#10;&#13;&#10;&#9;&#9;if sharedValues.voiceMode ~= vmUndefined then&#13;&#10;&#13;&#10;&#9;&#9;&#9;syncTimbreWithBuffer(sharedValues.selectedTimbre)&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Reset all &quot;synth&quot;-related values to its defaults&#13;&#10;&#9;&#9;&#9;resetVocoderControls(true)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;turnLightsOff(&quot;imgOsc2ModLamp&quot;, 1)&#13;&#10;&#9;&#9;turnLightsOff(&quot;imgOsc2Lamp&quot;, 2)&#13;&#10;&#13;&#10;&#9;&#9;sharedValues.timbreMode = tmVocoder&#13;&#10;&#13;&#10;&#9;&#9;-- Change bounds&#13;&#10;&#9;&#9;for i = 1, #knobList do&#13;&#10;&#13;&#10;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderMin&quot;, 0)&#13;&#10;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderMax&quot;, 127)&#13;&#10;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderDoubleClickValue&quot;, 64)&#13;&#10;&#13;&#10;&#9;&#9;&#9;getComp(knobList[i]):repaint()&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- The &quot;Cutoff&quot; knob is invertd here - 0~127 =&gt; -63~63&#13;&#10; &#9;&#9;specialBounds(&quot;knobFilterCutoff&quot;, -63, 63, 0)&#13;&#10;&#13;&#10;&#9;&#9;assertSeqKnobBoundsByValue(1, 0)&#13;&#10;&#9;&#9;assertSeqKnobBoundsByValue(2, 1)&#13;&#10;&#13;&#10;&#9;&#9;-- Set new formulas&#13;&#10;&#9;&#9;assertSysExFormulas(2)&#13;&#10;&#13;&#10;&#9;&#9;-- Disable some controls&#13;&#10;&#9;&#9;enableControls(modLIst, false)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;-- Synchronizing values&#13;&#10;&#9;&#9;if sharedValues.voiceMode == vmVocoder then&#13;&#10;&#9;&#9;&#9;syncVocoderWithBuffer()&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;sharedValues.timbreMode = tmSynth&#13;&#10;&#13;&#10;&#9;&#9;-- Revert bounds&#13;&#10;&#9;&#9;for i = 1, #knobList do&#13;&#10;&#13;&#10;&#9;&#9;&#9;if knobList[i] ~= &quot;knobOsc2Semitone&quot; then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderMin&quot;, -63)&#13;&#10;&#9;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderMax&quot;, 63)&#13;&#10;&#9;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderDoubleClickValue&quot;, 0)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderMin&quot;, -24)&#13;&#10;&#9;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderMax&quot;, 24)&#13;&#10;&#9;&#9;&#9;&#9;getComp(knobList[i]):setPropertyInt(&quot;uiSliderDoubleClickValue&quot;, 0)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;getComp(knobList[i]):repaint()&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- The &quot;Cutoff&quot; knob again requires some special treatment&#13;&#10;&#9;&#9;specialBounds(&quot;knobFilterCutoff&quot;, 0, 127, 100)&#13;&#10;&#13;&#10;&#9;&#9;-- Set usual formulas&#13;&#10;&#9;&#9;assertSysExFormulas(0)&#13;&#10;&#13;&#10;&#9;&#9;-- Enable controls&#13;&#10;&#9;&#9;enableControls(modLIst, true)&#13;&#10;&#9;end&#13;&#10;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="169e47f4e8d24a568b305fc3f954970d"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="specialBounds" luaMethodCode="function specialBounds(knobName, minValue, maxValue, defaultValue)&#10;&#13;&#10;&#9;getComp(knobName):setPropertyInt(&quot;uiSliderMin&quot;, minValue)&#13;&#10;&#9;getComp(knobName):setPropertyInt(&quot;uiSliderMax&quot;, maxValue)&#13;&#10;&#9;getComp(knobName):setPropertyInt(&quot;uiSliderDoubleClickValue&quot;, defaultValue)&#13;&#10;&#13;&#10;&#9;getComp(knobName):repaint()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="89a7da5e7a654dabafd4e4137ad1cd59"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Information" uuid="09877b4767e44439945c77b00f84b2bc">
          <luaMethodGroup name="Licenses" uuid="b9aba470d52249929da53bdafa99f3ca">
            <luaMethod luaMethodName="License" luaMethodCode="--[[&#13;&#10;               GNU GENERAL PUBLIC LICENSE&#13;&#10;                       Version 3, 29 June 2007&#13;&#10;&#13;&#10; Copyright (C) 2007 Free Software Foundation, Inc. &lt;https://fsf.org/&gt;&#13;&#10; Everyone is permitted to copy and distribute verbatim copies&#13;&#10; of this license document, but changing it is not allowed.&#13;&#10;&#13;&#10;                            Preamble&#13;&#10;&#13;&#10;  The GNU General Public License is a free, copyleft license for&#13;&#10;software and other kinds of works.&#13;&#10;&#13;&#10;  The licenses for most software and other practical works are designed&#13;&#10;to take away your freedom to share and change the works.  By contrast,&#13;&#10;the GNU General Public License is intended to guarantee your freedom to&#13;&#10;share and change all versions of a program--to make sure it remains free&#13;&#10;software for all its users.  We, the Free Software Foundation, use the&#13;&#10;GNU General Public License for most of our software; it applies also to&#13;&#10;any other work released this way by its authors.  You can apply it to&#13;&#10;your programs, too.&#13;&#10;&#13;&#10;  When we speak of free software, we are referring to freedom, not&#13;&#10;price.  Our General Public Licenses are designed to make sure that you&#13;&#10;have the freedom to distribute copies of free software (and charge for&#13;&#10;them if you wish), that you receive source code or can get it if you&#13;&#10;want it, that you can change the software or use pieces of it in new&#13;&#10;free programs, and that you know you can do these things.&#13;&#10;&#13;&#10;  To protect your rights, we need to prevent others from denying you&#13;&#10;these rights or asking you to surrender the rights.  Therefore, you have&#13;&#10;certain responsibilities if you distribute copies of the software, or if&#13;&#10;you modify it: responsibilities to respect the freedom of others.&#13;&#10;&#13;&#10;  For example, if you distribute copies of such a program, whether&#13;&#10;gratis or for a fee, you must pass on to the recipients the same&#13;&#10;freedoms that you received.  You must make sure that they, too, receive&#13;&#10;or can get the source code.  And you must show them these terms so they&#13;&#10;know their rights.&#13;&#10;&#13;&#10;  Developers that use the GNU GPL protect your rights with two steps:&#13;&#10;(1) assert copyright on the software, and (2) offer you this License&#13;&#10;giving you legal permission to copy, distribute and/or modify it.&#13;&#10;&#13;&#10;  For the developers' and authors' protection, the GPL clearly explains&#13;&#10;that there is no warranty for this free software.  For both users' and&#13;&#10;authors' sake, the GPL requires that modified versions be marked as&#13;&#10;changed, so that their problems will not be attributed erroneously to&#13;&#10;authors of previous versions.&#13;&#10;&#13;&#10;  Some devices are designed to deny users access to install or run&#13;&#10;modified versions of the software inside them, although the manufacturer&#13;&#10;can do so.  This is fundamentally incompatible with the aim of&#13;&#10;protecting users' freedom to change the software.  The systematic&#13;&#10;pattern of such abuse occurs in the area of products for individuals to&#13;&#10;use, which is precisely where it is most unacceptable.  Therefore, we&#13;&#10;have designed this version of the GPL to prohibit the practice for those&#13;&#10;products.  If such problems arise substantially in other domains, we&#13;&#10;stand ready to extend this provision to those domains in future versions&#13;&#10;of the GPL, as needed to protect the freedom of users.&#13;&#10;&#13;&#10;  Finally, every program is threatened constantly by software patents.&#13;&#10;States should not allow patents to restrict development and use of&#13;&#10;software on general-purpose computers, but in those that do, we wish to&#13;&#10;avoid the special danger that patents applied to a free program could&#13;&#10;make it effectively proprietary.  To prevent this, the GPL assures that&#13;&#10;patents cannot be used to render the program non-free.&#13;&#10;&#13;&#10;  The precise terms and conditions for copying, distribution and&#13;&#10;modification follow.&#13;&#10;&#13;&#10;                       TERMS AND CONDITIONS&#13;&#10;&#13;&#10;  0. Definitions.&#13;&#10;&#13;&#10;  &quot;This License&quot; refers to version 3 of the GNU General Public License.&#13;&#10;&#13;&#10;  &quot;Copyright&quot; also means copyright-like laws that apply to other kinds of&#13;&#10;works, such as semiconductor masks.&#13;&#10;&#13;&#10;  &quot;The Program&quot; refers to any copyrightable work licensed under this&#13;&#10;License.  Each licensee is addressed as &quot;you&quot;.  &quot;Licensees&quot; and&#13;&#10;&quot;recipients&quot; may be individuals or organizations.&#13;&#10;&#13;&#10;  To &quot;modify&quot; a work means to copy from or adapt all or part of the work&#13;&#10;in a fashion requiring copyright permission, other than the making of an&#13;&#10;exact copy.  The resulting work is called a &quot;modified version&quot; of the&#13;&#10;earlier work or a work &quot;based on&quot; the earlier work.&#13;&#10;&#13;&#10;  A &quot;covered work&quot; means either the unmodified Program or a work based&#13;&#10;on the Program.&#13;&#10;&#13;&#10;  To &quot;propagate&quot; a work means to do anything with it that, without&#13;&#10;permission, would make you directly or secondarily liable for&#13;&#10;infringement under applicable copyright law, except executing it on a&#13;&#10;computer or modifying a private copy.  Propagation includes copying,&#13;&#10;distribution (with or without modification), making available to the&#13;&#10;public, and in some countries other activities as well.&#13;&#10;&#13;&#10;  To &quot;convey&quot; a work means any kind of propagation that enables other&#13;&#10;parties to make or receive copies.  Mere interaction with a user through&#13;&#10;a computer network, with no transfer of a copy, is not conveying.&#13;&#10;&#13;&#10;  An interactive user interface displays &quot;Appropriate Legal Notices&quot;&#13;&#10;to the extent that it includes a convenient and prominently visible&#13;&#10;feature that (1) displays an appropriate copyright notice, and (2)&#13;&#10;tells the user that there is no warranty for the work (except to the&#13;&#10;extent that warranties are provided), that licensees may convey the&#13;&#10;work under this License, and how to view a copy of this License.  If&#13;&#10;the interface presents a list of user commands or options, such as a&#13;&#10;menu, a prominent item in the list meets this criterion.&#13;&#10;&#13;&#10;  1. Source Code.&#13;&#10;&#13;&#10;  The &quot;source code&quot; for a work means the preferred form of the work&#13;&#10;for making modifications to it.  &quot;Object code&quot; means any non-source&#13;&#10;form of a work.&#13;&#10;&#13;&#10;  A &quot;Standard Interface&quot; means an interface that either is an official&#13;&#10;standard defined by a recognized standards body, or, in the case of&#13;&#10;interfaces specified for a particular programming language, one that&#13;&#10;is widely used among developers working in that language.&#13;&#10;&#13;&#10;  The &quot;System Libraries&quot; of an executable work include anything, other&#13;&#10;than the work as a whole, that (a) is included in the normal form of&#13;&#10;packaging a Major Component, but which is not part of that Major&#13;&#10;Component, and (b) serves only to enable use of the work with that&#13;&#10;Major Component, or to implement a Standard Interface for which an&#13;&#10;implementation is available to the public in source code form.  A&#13;&#10;&quot;Major Component&quot;, in this context, means a major essential component&#13;&#10;(kernel, window system, and so on) of the specific operating system&#13;&#10;(if any) on which the executable work runs, or a compiler used to&#13;&#10;produce the work, or an object code interpreter used to run it.&#13;&#10;&#13;&#10;  The &quot;Corresponding Source&quot; for a work in object code form means all&#13;&#10;the source code needed to generate, install, and (for an executable&#13;&#10;work) run the object code and to modify the work, including scripts to&#13;&#10;control those activities.  However, it does not include the work's&#13;&#10;System Libraries, or general-purpose tools or generally available free&#13;&#10;programs which are used unmodified in performing those activities but&#13;&#10;which are not part of the work.  For example, Corresponding Source&#13;&#10;includes interface definition files associated with source files for&#13;&#10;the work, and the source code for shared libraries and dynamically&#13;&#10;linked subprograms that the work is specifically designed to require,&#13;&#10;such as by intimate data communication or control flow between those&#13;&#10;subprograms and other parts of the work.&#13;&#10;&#13;&#10;  The Corresponding Source need not include anything that users&#13;&#10;can regenerate automatically from other parts of the Corresponding&#13;&#10;Source.&#13;&#10;&#13;&#10;  The Corresponding Source for a work in source code form is that&#13;&#10;same work.&#13;&#10;&#13;&#10;  2. Basic Permissions.&#13;&#10;&#13;&#10;  All rights granted under this License are granted for the term of&#13;&#10;copyright on the Program, and are irrevocable provided the stated&#13;&#10;conditions are met.  This License explicitly affirms your unlimited&#13;&#10;permission to run the unmodified Program.  The output from running a&#13;&#10;covered work is covered by this License only if the output, given its&#13;&#10;content, constitutes a covered work.  This License acknowledges your&#13;&#10;rights of fair use or other equivalent, as provided by copyright law.&#13;&#10;&#13;&#10;  You may make, run and propagate covered works that you do not&#13;&#10;convey, without conditions so long as your license otherwise remains&#13;&#10;in force.  You may convey covered works to others for the sole purpose&#13;&#10;of having them make modifications exclusively for you, or provide you&#13;&#10;with facilities for running those works, provided that you comply with&#13;&#10;the terms of this License in conveying all material for which you do&#13;&#10;not control copyright.  Those thus making or running the covered works&#13;&#10;for you must do so exclusively on your behalf, under your direction&#13;&#10;and control, on terms that prohibit them from making any copies of&#13;&#10;your copyrighted material outside their relationship with you.&#13;&#10;&#13;&#10;  Conveying under any other circumstances is permitted solely under&#13;&#10;the conditions stated below.  Sublicensing is not allowed; section 10&#13;&#10;makes it unnecessary.&#13;&#10;&#13;&#10;  3. Protecting Users' Legal Rights From Anti-Circumvention Law.&#13;&#10;&#13;&#10;  No covered work shall be deemed part of an effective technological&#13;&#10;measure under any applicable law fulfilling obligations under article&#13;&#10;11 of the WIPO copyright treaty adopted on 20 December 1996, or&#13;&#10;similar laws prohibiting or restricting circumvention of such&#13;&#10;measures.&#13;&#10;&#13;&#10;  When you convey a covered work, you waive any legal power to forbid&#13;&#10;circumvention of technological measures to the extent such circumvention&#13;&#10;is effected by exercising rights under this License with respect to&#13;&#10;the covered work, and you disclaim any intention to limit operation or&#13;&#10;modification of the work as a means of enforcing, against the work's&#13;&#10;users, your or third parties' legal rights to forbid circumvention of&#13;&#10;technological measures.&#13;&#10;&#13;&#10;  4. Conveying Verbatim Copies.&#13;&#10;&#13;&#10;  You may convey verbatim copies of the Program's source code as you&#13;&#10;receive it, in any medium, provided that you conspicuously and&#13;&#10;appropriately publish on each copy an appropriate copyright notice;&#13;&#10;keep intact all notices stating that this License and any&#13;&#10;non-permissive terms added in accord with section 7 apply to the code;&#13;&#10;keep intact all notices of the absence of any warranty; and give all&#13;&#10;recipients a copy of this License along with the Program.&#13;&#10;&#13;&#10;  You may charge any price or no price for each copy that you convey,&#13;&#10;and you may offer support or warranty protection for a fee.&#13;&#10;&#13;&#10;  5. Conveying Modified Source Versions.&#13;&#10;&#13;&#10;  You may convey a work based on the Program, or the modifications to&#13;&#10;produce it from the Program, in the form of source code under the&#13;&#10;terms of section 4, provided that you also meet all of these conditions:&#13;&#10;&#13;&#10;    a) The work must carry prominent notices stating that you modified&#13;&#10;    it, and giving a relevant date.&#13;&#10;&#13;&#10;    b) The work must carry prominent notices stating that it is&#13;&#10;    released under this License and any conditions added under section&#13;&#10;    7.  This requirement modifies the requirement in section 4 to&#13;&#10;    &quot;keep intact all notices&quot;.&#13;&#10;&#13;&#10;    c) You must license the entire work, as a whole, under this&#13;&#10;    License to anyone who comes into possession of a copy.  This&#13;&#10;    License will therefore apply, along with any applicable section 7&#13;&#10;    additional terms, to the whole of the work, and all its parts,&#13;&#10;    regardless of how they are packaged.  This License gives no&#13;&#10;    permission to license the work in any other way, but it does not&#13;&#10;    invalidate such permission if you have separately received it.&#13;&#10;&#13;&#10;    d) If the work has interactive user interfaces, each must display&#13;&#10;    Appropriate Legal Notices; however, if the Program has interactive&#13;&#10;    interfaces that do not display Appropriate Legal Notices, your&#13;&#10;    work need not make them do so.&#13;&#10;&#13;&#10;  A compilation of a covered work with other separate and independent&#13;&#10;works, which are not by their nature extensions of the covered work,&#13;&#10;and which are not combined with it such as to form a larger program,&#13;&#10;in or on a volume of a storage or distribution medium, is called an&#13;&#10;&quot;aggregate&quot; if the compilation and its resulting copyright are not&#13;&#10;used to limit the access or legal rights of the compilation's users&#13;&#10;beyond what the individual works permit.  Inclusion of a covered work&#13;&#10;in an aggregate does not cause this License to apply to the other&#13;&#10;parts of the aggregate.&#13;&#10;&#13;&#10;  6. Conveying Non-Source Forms.&#13;&#10;&#13;&#10;  You may convey a covered work in object code form under the terms&#13;&#10;of sections 4 and 5, provided that you also convey the&#13;&#10;machine-readable Corresponding Source under the terms of this License,&#13;&#10;in one of these ways:&#13;&#10;&#13;&#10;    a) Convey the object code in, or embodied in, a physical product&#13;&#10;    (including a physical distribution medium), accompanied by the&#13;&#10;    Corresponding Source fixed on a durable physical medium&#13;&#10;    customarily used for software interchange.&#13;&#10;&#13;&#10;    b) Convey the object code in, or embodied in, a physical product&#13;&#10;    (including a physical distribution medium), accompanied by a&#13;&#10;    written offer, valid for at least three years and valid for as&#13;&#10;    long as you offer spare parts or customer support for that product&#13;&#10;    model, to give anyone who possesses the object code either (1) a&#13;&#10;    copy of the Corresponding Source for all the software in the&#13;&#10;    product that is covered by this License, on a durable physical&#13;&#10;    medium customarily used for software interchange, for a price no&#13;&#10;    more than your reasonable cost of physically performing this&#13;&#10;    conveying of source, or (2) access to copy the&#13;&#10;    Corresponding Source from a network server at no charge.&#13;&#10;&#13;&#10;    c) Convey individual copies of the object code with a copy of the&#13;&#10;    written offer to provide the Corresponding Source.  This&#13;&#10;    alternative is allowed only occasionally and noncommercially, and&#13;&#10;    only if you received the object code with such an offer, in accord&#13;&#10;    with subsection 6b.&#13;&#10;&#13;&#10;    d) Convey the object code by offering access from a designated&#13;&#10;    place (gratis or for a charge), and offer equivalent access to the&#13;&#10;    Corresponding Source in the same way through the same place at no&#13;&#10;    further charge.  You need not require recipients to copy the&#13;&#10;    Corresponding Source along with the object code.  If the place to&#13;&#10;    copy the object code is a network server, the Corresponding Source&#13;&#10;    may be on a different server (operated by you or a third party)&#13;&#10;    that supports equivalent copying facilities, provided you maintain&#13;&#10;    clear directions next to the object code saying where to find the&#13;&#10;    Corresponding Source.  Regardless of what server hosts the&#13;&#10;    Corresponding Source, you remain obligated to ensure that it is&#13;&#10;    available for as long as needed to satisfy these requirements.&#13;&#10;&#13;&#10;    e) Convey the object code using peer-to-peer transmission, provided&#13;&#10;    you inform other peers where the object code and Corresponding&#13;&#10;    Source of the work are being offered to the general public at no&#13;&#10;    charge under subsection 6d.&#13;&#10;&#13;&#10;  A separable portion of the object code, whose source code is excluded&#13;&#10;from the Corresponding Source as a System Library, need not be&#13;&#10;included in conveying the object code work.&#13;&#10;&#13;&#10;  A &quot;User Product&quot; is either (1) a &quot;consumer product&quot;, which means any&#13;&#10;tangible personal property which is normally used for personal, family,&#13;&#10;or household purposes, or (2) anything designed or sold for incorporation&#13;&#10;into a dwelling.  In determining whether a product is a consumer product,&#13;&#10;doubtful cases shall be resolved in favor of coverage.  For a particular&#13;&#10;product received by a particular user, &quot;normally used&quot; refers to a&#13;&#10;typical or common use of that class of product, regardless of the status&#13;&#10;of the particular user or of the way in which the particular user&#13;&#10;actually uses, or expects or is expected to use, the product.  A product&#13;&#10;is a consumer product regardless of whether the product has substantial&#13;&#10;commercial, industrial or non-consumer uses, unless such uses represent&#13;&#10;the only significant mode of use of the product.&#13;&#10;&#13;&#10;  &quot;Installation Information&quot; for a User Product means any methods,&#13;&#10;procedures, authorization keys, or other information required to install&#13;&#10;and execute modified versions of a covered work in that User Product from&#13;&#10;a modified version of its Corresponding Source.  The information must&#13;&#10;suffice to ensure that the continued functioning of the modified object&#13;&#10;code is in no case prevented or interfered with solely because&#13;&#10;modification has been made.&#13;&#10;&#13;&#10;  If you convey an object code work under this section in, or with, or&#13;&#10;specifically for use in, a User Product, and the conveying occurs as&#13;&#10;part of a transaction in which the right of possession and use of the&#13;&#10;User Product is transferred to the recipient in perpetuity or for a&#13;&#10;fixed term (regardless of how the transaction is characterized), the&#13;&#10;Corresponding Source conveyed under this section must be accompanied&#13;&#10;by the Installation Information.  But this requirement does not apply&#13;&#10;if neither you nor any third party retains the ability to install&#13;&#10;modified object code on the User Product (for example, the work has&#13;&#10;been installed in ROM).&#13;&#10;&#13;&#10;  The requirement to provide Installation Information does not include a&#13;&#10;requirement to continue to provide support service, warranty, or updates&#13;&#10;for a work that has been modified or installed by the recipient, or for&#13;&#10;the User Product in which it has been modified or installed.  Access to a&#13;&#10;network may be denied when the modification itself materially and&#13;&#10;adversely affects the operation of the network or violates the rules and&#13;&#10;protocols for communication across the network.&#13;&#10;&#13;&#10;  Corresponding Source conveyed, and Installation Information provided,&#13;&#10;in accord with this section must be in a format that is publicly&#13;&#10;documented (and with an implementation available to the public in&#13;&#10;source code form), and must require no special password or key for&#13;&#10;unpacking, reading or copying.&#13;&#10;&#13;&#10;  7. Additional Terms.&#13;&#10;&#13;&#10;  &quot;Additional permissions&quot; are terms that supplement the terms of this&#13;&#10;License by making exceptions from one or more of its conditions.&#13;&#10;Additional permissions that are applicable to the entire Program shall&#13;&#10;be treated as though they were included in this License, to the extent&#13;&#10;that they are valid under applicable law.  If additional permissions&#13;&#10;apply only to part of the Program, that part may be used separately&#13;&#10;under those permissions, but the entire Program remains governed by&#13;&#10;this License without regard to the additional permissions.&#13;&#10;&#13;&#10;  When you convey a copy of a covered work, you may at your option&#13;&#10;remove any additional permissions from that copy, or from any part of&#13;&#10;it.  (Additional permissions may be written to require their own&#13;&#10;removal in certain cases when you modify the work.)  You may place&#13;&#10;additional permissions on material, added by you to a covered work,&#13;&#10;for which you have or can give appropriate copyright permission.&#13;&#10;&#13;&#10;  Notwithstanding any other provision of this License, for material you&#13;&#10;add to a covered work, you may (if authorized by the copyright holders of&#13;&#10;that material) supplement the terms of this License with terms:&#13;&#10;&#13;&#10;    a) Disclaiming warranty or limiting liability differently from the&#13;&#10;    terms of sections 15 and 16 of this License; or&#13;&#10;&#13;&#10;    b) Requiring preservation of specified reasonable legal notices or&#13;&#10;    author attributions in that material or in the Appropriate Legal&#13;&#10;    Notices displayed by works containing it; or&#13;&#10;&#13;&#10;    c) Prohibiting misrepresentation of the origin of that material, or&#13;&#10;    requiring that modified versions of such material be marked in&#13;&#10;    reasonable ways as different from the original version; or&#13;&#10;&#13;&#10;    d) Limiting the use for publicity purposes of names of licensors or&#13;&#10;    authors of the material; or&#13;&#10;&#13;&#10;    e) Declining to grant rights under trademark law for use of some&#13;&#10;    trade names, trademarks, or service marks; or&#13;&#10;&#13;&#10;    f) Requiring indemnification of licensors and authors of that&#13;&#10;    material by anyone who conveys the material (or modified versions of&#13;&#10;    it) with contractual assumptions of liability to the recipient, for&#13;&#10;    any liability that these contractual assumptions directly impose on&#13;&#10;    those licensors and authors.&#13;&#10;&#13;&#10;  All other non-permissive additional terms are considered &quot;further&#13;&#10;restrictions&quot; within the meaning of section 10.  If the Program as you&#13;&#10;received it, or any part of it, contains a notice stating that it is&#13;&#10;governed by this License along with a term that is a further&#13;&#10;restriction, you may remove that term.  If a license document contains&#13;&#10;a further restriction but permits relicensing or conveying under this&#13;&#10;License, you may add to a covered work material governed by the terms&#13;&#10;of that license document, provided that the further restriction does&#13;&#10;not survive such relicensing or conveying.&#13;&#10;&#13;&#10;  If you add terms to a covered work in accord with this section, you&#13;&#10;must place, in the relevant source files, a statement of the&#13;&#10;additional terms that apply to those files, or a notice indicating&#13;&#10;where to find the applicable terms.&#13;&#10;&#13;&#10;  Additional terms, permissive or non-permissive, may be stated in the&#13;&#10;form of a separately written license, or stated as exceptions;&#13;&#10;the above requirements apply either way.&#13;&#10;&#13;&#10;  8. Termination.&#13;&#10;&#13;&#10;  You may not propagate or modify a covered work except as expressly&#13;&#10;provided under this License.  Any attempt otherwise to propagate or&#13;&#10;modify it is void, and will automatically terminate your rights under&#13;&#10;this License (including any patent licenses granted under the third&#13;&#10;paragraph of section 11).&#13;&#10;&#13;&#10;  However, if you cease all violation of this License, then your&#13;&#10;license from a particular copyright holder is reinstated (a)&#13;&#10;provisionally, unless and until the copyright holder explicitly and&#13;&#10;finally terminates your license, and (b) permanently, if the copyright&#13;&#10;holder fails to notify you of the violation by some reasonable means&#13;&#10;prior to 60 days after the cessation.&#13;&#10;&#13;&#10;  Moreover, your license from a particular copyright holder is&#13;&#10;reinstated permanently if the copyright holder notifies you of the&#13;&#10;violation by some reasonable means, this is the first time you have&#13;&#10;received notice of violation of this License (for any work) from that&#13;&#10;copyright holder, and you cure the violation prior to 30 days after&#13;&#10;your receipt of the notice.&#13;&#10;&#13;&#10;  Termination of your rights under this section does not terminate the&#13;&#10;licenses of parties who have received copies or rights from you under&#13;&#10;this License.  If your rights have been terminated and not permanently&#13;&#10;reinstated, you do not qualify to receive new licenses for the same&#13;&#10;material under section 10.&#13;&#10;&#13;&#10;  9. Acceptance Not Required for Having Copies.&#13;&#10;&#13;&#10;  You are not required to accept this License in order to receive or&#13;&#10;run a copy of the Program.  Ancillary propagation of a covered work&#13;&#10;occurring solely as a consequence of using peer-to-peer transmission&#13;&#10;to receive a copy likewise does not require acceptance.  However,&#13;&#10;nothing other than this License grants you permission to propagate or&#13;&#10;modify any covered work.  These actions infringe copyright if you do&#13;&#10;not accept this License.  Therefore, by modifying or propagating a&#13;&#10;covered work, you indicate your acceptance of this License to do so.&#13;&#10;&#13;&#10;  10. Automatic Licensing of Downstream Recipients.&#13;&#10;&#13;&#10;  Each time you convey a covered work, the recipient automatically&#13;&#10;receives a license from the original licensors, to run, modify and&#13;&#10;propagate that work, subject to this License.  You are not responsible&#13;&#10;for enforcing compliance by third parties with this License.&#13;&#10;&#13;&#10;  An &quot;entity transaction&quot; is a transaction transferring control of an&#13;&#10;organization, or substantially all assets of one, or subdividing an&#13;&#10;organization, or merging organizations.  If propagation of a covered&#13;&#10;work results from an entity transaction, each party to that&#13;&#10;transaction who receives a copy of the work also receives whatever&#13;&#10;licenses to the work the party's predecessor in interest had or could&#13;&#10;give under the previous paragraph, plus a right to possession of the&#13;&#10;Corresponding Source of the work from the predecessor in interest, if&#13;&#10;the predecessor has it or can get it with reasonable efforts.&#13;&#10;&#13;&#10;  You may not impose any further restrictions on the exercise of the&#13;&#10;rights granted or affirmed under this License.  For example, you may&#13;&#10;not impose a license fee, royalty, or other charge for exercise of&#13;&#10;rights granted under this License, and you may not initiate litigation&#13;&#10;(including a cross-claim or counterclaim in a lawsuit) alleging that&#13;&#10;any patent claim is infringed by making, using, selling, offering for&#13;&#10;sale, or importing the Program or any portion of it.&#13;&#10;&#13;&#10;  11. Patents.&#13;&#10;&#13;&#10;  A &quot;contributor&quot; is a copyright holder who authorizes use under this&#13;&#10;License of the Program or a work on which the Program is based.  The&#13;&#10;work thus licensed is called the contributor's &quot;contributor version&quot;.&#13;&#10;&#13;&#10;  A contributor's &quot;essential patent claims&quot; are all patent claims&#13;&#10;owned or controlled by the contributor, whether already acquired or&#13;&#10;hereafter acquired, that would be infringed by some manner, permitted&#13;&#10;by this License, of making, using, or selling its contributor version,&#13;&#10;but do not include claims that would be infringed only as a&#13;&#10;consequence of further modification of the contributor version.  For&#13;&#10;purposes of this definition, &quot;control&quot; includes the right to grant&#13;&#10;patent sublicenses in a manner consistent with the requirements of&#13;&#10;this License.&#13;&#10;&#13;&#10;  Each contributor grants you a non-exclusive, worldwide, royalty-free&#13;&#10;patent license under the contributor's essential patent claims, to&#13;&#10;make, use, sell, offer for sale, import and otherwise run, modify and&#13;&#10;propagate the contents of its contributor version.&#13;&#10;&#13;&#10;  In the following three paragraphs, a &quot;patent license&quot; is any express&#13;&#10;agreement or commitment, however denominated, not to enforce a patent&#13;&#10;(such as an express permission to practice a patent or covenant not to&#13;&#10;sue for patent infringement).  To &quot;grant&quot; such a patent license to a&#13;&#10;party means to make such an agreement or commitment not to enforce a&#13;&#10;patent against the party.&#13;&#10;&#13;&#10;  If you convey a covered work, knowingly relying on a patent license,&#13;&#10;and the Corresponding Source of the work is not available for anyone&#13;&#10;to copy, free of charge and under the terms of this License, through a&#13;&#10;publicly available network server or other readily accessible means,&#13;&#10;then you must either (1) cause the Corresponding Source to be so&#13;&#10;available, or (2) arrange to deprive yourself of the benefit of the&#13;&#10;patent license for this particular work, or (3) arrange, in a manner&#13;&#10;consistent with the requirements of this License, to extend the patent&#13;&#10;license to downstream recipients.  &quot;Knowingly relying&quot; means you have&#13;&#10;actual knowledge that, but for the patent license, your conveying the&#13;&#10;covered work in a country, or your recipient's use of the covered work&#13;&#10;in a country, would infringe one or more identifiable patents in that&#13;&#10;country that you have reason to believe are valid.&#13;&#10;&#13;&#10;  If, pursuant to or in connection with a single transaction or&#13;&#10;arrangement, you convey, or propagate by procuring conveyance of, a&#13;&#10;covered work, and grant a patent license to some of the parties&#13;&#10;receiving the covered work authorizing them to use, propagate, modify&#13;&#10;or convey a specific copy of the covered work, then the patent license&#13;&#10;you grant is automatically extended to all recipients of the covered&#13;&#10;work and works based on it.&#13;&#10;&#13;&#10;  A patent license is &quot;discriminatory&quot; if it does not include within&#13;&#10;the scope of its coverage, prohibits the exercise of, or is&#13;&#10;conditioned on the non-exercise of one or more of the rights that are&#13;&#10;specifically granted under this License.  You may not convey a covered&#13;&#10;work if you are a party to an arrangement with a third party that is&#13;&#10;in the business of distributing software, under which you make payment&#13;&#10;to the third party based on the extent of your activity of conveying&#13;&#10;the work, and under which the third party grants, to any of the&#13;&#10;parties who would receive the covered work from you, a discriminatory&#13;&#10;patent license (a) in connection with copies of the covered work&#13;&#10;conveyed by you (or copies made from those copies), or (b) primarily&#13;&#10;for and in connection with specific products or compilations that&#13;&#10;contain the covered work, unless you entered into that arrangement,&#13;&#10;or that patent license was granted, prior to 28 March 2007.&#13;&#10;&#13;&#10;  Nothing in this License shall be construed as excluding or limiting&#13;&#10;any implied license or other defenses to infringement that may&#13;&#10;otherwise be available to you under applicable patent law.&#13;&#10;&#13;&#10;  12. No Surrender of Others' Freedom.&#13;&#10;&#13;&#10;  If conditions are imposed on you (whether by court order, agreement or&#13;&#10;otherwise) that contradict the conditions of this License, they do not&#13;&#10;excuse you from the conditions of this License.  If you cannot convey a&#13;&#10;covered work so as to satisfy simultaneously your obligations under this&#13;&#10;License and any other pertinent obligations, then as a consequence you may&#13;&#10;not convey it at all.  For example, if you agree to terms that obligate you&#13;&#10;to collect a royalty for further conveying from those to whom you convey&#13;&#10;the Program, the only way you could satisfy both those terms and this&#13;&#10;License would be to refrain entirely from conveying the Program.&#13;&#10;&#13;&#10;  13. Use with the GNU Affero General Public License.&#13;&#10;&#13;&#10;  Notwithstanding any other provision of this License, you have&#13;&#10;permission to link or combine any covered work with a work licensed&#13;&#10;under version 3 of the GNU Affero General Public License into a single&#13;&#10;combined work, and to convey the resulting work.  The terms of this&#13;&#10;License will continue to apply to the part which is the covered work,&#13;&#10;but the special requirements of the GNU Affero General Public License,&#13;&#10;section 13, concerning interaction through a network will apply to the&#13;&#10;combination as such.&#13;&#10;&#13;&#10;  14. Revised Versions of this License.&#13;&#10;&#13;&#10;  The Free Software Foundation may publish revised and/or new versions of&#13;&#10;the GNU General Public License from time to time.  Such new versions will&#13;&#10;be similar in spirit to the present version, but may differ in detail to&#13;&#10;address new problems or concerns.&#13;&#10;&#13;&#10;  Each version is given a distinguishing version number.  If the&#13;&#10;Program specifies that a certain numbered version of the GNU General&#13;&#10;Public License &quot;or any later version&quot; applies to it, you have the&#13;&#10;option of following the terms and conditions either of that numbered&#13;&#10;version or of any later version published by the Free Software&#13;&#10;Foundation.  If the Program does not specify a version number of the&#13;&#10;GNU General Public License, you may choose any version ever published&#13;&#10;by the Free Software Foundation.&#13;&#10;&#13;&#10;  If the Program specifies that a proxy can decide which future&#13;&#10;versions of the GNU General Public License can be used, that proxy's&#13;&#10;public statement of acceptance of a version permanently authorizes you&#13;&#10;to choose that version for the Program.&#13;&#10;&#13;&#10;  Later license versions may give you additional or different&#13;&#10;permissions.  However, no additional obligations are imposed on any&#13;&#10;author or copyright holder as a result of your choosing to follow a&#13;&#10;later version.&#13;&#10;&#13;&#10;  15. Disclaimer of Warranty.&#13;&#10;&#13;&#10;  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY&#13;&#10;APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT&#13;&#10;HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM &quot;AS IS&quot; WITHOUT WARRANTY&#13;&#10;OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,&#13;&#10;THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR&#13;&#10;PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM&#13;&#10;IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF&#13;&#10;ALL NECESSARY SERVICING, REPAIR OR CORRECTION.&#13;&#10;&#13;&#10;  16. Limitation of Liability.&#13;&#10;&#13;&#10;  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING&#13;&#10;WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS&#13;&#10;THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY&#13;&#10;GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE&#13;&#10;USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF&#13;&#10;DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD&#13;&#10;PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),&#13;&#10;EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF&#13;&#10;SUCH DAMAGES.&#13;&#10;&#13;&#10;  17. Interpretation of Sections 15 and 16.&#13;&#10;&#13;&#10;  If the disclaimer of warranty and limitation of liability provided&#13;&#10;above cannot be given local legal effect according to their terms,&#13;&#10;reviewing courts shall apply local law that most closely approximates&#13;&#10;an absolute waiver of all civil liability in connection with the&#13;&#10;Program, unless a warranty or assumption of liability accompanies a&#13;&#10;copy of the Program in return for a fee.&#13;&#10;&#13;&#10;                     END OF TERMS AND CONDITIONS&#13;&#10;&#13;&#10;            How to Apply These Terms to Your New Programs&#13;&#10;&#13;&#10;  If you develop a new program, and you want it to be of the greatest&#13;&#10;possible use to the public, the best way to achieve this is to make it&#13;&#10;free software which everyone can redistribute and change under these terms.&#13;&#10;&#13;&#10;  To do so, attach the following notices to the program.  It is safest&#13;&#10;to attach them to the start of each source file to most effectively&#13;&#10;state the exclusion of warranty; and each file should have at least&#13;&#10;the &quot;copyright&quot; line and a pointer to where the full notice is found.&#13;&#10;&#13;&#10;    &lt;one line to give the program's name and a brief idea of what it does.&gt;&#13;&#10;    Copyright (C) &lt;year&gt;  &lt;name of author&gt;&#13;&#10;&#13;&#10;    This program is free software: you can redistribute it and/or modify&#13;&#10;    it under the terms of the GNU General Public License as published by&#13;&#10;    the Free Software Foundation, either version 3 of the License, or&#13;&#10;    (at your option) any later version.&#13;&#10;&#13;&#10;    This program is distributed in the hope that it will be useful,&#13;&#10;    but WITHOUT ANY WARRANTY; without even the implied warranty of&#13;&#10;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#13;&#10;    GNU General Public License for more details.&#13;&#10;&#13;&#10;    You should have received a copy of the GNU General Public License&#13;&#10;    along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.&#13;&#10;&#13;&#10;Also add information on how to contact you by electronic and paper mail.&#13;&#10;&#13;&#10;  If the program does terminal interaction, make it output a short&#13;&#10;notice like this when it starts in an interactive mode:&#13;&#10;&#13;&#10;    &lt;program&gt;  Copyright (C) &lt;year&gt;  &lt;name of author&gt;&#13;&#10;    This program comes with ABSOLUTELY NO WARRANTY; for details type &#96;show w'.&#13;&#10;    This is free software, and you are welcome to redistribute it&#13;&#10;    under certain conditions; type &#96;show c' for details.&#13;&#10;&#13;&#10;The hypothetical commands &#96;show w' and &#96;show c' should show the appropriate&#13;&#10;parts of the General Public License.  Of course, your program's commands&#13;&#10;might be different; for a GUI interface, you would use an &quot;about box&quot;.&#13;&#10;&#13;&#10;  You should also get your employer (if you work as a programmer) or school,&#13;&#10;if any, to sign a &quot;copyright disclaimer&quot; for the program, if necessary.&#13;&#10;For more information on this, and how to apply and follow the GNU GPL, see&#13;&#10;&lt;https://www.gnu.org/licenses/&gt;.&#13;&#10;&#13;&#10;  The GNU General Public License does not permit incorporating your program&#13;&#10;into proprietary programs.  If your program is a subroutine library, you&#13;&#10;may consider it more useful to permit linking proprietary applications with&#13;&#10;the library.  If this is what you want to do, use the GNU Lesser General&#13;&#10;Public License instead of this License.  But first, please read&#13;&#10;&lt;https://www.gnu.org/licenses/why-not-lgpl.html&gt;.&#13;&#10;--]]"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="c711830f6ff949058bc4145d58708ebe"
                       luaMethodValid="1"/>
            <luaMethod luaMethodName="BebasNeue_Font" luaMethodCode="--[[&#13;&#10;Copyright &#169; 2010 by Dharma Type.&#13;&#10;&#13;&#10;This Font Software is licensed under the SIL Open Font License, Version 1.1.&#13;&#10;This license is copied below, and is also available with a FAQ at:&#13;&#10;http://scripts.sil.org/OFL&#13;&#10;&#13;&#10;&#13;&#10;-----------------------------------------------------------&#13;&#10;SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007&#13;&#10;-----------------------------------------------------------&#13;&#10;&#13;&#10;PREAMBLE&#13;&#10;The goals of the Open Font License (OFL) are to stimulate worldwide&#13;&#10;development of collaborative font projects, to support the font creation&#13;&#10;efforts of academic and linguistic communities, and to provide a free and&#13;&#10;open framework in which fonts may be shared and improved in partnership&#13;&#10;with others.&#13;&#10;&#13;&#10;The OFL allows the licensed fonts to be used, studied, modified and&#13;&#10;redistributed freely as long as they are not sold by themselves. The&#13;&#10;fonts, including any derivative works, can be bundled, embedded, &#13;&#10;redistributed and/or sold with any software provided that any reserved&#13;&#10;names are not used by derivative works. The fonts and derivatives,&#13;&#10;however, cannot be released under any other type of license. The&#13;&#10;requirement for fonts to remain under this license does not apply&#13;&#10;to any document created using the fonts or their derivatives.&#13;&#10;&#13;&#10;DEFINITIONS&#13;&#10;&quot;Font Software&quot; refers to the set of files released by the Copyright&#13;&#10;Holder(s) under this license and clearly marked as such. This may&#13;&#10;include source files, build scripts and documentation.&#13;&#10;&#13;&#10;&quot;Reserved Font Name&quot; refers to any names specified as such after the&#13;&#10;copyright statement(s).&#13;&#10;&#13;&#10;&quot;Original Version&quot; refers to the collection of Font Software components as&#13;&#10;distributed by the Copyright Holder(s).&#13;&#10;&#13;&#10;&quot;Modified Version&quot; refers to any derivative made by adding to, deleting,&#13;&#10;or substituting -- in part or in whole -- any of the components of the&#13;&#10;Original Version, by changing formats or by porting the Font Software to a&#13;&#10;new environment.&#13;&#10;&#13;&#10;&quot;Author&quot; refers to any designer, engineer, programmer, technical&#13;&#10;writer or other person who contributed to the Font Software.&#13;&#10;&#13;&#10;PERMISSION &amp; CONDITIONS&#13;&#10;Permission is hereby granted, free of charge, to any person obtaining&#13;&#10;a copy of the Font Software, to use, study, copy, merge, embed, modify,&#13;&#10;redistribute, and sell modified and unmodified copies of the Font&#13;&#10;Software, subject to the following conditions:&#13;&#10;&#13;&#10;1) Neither the Font Software nor any of its individual components,&#13;&#10;in Original or Modified Versions, may be sold by itself.&#13;&#10;&#13;&#10;2) Original or Modified Versions of the Font Software may be bundled,&#13;&#10;redistributed and/or sold with any software, provided that each copy&#13;&#10;contains the above copyright notice and this license. These can be&#13;&#10;included either as stand-alone text files, human-readable headers or&#13;&#10;in the appropriate machine-readable metadata fields within text or&#13;&#10;binary files as long as those fields can be easily viewed by the user.&#13;&#10;&#13;&#10;3) No Modified Version of the Font Software may use the Reserved Font&#13;&#10;Name(s) unless explicit written permission is granted by the corresponding&#13;&#10;Copyright Holder. This restriction only applies to the primary font name as&#13;&#10;presented to the users.&#13;&#10;&#13;&#10;4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font&#13;&#10;Software shall not be used to promote, endorse or advertise any&#13;&#10;Modified Version, except to acknowledge the contribution(s) of the&#13;&#10;Copyright Holder(s) and the Author(s) or with their explicit written&#13;&#10;permission.&#13;&#10;&#13;&#10;5) The Font Software, modified or unmodified, in part or in whole,&#13;&#10;must be distributed entirely under this license, and must not be&#13;&#10;distributed under any other license. The requirement for fonts to&#13;&#10;remain under this license does not apply to any document created&#13;&#10;using the Font Software.&#13;&#10;&#13;&#10;TERMINATION&#13;&#10;This license becomes null and void if any of the above conditions are&#13;&#10;not met.&#13;&#10;&#13;&#10;DISCLAIMER&#13;&#10;THE FONT SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,&#13;&#10;EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF&#13;&#10;MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT&#13;&#10;OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE&#13;&#10;COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,&#13;&#10;INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL&#13;&#10;DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING&#13;&#10;FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM&#13;&#10;OTHER DEALINGS IN THE FONT SOFTWARE.&#13;&#10;&#13;&#10;--]]"
                       luaMethodLinkedProperty="" luaMethodSource="0" uuid="381763bc633b44998c5a7ef4f06142f6"
                       luaMethodValid="1"/>
          </luaMethodGroup>
          <luaMethod luaMethodName="Version" luaMethodCode="--[[&#13;&#10;&#13;&#10;&#9;VERSION 1.3.4 (15.04.2022)&#13;&#10;&#13;&#10;&#9;[F] Fixed error related to missing config.json file (thanks to user spiffo-smith)&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.3.3 (23.02.2022)&#13;&#10;&#13;&#10;&#9;[+] Added connected MIDI device information to the Info panel&#13;&#10;&#9;[+] Resetting related knob value by double-clicking on the sequencer area&#13;&#10;&#9;[*] Virtual Patch labels are now correctly named&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.3.0 (21.08.2021)&#13;&#10;&#13;&#10;&#9;[+] Internal MIDI Device dialog selection window is now accessible from the Settings page&#13;&#10;&#9;[+] Version checking on startup. If version differs, then the panel will delete the&#13;&#10;&#9;&#9;&quot;.delete_me_to_reload_resources&quot; file and will suggest to restart the panel&#13;&#10;&#13;&#10;&#9;[*] &quot;Emergency&quot; button now called by double click instead of mouse down event&#13;&#10;&#9;[*] &quot;Get file&quot; routines rewritten&#13;&#10;&#9;[*] Request LCD mode on startup&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.2.7 (15.08.2021)&#13;&#10;&#13;&#10;&#9;[+] Timbre randomizer&#13;&#10;&#13;&#10;&#9;[F] Arp Swing value interpretation fixed (-100~+100)&#13;&#10;&#9;[F] OSC 1 Control 2 now transmits the correct SysEx for DWGS Waveform&#13;&#10;&#13;&#10;&#9;[*] Code cleanup&#13;&#10;&#9;[*] Some color schemes tweaking&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.2.3 (08.08.2021)&#13;&#10;&#13;&#10;&#9;[+] Add some extra compatibility for reading dumps (some &quot;Hands-On&quot; MID dump was found and processed)&#13;&#10;&#13;&#10;&#9;[*] Further CC =&gt; SysEx controls transition. Helps to avoid problems with Dual / Split voice modes&#13;&#10;&#9;&#9;value interference,&#9;when both layers are set to the same non-global midi-channel&#13;&#10;&#9;&#9;Maybe it is a bad decision as sysex narrows down the automation capabilities (MS2K can barely more than 1 automation at a time)&#13;&#10;&#9;&#9;Time (or feedback) will tell&#13;&#10;&#13;&#10;&#9;[*] Looks like microKORG SysEx dumps are compatible too, quick test with no issues&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.2 (04.08.2021)&#13;&#10;&#13;&#10;&#9;[+] Program Play mode values are processing now. Maybe will be redone in the future&#13;&#10;&#9;[+] New &quot;Initialize program bank&quot; option&#13;&#10;&#13;&#10;&#9;[F] If save to disk operations cancelled, no unnecessary actions will be executed &#13;&#10;&#9;[F] Osc2 Semitone bounds fixed for synth &lt;=&gt; vocoder transitions&#13;&#10;&#13;&#10;&#9;[*] &quot;Rename program&quot; dialog will not allow to input more than 12 characters now&#13;&#10;&#9;[*] Further code cleanup, some methods were united during this process&#13;&#10;&#9;[*] Minor bugfixes&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.1 (02.08.2021)&#13;&#10;&#13;&#10;&#9;[+] Color scheme change implemented&#13;&#10;&#9;[+] &quot;Request data on program change&quot; button added.It will request current program from MS2000&#13;&#10;&#9;&#9;right after receiving the &quot;program change&quot; message from the synthesizer&#13;&#10;&#13;&#10;&#9;[F] No more random synthesizer config rewriting on startup&#13;&#10;&#9;[F] Fixed annoying behaviour of the Settings button on startup. Still have no 100% sure that it will always work&#13;&#10;&#13;&#10;&#9;[-] &quot;Request synthesizer settings on startup&quot; button was removed from settings.&#13;&#10;&#9;&#9;This operation will run by default&#13;&#10;&#13;&#10;&#9;[*] Ctrlr panel menu is hidden for restricted instances now.&#13;&#10;&#9;&#9;It still accessible with &quot;emergency&quot; [+] button on the settings page&#13;&#10;&#9;[*] Rearranged settings page&#13;&#10;&#9;[*] More typos fixed&#13;&#10;&#9;[*] Timers code rewritten&#13;&#10;&#9;[*] Redone timbre selection operations a bit&#13;&#10;&#9;[*] Code cleanup, data flow corrected to avoid excessive data sending and looping&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.0 Release (31.07.2021)&#13;&#10;&#13;&#10;&#9;[+] Now it is possible to control preset and bank selection on the hardware (&quot;HARDWARE&quot; selector)&#13;&#10;&#9;[+] Quick select program on the synthesizer by right clicking the &quot;HARDWARE&quot; selector&#13;&#10;&#9;[+] Change sequencer values by dragging mouse on the graphic&#13;&#10;&#9;[+] &quot;Request settings from synthesizer&quot; button in the panel settings menu&#13;&#10;&#13;&#10;&#9;[F] Vocoder =&gt; Synth (and vice versa) transition when selecting a preset now works correctly&#13;&#10;&#13;&#10;&#9;[*] Panel settings now stored in an external file (&quot;[APPDATA]/ReMS2000/config.json&quot;), so any instance of this panel will use them&#13;&#10;&#9;[*] Altered timbre assign behaviour - &quot;Detune&quot; knob is only available when &quot;Unison&quot; timbre mode is selected&#13;&#10;&#9;[*] Using midi channel data when parsing and sending the &quot;program change&quot; messages&#13;&#10;&#9;[*] Some global =&gt; local vars improper usage eliminated&#13;&#10;&#9;[*] Slight UI Tweaking&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.0 beta 3 (30.07.2021)&#13;&#10;&#13;&#10;&#9;[+] *.prg format for single program is now supported&#13;&#10;&#9;[+] New Copy / Paste function for Timbre / Sequence data implemented&#13;&#10;&#13;&#10;&#9;[F] Fixed some byte adress dispositions in the buffers (OSC1 Waveform, Filter, LFO1, LFO2)&#13;&#10;&#9;[F] Fixed wrong preset naming after state recovery&#13;&#10;&#9;[F] Sync buffers before saving state&#13;&#10;&#9;[F] Fixed turning on the SEQ1 lamp on startup&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.0 beta 2 (28.07.2021)&#13;&#10;&#13;&#10;&#9;[+] VOCODER mode is now supported&#13;&#10;&#9;[+] Option for requesting synth setup on startup&#13;&#10;&#13;&#10;&#9;[F] Fixed some value / boundaries issues&#13;&#10;&#13;&#10;&#9;[*] Virtual patch rewritten for using sysex instead of MultiMessages&#13;&#10;&#9;[*] Bunch of rewritten code (oooh, that vocoder...)&#13;&#10;&#9;[*] New LCD font for better match&#13;&#10;&#9;[*] Slightly rearranged GUI&#13;&#10;&#9;[*] Fixed some typos in the comments&#13;&#10;&#9;[*] Bugfixes&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#9;VERSION 1.0 beta 1 (25.07.2021)&#13;&#10;&#9;&#13;&#10;&#9;- Initial release&#13;&#10;&#13;&#10;--]]"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="0d8189a3b40f49bd964d77196b4811e9"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="initMethods" uuid="0f6b520ba2404aef959dd0523cc14261">
          <luaMethod luaMethodName="initPatchRawData" luaMethodCode="function initPatchRawData()&#10;&#9;&#13;&#10;&#9;-- Raw patch data which should be converted to make it usable&#13;&#10;&#9;-- Mostly for testing and reference purposes&#13;&#10;&#13;&#10;&#9;-- INIT Patch&#13;&#10;&#9;return {&#13;&#10;&#9;-- SysEx Header&#13;&#10;&#9;0xF0, 0x42, 0x30, 0x58, 0x40, &#13;&#10; &#9;-- Program data begin&#13;&#10;&#9;--MS    B1    B2    B3    B4    B5    B6    B7   &#13;&#10;&#9;0x00, 0x49, 0x4E, 0x49, 0x54, 0x20, 0x50, 0x72, &#13;&#10;&#9;0x00, 0x6F, 0x67, 0x72, 0x61, 0x6D, 0x00, 0x0B, &#13;&#10;&#9;0x00, 0x00, 0x00, 0x40, 0x00, 0x3C, 0x00, 0x28, &#13;&#10;&#9;0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x14, 0x40, &#13;&#10;&#9;0x00, 0x0F, 0x40, 0x00, 0x78, 0x00, 0x00, 0x50, &#13;&#10;&#9;0x08, 0x01, 0x00, 0x00, 0x7F, 0x70, 0x0A, 0x40, &#13;&#10;&#9;0x00, 0x42, 0x40, 0x45, 0x00, 0x00, 0x00, 0x00,  &#13;&#10;&#9;0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x7F, 0x00, &#13;&#10;&#9;0x00, 0x00, 0x01, 0x7F, 0x0A, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x7F, 0x40, 0x00, 0x40, 0x40, 0x00, 0x40, &#13;&#10;&#9;0x00, 0x7F, 0x00, 0x00, 0x40, 0x7F, 0x00, 0x02, &#13;&#10;&#9;0x00, 0x0A, 0x03, 0x02, 0x46, 0x0C, 0x02, 0x40, &#13;&#10;&#9;0x00, 0x03, 0x40, 0x42, 0x40, 0x43, 0x40, 0x43, &#13;&#10;&#9;0x01, 0x71, 0x01, 0x01, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x01, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x00, 0x01, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7F, &#13;&#10;&#9;0x00, 0x70, 0x0A, 0x40, 0x42, 0x40, 0x45, 0x00, &#13;&#10;&#9;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x00, 0x7F, 0x00, 0x00, 0x01, 0x7F, 0x0A, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x7F, 0x40, 0x00, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x00, 0x40, 0x7F, 0x00, 0x00, 0x40, &#13;&#10;&#9;0x00, 0x7F, 0x00, 0x02, 0x0A, 0x03, 0x02, 0x46, &#13;&#10;&#9;0x00, 0x0C, 0x02, 0x40, 0x03, 0x40, 0x42, 0x40, &#13;&#10;&#9;0x08, 0x43, 0x40, 0x43, 0x71, 0x01, 0x01, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x00, 0x01, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x01, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x00, 0x40, 0x40, &#13;&#10;&#9;-- Program data end&#13;&#10;&#9;0xF7&#13;&#10;&#9;}&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="a8b3fc96314e4ba7b064830bec173fc3"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="initPatchData" luaMethodCode="function initPatchData()&#10;&#9;&#13;&#10;&#9;-- This data is good to work with, but it should&#13;&#10;&#9;-- be converted before sending to the synth&#13;&#10;&#13;&#10;&#9;-- INIT Patch&#13;&#10;&#9;return {&#13;&#10;&#9;-- SysEx Header&#13;&#10;&#9;0xF0, 0x42, 0x30, 0x58, 0x40,&#13;&#10;&#9;-- Program data begin&#13;&#10;&#9;--B1    B2    B3    B4    B5    B6    B7 &#13;&#10;&#9;0x49, 0x4E, 0x49, 0x54, 0x20, 0x50, 0x72,&#13;&#10;&#9;0x6F, 0x67, 0x72, 0x61, 0x6D, 0x00, 0x00,&#13;&#10;&#9;0x00, 0x00, 0x40, 0x00, 0x3C, 0x05, 0x28,&#13;&#10;&#9;0x00, 0x00, 0x14, 0x00, 0x00, 0x14, 0x40,&#13;&#10;&#9;0x0F, 0x40, 0x00, 0x78, 0x00, 0x00, 0x50,&#13;&#10;&#9;0x01, 0x00, 0x00, 0xFF, 0x70, 0x0A, 0x40,&#13;&#10;&#9;0x42, 0x40, 0x45, 0x00, 0x00, 0x00, 0x00,&#13;&#10;&#9;0x00, 0x00, 0x40, 0x40, 0x00, 0x7F, 0x00,&#13;&#10;&#9;0x00, 0x01, 0x7F, 0x14, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x7F, 0x40, 0x00, 0x40, 0x40, 0x00, 0x40,&#13;&#10;&#9;0x7F, 0x00, 0x00, 0x40, 0x7F, 0x00, 0x02,&#13;&#10;&#9;0x0A, 0x03, 0x02, 0x46, 0x0C, 0x02, 0x40,&#13;&#10;&#9;0x03, 0x40, 0x42, 0x40, 0x43, 0x40, 0x43,&#13;&#10;&#9;0xF1, 0x01, 0x01, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x01,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x00, 0x01, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xFF,&#13;&#10;&#9;0x70, 0x0A, 0x40, 0x42, 0x40, 0x45, 0x00,&#13;&#10;&#9;0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40,&#13;&#10;&#9;0x00, 0x7F, 0x00, 0x00, 0x01, 0x7F, 0x14,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x7F, 0x40, 0x00, 0x40,&#13;&#10;&#9;0x40, 0x00, 0x40, 0x7F, 0x00, 0x00, 0x40,&#13;&#10;&#9;0x7F, 0x00, 0x02, 0x0A, 0x03, 0x02, 0x46,&#13;&#10;&#9;0x0C, 0x02, 0x40, 0x03, 0x40, 0x42, 0x40,&#13;&#10;&#9;0x43, 0x40, 0x43, 0xF1, 0x01, 0x01, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x00, 0x01, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x01,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#13;&#10;&#9;0x40, 0x40, &#13;&#10;&#9;-- Program data end&#13;&#10;&#9;0xF7&#13;&#10;&#9;}&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="e7085bebb99f41318c5c316380a238e6"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="initPresetBank" luaMethodCode="function initPresetBank()&#10;&#9;&#13;&#10;&#9;local progBankStorage = {}&#13;&#10;&#9;local progBank = {}&#13;&#10;&#9;local i, j&#13;&#10;&#13;&#10;&#9;for i = 1, 8 do&#13;&#10;&#13;&#10;&#9;&#9;progBank = {}&#13;&#10;&#9;&#9;for j = 1, 16 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;table.insert(progBank, initPatchData())&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;table.insert(progBankStorage, progBank)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return progBankStorage&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="c0eda79798534850a0e32ff9a8a4d4c8"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="initVocoderBuffer" luaMethodCode="function initVocoderBuffer()&#10;&#13;&#10;&#9;-- Vocoder buffer init data&#13;&#10;&#9;return {&#13;&#10;&#9;0xFF, 0x70, 0x0A, 0x40, 0x42, 0x40, 0x45, &#13;&#10;&#9;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, &#13;&#10;&#9;0x00, 0x7F, 0x00, 0x00, 0x00, 0x64, 0x00, &#13;&#10;&#9;0x00, 0x40, 0x14, 0x02, 0x40, 0x1E, 0x7F, &#13;&#10;&#9;0x00, 0x00, 0x40, 0x40, 0x00, 0x40, 0x7F, &#13;&#10;&#9;0x00, 0x00, 0x40, 0x7F, 0x00, 0x02, 0x0A, &#13;&#10;&#9;0x03, 0x02, 0x46, 0x0C, 0x7F, 0x7F, 0x7F, &#13;&#10;&#9;0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, &#13;&#10;&#9;0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x40, &#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, &#13;&#10;&#9;0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, &#13;&#10;&#9;0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, &#13;&#10;&#9;0x00, 0x00, 0x00, 0x40, 0x00, 0x3C, 0x05, &#13;&#10;&#9;0x28, 0x00, 0x00, 0x14, 0x00, 0x00, 0x14, &#13;&#10;&#9;0x40, 0x0F, 0x40, 0x00, 0x78, 0x00, 0x00, &#13;&#10;&#9;0x50, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, &#13;&#10;&#9;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF&#13;&#10;&#9;}&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="9ca9a768542a4da084fd92f923f8f406"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="initSynthBuffer" luaMethodCode="function initSynthBuffer()&#10;&#9;&#13;&#10;&#9;-- Synth buffer init data&#13;&#10;&#9;return {&#13;&#10;&#9;0xFF, 0x70, 0x0A, 0x40, 0x42, 0x40, 0x45,&#10;&#9;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,&#10;&#9;0x40, 0x00, 0x7F, 0x00, 0x00, 0x01, 0x7F,&#10;&#9;0x14, 0x40, 0x40, 0x40, 0x7F, 0x40, 0x00,&#10;&#9;0x40, 0x40, 0x00, 0x40, 0x7F, 0x00, 0x00,&#10;&#9;0x40, 0x7F, 0x00, 0x02, 0x0A, 0x03, 0x02,&#10;&#9;0x46, 0x0C, 0x02, 0x40, 0x03, 0x40, 0x42,&#10;&#9;0x40, 0x43, 0x40, 0x43, 0xF1, 0x01, 0x01,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x00, 0x01, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00,&#10;&#9;0x01, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0xFF, 0x70, 0x0A, 0x40,&#10;&#9;0x42, 0x40, 0x45, 0x00, 0x00, 0x00, 0x00,&#10;&#9;0x00, 0x00, 0x40, 0x40, 0x00, 0x7F, 0x00,&#10;&#9;0x00, 0x01, 0x7F, 0x14, 0x40, 0x40, 0x40,&#10;&#9;0x7F, 0x40, 0x00, 0x40, 0x40, 0x00, 0x40,&#10;&#9;0x7F, 0x00, 0x00, 0x40, 0x7F, 0x00, 0x02,&#10;&#9;0x0A, 0x03, 0x02, 0x46, 0x0C, 0x02, 0x40,&#10;&#9;0x03, 0x40, 0x42, 0x40, 0x43, 0x40, 0x43,&#10;&#9;0xF1, 0x01, 0x01, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x01,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x00, 0x01, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,&#10;&#9;0x40, 0x40, 0x40, 0x40, 0x40, 0x40&#13;&#10;&#9;}&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="b3ab149ef54b4065b3e8167fcf2cd3c3"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="resetVocoderControls" luaMethodCode="function resetVocoderControls()&#10;&#13;&#10;&#9;local i&#13;&#10;&#13;&#10;&#9;for i = 1, 16 do&#13;&#10;&#9;&#9;modByName(string.format(&quot;knobSeq3Step%d&quot;, i)):setValue(0, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setModValue(&quot;knobSeqLastStep&quot;, 16)&#13;&#10;&#9;setModValue(&quot;cbSeqKnob1&quot;, 0)&#13;&#10;&#9;setModValue(&quot;cbSeqKnob2&quot;, 0)&#13;&#10;&#9;setModValue(&quot;cbSeqKnob3&quot;, 0)&#13;&#10;&#9;setModValue(&quot;cbSeqMotion1&quot;, 1)&#13;&#10;&#9;setModValue(&quot;cbSeqMotion1&quot;, 1)&#13;&#10;&#9;setModValue(&quot;cbSeqMotion1&quot;, 1)&#13;&#10;&#9;setModValue(&quot;cbSeqType&quot;, 0)&#13;&#10;&#9;setModValue(&quot;cbSeqRunMode&quot;, 1)&#13;&#10;&#9;setModValue(&quot;cbSeqKeySync&quot;, 1)&#13;&#10;&#9;setModValue(&quot;cbSeqResolution&quot;, 3)&#13;&#10;&#9;setModValue(&quot;btnSeqOnOff&quot;, 0)&#13;&#10;&#9;setModValue(&quot;cbArpTarget&quot;, 2)&#13;&#10;&#9;setModValue(&quot;cbPatchDestination1&quot;, 0)&#13;&#10;&#9;setModValue(&quot;cbPatchDestination2&quot;, 0)&#13;&#10;&#9;setModValue(&quot;cbPatchDestination3&quot;, 4)&#13;&#10;&#9;setModValue(&quot;cbPatchDestination4&quot;, 4)&#13;&#10;&#9;setModValue(&quot;cbPatchSource2&quot;, 3)&#13;&#10;&#9;setModValue(&quot;cbPatchSource2&quot;, 2)&#13;&#10;&#9;setModValue(&quot;cbPatchSource2&quot;, 3)&#13;&#10;&#9;setModValue(&quot;knobPatch2Amount&quot;, 0)&#13;&#10;&#9;setModValue(&quot;knobPatch3Amount&quot;, 0)&#13;&#10;&#9;setModValue(&quot;knobPatch4Amount&quot;, 0)&#13;&#10;&#9;setModValue(&quot;knobFilterEG1Int&quot;, 0)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="7b5d5e219198483cb709f176564e3b83"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="randomizeProgramData" luaMethodCode="function randomizeProgramData()&#13;&#10;&#13;&#10;&#9;-- Program randomization&#13;&#10;&#13;&#10;&#9;if not confirmDialog(&quot;Warning!&quot;, &quot;This will erase current timbre in the panel buffer. Proceed?&quot;) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Set random seed (thanks to Poseemo for this advice)&#13;&#10;&#9;math.randomseed(Time.getMillisecondCounterHiRes())&#13;&#10;&#13;&#10;&#9;local i, j&#13;&#10;&#9;local ctrlName&#13;&#10;&#13;&#10;&#9;-- Voice values are skipped&#13;&#10;&#13;&#10;&#9;-- Combos&#13;&#10;&#9;setModValueCheck(&quot;cbTimbreAssign&quot;, rndValueMan(0, 2))&#13;&#10;&#9;setModValueCheck(&quot;cbTimbreTrigger&quot;, rndValueMan(0, 1))&#13;&#10;    setModValueCheck(&quot;cbDelayType&quot;, rndValueMan(0, 2))&#13;&#10;    setModValueCheck(&quot;cbModType&quot;, rndValueMan(0, 2))&#13;&#10;    setModValueCheck(&quot;cbLFO1KeySync&quot;, rndValueMan(0, 2))&#13;&#10;    setModValueCheck(&quot;cbLFO2KeySync&quot;, rndValueMan(0, 2))&#13;&#10;    setModValueCheck(&quot;cbLFO1SyncNote&quot;, rndValueMan(0, 14))&#13;&#10;    setModValueCheck(&quot;cbLFO2SyncNote&quot;, rndValueMan(0, 14))&#13;&#10;    setModValueCheck(&quot;cbPatchSource1&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbPatchSource2&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbPatchSource3&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbPatchSource4&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbPatchDestination1&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbPatchDestination2&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbPatchDestination3&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbPatchDestination4&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbPatchDestination4&quot;, rndValueMan(0, 7))&#13;&#10;    setModValueCheck(&quot;cbSeqType&quot;, rndValueMan(0, 3))&#13;&#10;    setModValueCheck(&quot;cbSeqRunMode&quot;, rndValueMan(0, 1))&#13;&#10;    setModValueCheck(&quot;cbSeqKeySync&quot;, rndValueMan(0, 2))&#13;&#10;    setModValueCheck(&quot;cbSeqResolution&quot;, rndValueMan(0, 15))&#13;&#10;    setModValueCheck(&quot;cbSeqKnob1&quot;, rndValueMan(0, 30))&#13;&#10;    setModValueCheck(&quot;cbSeqKnob2&quot;, rndValueMan(0, 30))&#13;&#10;    setModValueCheck(&quot;cbSeqKnob3&quot;, rndValueMan(0, 30))&#13;&#10;    setModValueCheck(&quot;cbSeqMotion1&quot;, rndValueMan(0, 1))&#13;&#10;    setModValueCheck(&quot;cbSeqMotion2&quot;, rndValueMan(0, 1))&#13;&#10;    setModValueCheck(&quot;cbSeqMotion3&quot;, rndValueMan(0, 1))&#13;&#10;    setModValueCheck(&quot;cbArpResolution&quot;, rndValueMan(0, 5))&#13;&#10;    setModValueCheck(&quot;cbArpRange&quot;, rndValueMan(0, 3))&#13;&#10;    setModValueCheck(&quot;cbArpType&quot;, rndValueMan(0, 5))&#13;&#10;&#13;&#10;&#9;-- Virtual controls&#13;&#10;&#9;setOsc1WaveformByValue(rndValueMan(0, 6), true)&#13;&#10;&#9;setLFO1TypeByValue(rndValueMan(0, 3), true)&#13;&#10;&#9;setLFO2TypeByValue(rndValueMan(0, 3), true)&#13;&#10;&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;setOsc2WaveformByValue(rndValueMan(0, 2), true)&#13;&#10;&#9;&#9;processOscModData(rndValueMan(0, 3), true)&#13;&#10;&#13;&#10;&#9;&#9;-- Change Cutoff max value for HP Filter to avoid barely heard sound&#13;&#10;&#9;&#9;j = rndValueMan(0, 3)&#13;&#10;&#9;&#9;setFilterTypeByValue(j, true)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;j = 0&#13;&#10;&#9;&#9;setFilterTypeByValue(rndValueMan(0, 4), true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Buttons&#13;&#10;&#9;setModValueCheck(&quot;btnEG1Reset&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnEG2Reset&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnAmpEG2Gate&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnAmpDistortion&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnLFO1TempoSync&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnLFO2TempoSync&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnSeqOnOff&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnDelayTempoSync&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnArpOnOff&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnArpLatch&quot;, rndValueMan(0, 1))&#13;&#10;&#9;setModValueCheck(&quot;btnArpKeySync&quot;, rndValueMan(0, 1))&#13;&#10;&#13;&#10;&#9;-- Knobs&#13;&#10;&#9;setModValueCheck(&quot;knobOsc1Control1&quot;, rndValue(&quot;knobOsc1Control1&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobOsc1Control2&quot;, rndValue(&quot;knobOsc1Control2&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobOsc2Semitone&quot;, rndValue(&quot;knobOsc2Semitone&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobOsc2Tune&quot;, rndValue(&quot;knobOsc2Tune&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobMixerNoise&quot;, rndValue(&quot;knobMixerNoise&quot;) * 0.5)&#13;&#10;&#9;setModValueCheck(&quot;knobMixerOsc2&quot;, rndValueMan(45, 127))&#13;&#10;&#9;setModValueCheck(&quot;knobMixerOsc1&quot;, rndValueMan(45, 127))&#13;&#10;&#13;&#10;&#9;if (sharedValues.timbreMode == tmSynth) and (j == 3) then&#13;&#10;&#9;&#9;setModValueCheck(&quot;knobFilterCutoff&quot;, rndValueMan(0, 40))&#13;&#10;&#9;else&#13;&#10;&#9;&#9;setModValueCheck(&quot;knobFilterCutoff&quot;, rndValueMan(30, 127))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setModValueCheck(&quot;knobFilterResonance&quot;, rndValue(&quot;knobFilterResonance&quot;) * 0.3)&#13;&#10;&#9;setModValueCheck(&quot;knobFilterEG1Int&quot;, rndValue(&quot;knobFilterEG1Int&quot;) * 0.4)&#13;&#10;&#9;setModValueCheck(&quot;knobFilterKbdTrk&quot;, rndValue(&quot;knobFilterKbdTrk&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobFilterVeloSens&quot;, rndValue(&quot;knobFilterVeloSens&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobTimbreTranspose&quot;, rndValue(&quot;knobTimbreTranspose&quot;) * 0.2)&#13;&#10;&#9;setModValueCheck(&quot;knobTimbreTune&quot;, rndValue(&quot;knobTimbreTune&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobTimbreBendRange&quot;, rndValue(&quot;knobTimbreBendRange&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobTimbreVibrato&quot;, rndValue(&quot;knobTimbreVibrato&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobTimbreDetune&quot;, rndValue(&quot;knobTimbreDetune&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobTimbrePorta&quot;, rndValue(&quot;knobTimbrePorta&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobAmpLevel&quot;, rndValueMan(110, 127))&#13;&#10;&#9;setModValueCheck(&quot;knobAmpPan&quot;, rndValue(&quot;knobAmpPan&quot;) * 0.4)&#13;&#10;&#9;setModValueCheck(&quot;knobAmpKeyTrack&quot;, rndValue(&quot;knobAmpKeyTrack&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobAmpVeloSens&quot;, rndValue(&quot;knobAmpVeloSens&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobDelayTime&quot;, rndValue(&quot;knobDelayTime&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobDelayFeedback&quot;, rndValue(&quot;knobDelayFeedback&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobDelayDepth&quot;, rndValue(&quot;knobDelayDepth&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobDelaySpeed&quot;, rndValue(&quot;knobDelaySpeed&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEQLowFreq&quot;, rndValue(&quot;knobEQLowFreq&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEQLowGain&quot;, rndValueMan(-4, 12))&#13;&#10;&#9;setModValueCheck(&quot;knobEQHighFreq&quot;, rndValue(&quot;knobEQHighFreq&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEQHighGain&quot;, rndValueMan(-4, 12))&#13;&#10;&#9;setModValueCheck(&quot;knobLFO1Frequency&quot;, rndValue(&quot;knobLFO1Frequency&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobLFO2Frequency&quot;, rndValue(&quot;knobLFO2Frequency&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobSeqLastStep&quot;, rndValue(&quot;knobSeqLastStep&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEG1Attack&quot;, rndValue(&quot;knobEG1Attack&quot;) * 0.3)&#13;&#10;&#9;setModValueCheck(&quot;knobEG2Attack&quot;, rndValue(&quot;knobEG2Attack&quot;) * 0.3)&#13;&#10;&#9;setModValueCheck(&quot;knobEG1Decay&quot;, rndValue(&quot;knobEG1Decay&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEG2Decay&quot;, rndValue(&quot;knobEG2Decay&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEG1Sustain&quot;, rndValue(&quot;knobEG1Sustain&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEG2Sustain&quot;, rndValue(&quot;knobEG2Sustain&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEG1Release&quot;, rndValue(&quot;knobEG1Release&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobEG2Release&quot;, rndValue(&quot;knobEG2Release&quot;))&#13;&#10;&#9;setModValueCheck(&quot;knobPatch1Amount&quot;, rndValue(&quot;knobPatch1Amount&quot;) * 0.5)&#13;&#10;&#9;setModValueCheck(&quot;knobPatch2Amount&quot;, rndValue(&quot;knobPatch2Amount&quot;) * 0.5)&#13;&#10;&#9;setModValueCheck(&quot;knobPatch3Amount&quot;, rndValue(&quot;knobPatch3Amount&quot;) * 0.5)&#13;&#10;&#9;setModValueCheck(&quot;knobPatch4Amount&quot;, rndValue(&quot;knobPatch4Amount&quot;) * 0.5)&#13;&#10;&#9;setModValueCheck(&quot;knobArpGate&quot;, rndValueMan(33, 127))&#13;&#10;&#9;setModValueCheck(&quot;knobArpSwing&quot;, rndValue(&quot;knobArpSwing&quot;) * 0.8)&#13;&#10;&#13;&#10;&#9;-- Sequence steps&#13;&#10;&#9;for i = 1, 3 do&#13;&#10;&#9;&#9;for j = 1, 16 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;ctrlName = string.format(&quot;knobSeq%dStep%d&quot;, i, j)&#13;&#10;&#9;&#9;&#9;setModValueCheck(ctrlName, rndValue(ctrlName))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="d8a2af892fc84656a8dc54c502d3ab1a"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="presetMethods" uuid="473fd136882244a5baf677b6899ad750">
          <luaMethod luaMethodName="getPresetNameByID" luaMethodCode="function getPresetNameByID(bankNumber, presetNumber)&#10;&#9;&#13;&#10;&#9;local i&#13;&#10;&#9;local bytesSkip = DATA_PREAMBLE_BYTES + 1&#13;&#10;&#9;local pName = &quot;&quot;&#13;&#10;&#13;&#10;&#9;for i = bytesSkip, bytesSkip + 11 do&#13;&#10;&#9;&#9;pName = pName .. string.char(presetBank[bankNumber][presetNumber][i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return pName&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="4c293ac1fe294bd882d3e63174913ab5"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="getPresetNameFromBuffer" luaMethodCode="function getPresetNameFromBuffer()&#10;&#9;&#13;&#10;&#9;local i&#13;&#10;&#9;local bytesSkip = DATA_PREAMBLE_BYTES + 1&#13;&#10;&#9;local pName = &quot;&quot;&#13;&#10;&#13;&#10;&#9;for i = bytesSkip, bytesSkip + 11 do&#13;&#10;&#9;&#9;pName = pName .. string.char(dataBuffer[i])&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return pName&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="0d564b256872494bbe2f551621a93ed1"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="displayProgramName" luaMethodCode="function displayProgramName(programName, bank, preset)&#10;&#9;&#13;&#10;&#9;local prefix&#13;&#10;&#13;&#10;&#9;if (bank == nil) or (preset == nil) then&#13;&#10;&#9;&#9;sharedValues.saveToRamEnabled = 0&#13;&#10;&#9;&#9;prefix = &quot;Buf:&quot;&#13;&#10;&#9;else&#13;&#10;&#9;&#9;sharedValues.saveToRamEnabled = 1&#13;&#10;&#9;&#9;prefix = string.format(&quot;%s%.2d:&quot;, bankIDToName(bank), preset)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;getComp(&quot;lblScreenStrOne&quot;):setText(prefix .. programName)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="f7ac541867024c0d890d2835937245ec"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="chosenPresetToBuffer" luaMethodCode="function chosenPresetToBuffer(rawNumber, muteOutput)&#13;&#10;&#13;&#10;&#9;local rawN = rawNumber&#13;&#10;&#13;&#10;&#9;-- Save preset routines use bigger IDs&#13;&#10;&#9;if rawN &gt; 1000 then&#13;&#10;&#9;&#9;rawN = rawN - 1000&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Select timbre one&#13;&#10;&#9;selectTimbreByValue(0, false, true)&#13;&#10;&#13;&#10;&#9;local bank = math.floor(rawN / 100)&#13;&#10;&#9;local preset = rawN - (bank * 100)&#13;&#10;&#13;&#10;&#9;dataBuffer = copyTable(presetBank[bank][preset])&#13;&#10;&#13;&#10;&#9;sharedValues.selectedBank = bank&#13;&#10;&#9;sharedValues.selectedPreset = preset&#13;&#10;&#13;&#10;&#9;applyProgramData(dataBuffer, bank, preset, muteOutput)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="eaff7bc453954828881a73a755ac4194"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="initBufferWithInitPatch" luaMethodCode="function initBufferWithInitPatch()&#13;&#10;&#10;&#9;dataBuffer = initPatchData()&#13;&#10;&#9;applyProgramData(dataBuffer, nil, nil, false)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="a53e1e3e19b843748b876407e3623882"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cyclePresets" luaMethodCode="function cyclePresets(mod, value, source)&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local cycleDirection = getModPropN(mod, &quot;modulatorCustomIndex&quot;)&#13;&#10;&#13;&#10;&#9;-- Choose, where selection must happen&#13;&#10;&#9;if panelSettings.selectorsSource == pbsPanel then&#13;&#10;&#13;&#10;&#9;&#9;if cycleDirection == 1 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;sharedValues.selectedPreset = sharedValues.selectedPreset + 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.selectedPreset &gt; 16 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;cycleBankValues(true, pbsPanel)&#13;&#10;&#9;&#9;&#9;&#9;sharedValues.selectedPreset = 1&#13;&#10;&#9;&#9;&#9;end&#13;&#10; &#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;sharedValues.selectedPreset = sharedValues.selectedPreset - 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.selectedPreset &lt; 1 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;cycleBankValues(false, pbsPanel)&#13;&#10;&#9;&#9;&#9;&#9;sharedValues.selectedPreset = 16&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;chosenPresetToBuffer((sharedValues.selectedBank * 100) + sharedValues.selectedPreset, false)&#13;&#10;&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;if cycleDirection == 1 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;sharedValues.synthPreset = sharedValues.synthPreset + 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.synthPreset &gt; 15 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;cycleBankValues(true, pbsSynth)&#13;&#10;&#9;&#9;&#9;&#9;sharedValues.synthPreset = 0&#13;&#10;&#9;&#9;&#9;end&#13;&#10; &#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;sharedValues.synthPreset = sharedValues.synthPreset - 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.synthPreset &lt; 0 then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;cycleBankValues(false, pbsSynth)&#13;&#10;&#9;&#9;&#9;&#9;sharedValues.synthPreset = 15&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- Send calculated preset number to MS2000&#13;&#10;&#9;&#9;selectPresetOnSynth()&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="7743d018bb5741d5a085d4cd1ee75de5"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cycleBanks" luaMethodCode="function cycleBanks(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local cycleDirection = getModPropN(mod, &quot;modulatorCustomIndex&quot;)&#13;&#10;&#13;&#10;&#9;-- Choose, where selection must happen&#13;&#10;&#9;if panelSettings.selectorsSource == pbsPanel then&#13;&#10;&#13;&#10;&#9;&#9;if cycleDirection == 1 then&#13;&#10;&#9;&#9;&#9;cycleBankValues(true, pbsPanel)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;cycleBankValues(false, pbsPanel)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;chosenPresetToBuffer((sharedValues.selectedBank * 100) + sharedValues.selectedPreset, false)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;if cycleDirection == 1 then&#13;&#10;&#9;&#9;&#9;cycleBankValues(true, pbsSynth)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;cycleBankValues(false, pbsSynth)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;selectPresetOnSynth()&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="182230e416424961af04a2c4ea19c59e"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cycleBankValues" luaMethodCode="function cycleBankValues(increase, selectionDest)&#10;&#13;&#10;&#9;if selectionDest == pbsPanel then&#13;&#10;&#13;&#10;&#9;&#9;if increase then&#13;&#10;&#9;&#9;&#9;sharedValues.selectedBank = sharedValues.selectedBank + 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.selectedBank &gt; 8 then&#13;&#10;&#9;&#9;&#9;&#9;sharedValues.selectedBank = 1&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;sharedValues.selectedBank = sharedValues.selectedBank - 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.selectedBank &lt; 1 then&#13;&#10;&#9;&#9;&#9;&#9;sharedValues.selectedBank = 8&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;if increase then&#13;&#10;&#9;&#9;&#9;sharedValues.synthBank = sharedValues.synthBank + 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.synthBank &gt; 7 then&#13;&#10;&#9;&#9;&#9;&#9;sharedValues.synthBank = 0&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;sharedValues.synthBank = sharedValues.synthBank - 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;if sharedValues.synthBank &lt; 0 then&#13;&#10;&#9;&#9;&#9;&#9;sharedValues.synthBank = 7&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="4db9173b39ed4b5dbad532bc1f923ae5"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="renameProgram" luaMethodCode="function renameProgram()&#10;&#9;&#13;&#10;&#9;-- Construct dialog window&#13;&#10;&#9;local modalWindow = AlertWindow(&quot;Info&quot;, &quot;Input new program name:&quot;, AlertWindow.InfoIcon)&#13;&#10;&#13;&#10;&#9;modalWindow:addButton(&quot;OK&quot;, 1, KeyPress(KeyPress.returnKey), KeyPress())&#13;&#10;&#9;modalWindow:addButton(&quot;Cancel&quot;, 0, KeyPress(KeyPress.escapeKey), KeyPress())&#13;&#10;&#9;modalWindow:addTextEditor(&quot;ProgName&quot;, getPresetNameByID(sharedValues.selectedBank, sharedValues.selectedPreset), &quot;12 characters max&quot;, false)&#13;&#10;&#13;&#10;&#9;modalWindow:getTextEditor(&quot;ProgName&quot;):setInputRestrictions(12, &quot;&quot;)&#13;&#10;&#9;modalWindow:setModalHandler(applyNewProgramName)&#13;&#10;&#13;&#10;&#9;modalWindow:runModalLoop()&#10;end&#13;&#10;&#13;&#10;function applyNewProgramName(result, window)&#10;&#9;&#13;&#10;&#9;window:setVisible (false)&#13;&#10;&#13;&#10;&#9;if result == 1 and window:getTextEditor(&quot;ProgName&quot;) ~= nil then&#13;&#10;&#13;&#10;&#9;&#9;local i&#13;&#10;&#9;&#9;local bank, preset = sharedValues.selectedBank, sharedValues.selectedPreset&#13;&#10;&#9;&#9;local bytesSkip = DATA_PREAMBLE_BYTES + 1&#13;&#10;&#9;&#9;local bs = bytesSkip - 1&#13;&#10;&#9;&#9;local cByte&#13;&#10;&#9;&#9;local newName = window:getTextEditor(&quot;ProgName&quot;):getText()&#13;&#10;&#13;&#10;&#9;&#9;for i = bytesSkip, bytesSkip + 11 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;cByte = string.byte(string.sub(newName, i - bs, i - bs))&#13;&#10;&#13;&#10;&#9;&#9;&#9;if cByte ~= nil then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;presetBank[bank][preset][i] = cByte&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;-- Make sure current buffer will contain the same name&#13;&#10;&#9;&#9;&#9;&#9;dataBuffer[i] = cByte&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;presetBank[bank][preset][i] = string.byte(&quot; &quot;)&#13;&#10;&#9;&#9;&#9;&#9;dataBuffer[i] = string.byte(&quot; &quot;)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;displayProgramName(getPresetNameByID(bank, preset), bank, preset)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="ac938e13554e477c9a9d270cb367ecbf"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="openSingleProgramFile" luaMethodCode="function openSingleProgramFile()&#10;&#9;&#13;&#10;&#9;-- File open dialog&#13;&#10;&#9;local bulkDump = openFileDialog(&quot;Select Korg MS2000 / microKORG program file&quot;, SUPPORTED_EXT_MASK_ALT)&#13;&#10;&#9;local dumpBytes = MemoryBlock()&#13;&#10;&#13;&#10;&#9;-- If file exists, then proceed&#13;&#10;&#9;if bulkDump ~= nil then&#13;&#10;&#9;&#9;dumpBytes = MemoryBlock(bulkDump:getSize())&#13;&#10;&#9;&#9;bulkDump:loadFileAsData(dumpBytes)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local rawDumpBytesData = normalizeSysExDumpData(memBlockToTable(dumpBytes))&#13;&#10;&#13;&#10;&#9;-- If it's a microKORG file, then it's required to cut two extra bytes&#13;&#10;&#9;if #rawDumpBytesData == MKSINGLE_PROGRAM_SIZE then&#13;&#10;&#13;&#10;&#9;&#9;-- Check microKORG *.prg signature&#13;&#10;&#9;&#9;if (rawDumpBytesData[2] == 0x82) and (rawDumpBytesData[3] == 0x28) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;rawDumpBytesData = cutBytesFromDump(rawDumpBytesData, 2, 2)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (#rawDumpBytesData ~= SINGLE_PROGRAM_SIZE) then&#13;&#10;&#9;&#9;genAlertWindow(&quot;Warning&quot;, &quot;Wrong file size, operation cancelled&quot;)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;dataBuffer = midiToProgramData(rawDumpBytesData, DATA_PREAMBLE_BYTES)&#13;&#10;&#9;&#9;applyProgramData(dataBuffer, nil, nil, false)&#13;&#10;&#9;&#9;-- Congratulations! MS2000 program successfully imported!&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="3cc490d7e4b74589a8181dbcab0bd8b8"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="openProgramBankFile" luaMethodCode="function openProgramBankFile()&#10;&#13;&#10;&#9;-- File open dialog&#13;&#10;&#9;local bulkDump = openFileDialog(&quot;Select Korg MS2000 bulk dump file&quot;, SUPPORTED_EXT_MASK)&#13;&#10;&#9;local dumpBytes = MemoryBlock()&#13;&#10;&#13;&#10;&#9;-- If file exists, then proceed&#13;&#10;&#9;if bulkDump ~= nil then&#13;&#10;&#9;&#9;dumpBytes = MemoryBlock(bulkDump:getSize())&#13;&#10;&#9;&#9;bulkDump:loadFileAsData(dumpBytes)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local rawDumpBytesData = normalizeSysExDumpData(memBlockToTable(dumpBytes))&#13;&#10;&#9;local dumpType = checkBulkDumpSize(#rawDumpBytesData)&#13;&#10;&#13;&#10;&#9;if dumpType ~= dtInvalidSz then&#13;&#10;&#13;&#10;&#9;&#9;if dumpType == dtHandson then&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Check microKORG *.prg signature&#13;&#10;&#9;&#9;&#9;if (rawDumpBytesData[3] == 0xA4) and (rawDumpBytesData[4] == 0x0F) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;rawDumpBytesData = cutBytesFromDump(rawDumpBytesData, 2, 3)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;presetBank = slicePresets(midiToProgramData(rawDumpBytesData, DATA_PREAMBLE_BYTES))&#13;&#10;&#13;&#10;&#9;&#9;dataBuffer = copyTable(presetBank[1][1])&#13;&#10;&#13;&#10;&#9;&#9;chosenPresetToBuffer(101, false) -- 1 - bank, 01 - preset number&#13;&#10;&#9;&#9;-- Congratulations! MS2000 bulk dump successfully imported!&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;genAlertWindow(&quot;Warning&quot;, &quot;Wrong file size, operation cancelled&quot;)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="c350891b9cdb4302af48fb3f15e63c6b"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="saveSingleProgramFile" luaMethodCode="function saveSingleProgramFile()&#10;&#9;&#13;&#10;&#9;-- Default filename will be like current preset name&#13;&#10;&#9;local cPresName = getPresetNameFromBuffer()&#13;&#10;&#13;&#10;&#9;-- File to save&#13;&#10;&#9;local dumpFile = utils.saveFileWindow(&quot;Save current program to file..&quot;, File(removeSystemSymbols(cPresName)), &quot;*.syx&quot;, true)&#13;&#10;&#13;&#10;&#9;if not dumpFile:isValid() then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local programData&#13;&#10;&#13;&#10;&#9;-- Sync data before saving&#13;&#10;&#9;syncPanelWithBuffer()&#13;&#10;&#13;&#10;&#9;-- Merge vocoder data if necessary&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;programData = copyTable(dataBuffer)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;programData = getMergedTimbreVocoderData()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Writing data to the file&#13;&#10;&#9;dumpFile:replaceWithData(MemoryBlock(programToMIDIData(programData, DATA_PREAMBLE_BYTES)))&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="b1893fe2124246f7a38bd73fac874c25"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="saveProgramBankFile" luaMethodCode="function saveProgramBankFile()&#10;&#9;&#13;&#10;&#9;-- Default filename will be like current preset name&#13;&#10;&#9;local cPresName = &quot;ReMS2000 Bulk Dump &quot; .. os.date(&quot;%Y %m %d&quot;)&#13;&#10;&#13;&#10;&#9;-- File to save&#13;&#10;&#9;local dumpFile = utils.saveFileWindow(&quot;Save program bank to file..&quot;, File(removeSystemSymbols(cPresName)), &quot;*.syx&quot;, true)&#13;&#10;&#13;&#10;&#9;if not dumpFile:isValid() then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Writing data to the file&#13;&#10;&#9;dumpFile:replaceWithData(MemoryBlock(prepareBulkDump()))&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="2b6624915a5545d08b4a38f0b5836af7"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="saveProgramToPatchBank" luaMethodCode="function saveProgramToPatchBank(rawNumber)&#10;&#9;&#13;&#10;&#9;local bank = math.floor((rawNumber - 1000) / 100)&#13;&#10;&#9;local preset = rawNumber % 100&#13;&#10;&#9;local patchData&#13;&#10;&#13;&#10;&#9;syncPanelWithBuffer()&#13;&#10;&#13;&#10;&#9;-- Buffer ==&gt; presetBank[bank][preset]&#13;&#10;&#13;&#10;&#9;-- If timbre type is vocoder, we have to merge data first&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;presetBank[bank][preset] = copyTable(dataBuffer)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;presetBank[bank][preset] = getMergedTimbreVocoderData()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Run assertions by opening saved program from bank&#13;&#10;&#9;chosenPresetToBuffer(rawNumber, true)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1c0d99572e3847de8a57fa85e64341ed"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="selectPresetOnSynth" luaMethodCode="function selectPresetOnSynth()&#10;&#13;&#10;&#9;checkProgramModeEnabled()&#13;&#10;&#9;sendSysExMessage({0xC0 + getGlobalMidiChannel(true), (sharedValues.synthPreset) + (sharedValues.synthBank * 16)})&#13;&#10;&#13;&#10;&#9;if&#9;(panelSettings.reqProgOnChange == 1) then&#13;&#10;&#9;&#9;-- Data here must be delayed, because it takes a while for the synthesizer to process program change&#13;&#10;&#9;&#9;delayedProgramRequest()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;getComp(&quot;uiSynthSideSelector&quot;):repaint()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="67dc491e86844ed9ab6edc56abe4d972"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="sysexDumpsMethods" uuid="a4ea8bd3bb414379950596d42e687a1e">
          <luaMethod luaMethodName="slicePresets" luaMethodCode="function slicePresets(bulkDump)&#10;&#9;&#13;&#10;&#9;local i, j, c&#13;&#10;&#9;local startByte, cProg = 0, -1&#13;&#10;&#13;&#10;&#9;local bankData = {}&#13;&#10;&#9;local progBank = {}&#13;&#10;&#9;local currPatch = {}&#13;&#10;&#13;&#10;&#9;-- Ignore global data, maybe in the future...&#13;&#10;&#13;&#10;&#9;for i = 1, 8 do&#13;&#10;&#9;&#9;progBank = {}&#13;&#10;&#13;&#10;&#9;&#9;for j = 1, 16 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;currPatch = {0xF0, 0x42, 0x30, 0x58, 0x40}&#13;&#10;&#13;&#10;&#9;&#9;&#9;cProg = cProg + 1&#13;&#10;&#9;&#9;&#9;startByte = DATA_PREAMBLE_BYTES + (cProg * SINGLE_PROGRAM_INT_SIZE) + 1&#13;&#10;&#13;&#10;&#9;&#9;&#9;for c = 0, SINGLE_PROGRAM_INT_SIZE - 1 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;table.insert(currPatch, bulkDump[startByte + c])&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;table.insert(currPatch, 0xF7)&#13;&#10;&#9;&#9;&#9;table.insert(progBank, currPatch)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;table.insert(bankData, progBank)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return bankData&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="a33a7820796343cfaada7470aa36417b"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="sendBufferedProgram" luaMethodCode="function sendBufferedProgram(mod, value, source)&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;local programToSend&#13;&#10;&#13;&#10;&#9;syncPanelWithBuffer()&#13;&#10;&#13;&#10;&#9;-- If timbre type is vocoder, we have to merge data first&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;programToSend = copyTable(dataBuffer)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;programToSend = getMergedTimbreVocoderData()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Replace MIDI channel in the existing data&#13;&#10;&#9;programToSend[3] = getGlobalMidiChannel()&#13;&#10;&#13;&#10;&#9;sendSysExMessage(programToMIDIData(programToSend, DATA_PREAMBLE_BYTES))&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="76f200f8f6b84f2e948753efff482721"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="sendBufferedProgramNosync" luaMethodCode="function sendBufferedProgramNosync()&#10;&#13;&#10;&#9;local programToSend&#13;&#10;&#13;&#10;&#9;-- If timbre type is vocoder, we have to merge data first&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;programToSend = copyTable(dataBuffer)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;programToSend = getMergedTimbreVocoderData()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Replace MIDI channel in the existing data&#13;&#10;&#9;programToSend[3] = getGlobalMidiChannel()&#13;&#10;&#13;&#10;&#9;sendSysExMessage(programToMIDIData(programToSend, DATA_PREAMBLE_BYTES))&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="fbdb58ec5ee74aec8c97dce41f107f34"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="storeSingleProgram" luaMethodCode="function storeSingleProgram()&#10;&#13;&#10;&#9;-- MS2000 was caught sending wrong current program numbers somteimes (A01) for no reason&#13;&#10;&#9;-- Just make sure that between popup message appeared shown preset will not change&#13;&#10;&#9;local programNumber = sharedValues.synthProgram&#13;&#10;&#9;local midiCh = getGlobalMidiChannel()&#13;&#10;&#9;local progMessage&#13;&#10;&#13;&#10;&#9;-- Sync data before saving&#13;&#10;&#9;syncPanelWithBuffer()&#13;&#10;&#13;&#10;&#9;-- Merge vocoder data if necessary&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;progMessage = copyTable(dataBuffer)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;progMessage = getMergedTimbreVocoderData()&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;progMessage[3] = midiCh&#13;&#10;&#9;progMessage = programToMIDIData(progMessage, DATA_PREAMBLE_BYTES)&#13;&#10;&#13;&#10;&#9;-- Send message into buffer at first&#13;&#10;&#9;sendSysExMessage(progMessage)&#13;&#10;&#13;&#10;&#9;-- Request write program mode&#13;&#10;&#9;sendSysExMessage({0xF0, 0x42, midiCh, 0x58, 0x11, 0x00, programNumber, 0xF7})&#13;&#10;&#13;&#10;&#9;-- Check if program successfully written&#13;&#10;&#9;waitForWriteReply(WAIT_PROGRAM_TIMER)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="50e545951e8840859acb911f5743b631"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="storeProgramBank" luaMethodCode="function storeProgramBank()&#10;&#9;&#13;&#10;&#9;sendSysExMessage(prepareBulkDump())&#13;&#10;&#9;waitForWriteReply(WAIT_BANK_TIMER)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1dde1af337b24109b651287e2ba07008"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="prepareBulkDump" luaMethodCode="function prepareBulkDump()&#10;&#9;&#13;&#10;&#9;local i, j, c&#13;&#10;&#9;local midiCh = getGlobalMidiChannel()&#13;&#10;&#9;local bulkDump = {0xF0, 0x42, midiCh, 0x58, 0x4C}&#13;&#10;&#13;&#10;&#9;-- Cut extra bytes (SysEx Header, SysEx End) from every program&#13;&#10;&#9;for i = 1, 8 do&#13;&#10;&#9;&#9;for j = 1, 16 do&#13;&#10;&#13;&#10;&#9;&#9;&#9;for c = (DATA_PREAMBLE_BYTES + 1), #presetBank[i][j] - 1 do&#13;&#10;&#9;&#9;&#9;&#9;table.insert(bulkDump, presetBank[i][j][c])&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;table.insert(bulkDump, 0xF7)&#13;&#10;&#13;&#10;&#9;return programToMIDIData(bulkDump, DATA_PREAMBLE_BYTES)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="09474af2ffcf4f12a9f6e2b9327ad3bb"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="mergePanelSynthSettings" luaMethodCode="function mergePanelSynthSettings(mod, value, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Request, replace required bits, send back&#13;&#10;&#13;&#10;&#9;-- I have no intension to manage all global settings via this panel,&#13;&#10;&#9;-- but only the &quot;Clock mode&quot; and &quot;Local mode&quot; settings&#13;&#10;&#13;&#10;&#9;sharedValues.applySettingsOnCatch = true&#13;&#10;&#9;requestSynthSettings()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="66f1c16c3eb441bea93f8f04fc208ea5"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="getMergedTimbreVocoderData" luaMethodCode="function getMergedTimbreVocoderData()&#10;&#9;&#13;&#10;&#9;-- Merge dataBuffer with vocoder data&#13;&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local mergedData = copyTable(dataBuffer)&#13;&#10;&#13;&#10;&#9;for i = TIMBRE_ONE_STARTBYTE, TIMBRE_ONE_STARTBYTE + (TIMBRE_DATA_SIZE * 2) - 1 do&#13;&#10;&#13;&#10;&#9;&#9;mergedData[i] = vocoderBuffer[i - TIMBRE_ONE_STARTBYTE + 1]&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return mergedData&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="2f50663cc6a14673a6d8f65fff7ca8c6"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="checkBulkDumpSize" luaMethodCode="function checkBulkDumpSize(dumpSize)&#10;&#9;&#13;&#10;&#9;-- Check if opened data size is correct&#13;&#10;&#9;-- Return type of dump, if size is correct&#13;&#10;&#13;&#10;&#9;local result = dtInvalidSz&#13;&#10;&#13;&#10;&#9;if dumpSize == PROGRAM_BANK_DUMP_SIZE then&#13;&#10;&#9;&#9;result = dtProgBank&#13;&#10;&#9;elseif dumpSize == ALL_DATA_DUMP_SIZE then&#13;&#10;&#9;&#9;result = dtAllData&#13;&#10;&#9;elseif dumpSize == HANDSON_DUMP_SIZE then&#13;&#10;&#9;&#9;result = dtHandson&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return result&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="e636d7a2980e49698a79e51acb1b6015"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="cutBytesFromDump" luaMethodCode="function cutBytesFromDump(sourceTable, bFrom, bCount)&#10;&#13;&#10;&#9;local i&#13;&#10;&#9;local result = {}&#13;&#10;&#13;&#10;&#9;for i = 1, #sourceTable do&#13;&#10;&#13;&#10;&#9;&#9;if (i &lt; bFrom) or (i &gt;= (bFrom + bCount)) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;table.insert(result, sourceTable[i])&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return result&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="01eb8ae59aa842dab17c232d72ff781c"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="actionsReactions" uuid="dbbd723f87e94329a5d5c7162c852c03">
          <luaMethod luaMethodName="setVoiceModeReactions" luaMethodCode="function setVoiceModeReactions(mod, value, source)&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if sharedValues.voiceMode ~= value then&#13;&#10;&#13;&#10;&#9;&#9;setVoiceModeByValue(value)&#13;&#10;&#9;end&#13;&#10;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="01959f3bd6f5400fa7dc413805ee4001"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setLFO1TempoSyncReactions" luaMethodCode="function setLFO1TempoSyncReactions(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if value == 1 then&#13;&#10;&#9;&#9;enableControls({&quot;knobLFO1Frequency&quot;}, false)&#13;&#10;&#9;&#9;enableControls({&quot;cbLFO1SyncNote&quot;}, true)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;enableControls({&quot;knobLFO1Frequency&quot;}, true)&#13;&#10;&#9;&#9;enableControls({&quot;cbLFO1SyncNote&quot;}, false)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="60199d55d1ee4a238fe9ece4b73d62f9"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setLFO2TempoSyncReactions" luaMethodCode="function setLFO2TempoSyncReactions(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if value == 1 then&#13;&#10;&#9;&#9;enableControls({&quot;knobLFO2Frequency&quot;}, false)&#13;&#10;&#9;&#9;enableControls({&quot;cbLFO2SyncNote&quot;}, true)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;enableControls({&quot;knobLFO2Frequency&quot;}, true)&#13;&#10;&#9;&#9;enableControls({&quot;cbLFO2SyncNote&quot;}, false)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1ab56a2ca161429a831f4faf78bc11fb"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setDelayTempoSyncReactions" luaMethodCode="function setDelayTempoSyncReactions(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if value == 1 then&#13;&#10;&#9;&#9;enableControls({&quot;knobDelayTime&quot;}, false)&#13;&#10;&#9;&#9;enableControls({&quot;cbDelaySyncNote&quot;}, true)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;enableControls({&quot;knobDelayTime&quot;}, true)&#13;&#10;&#9;&#9;enableControls({&quot;cbDelaySyncNote&quot;}, false)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="79df6608bc3e4c17b53ca733f1a53835"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setTimbreAssignReactions" luaMethodCode="function setTimbreAssignReactions(mod, value, source)&#10;&#9;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if value == 0 then&#13;&#10;&#13;&#10;&#9;&#9;-- Mono&#13;&#10;&#9;&#9;enableControls({&quot;cbTimbreTrigger&quot;}, true)&#13;&#10;&#9;&#9;enableControls({&quot;knobTimbreDetune&quot;}, false)&#13;&#10;&#9;elseif value == 2 then&#13;&#10;&#13;&#10;&#9;&#9;-- Unison&#13;&#10;&#9;&#9;enableControls({&quot;cbTimbreTrigger&quot;, &quot;knobTimbreDetune&quot;}, true)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;-- Poly&#13;&#10;&#9;&#9;enableControls({&quot;cbTimbreTrigger&quot;, &quot;knobTimbreDetune&quot;}, false)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="c6edb554fbeb453db4d0f62d44a24256"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setDWGSWaveform" luaMethodCode="function setDWGSWaveform(dwgsSet)&#10;&#13;&#10;&#9;-- OSC 1 Control 2 requires special treatment because it's using&#13;&#10;&#9;-- different sysex for DWGS waveform... Two layer depencies here&#13;&#10;&#13;&#10;&#9;if dwgsSet then&#13;&#10;&#13;&#10;&#9;&#9;specialBounds(&quot;knobOsc1Control2&quot;, 0x00, 0x3F, 0x1F)&#13;&#10;&#13;&#10;&#9;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;&#9;if sharedValues.selectedTimbre == 0 then&#13;&#10;&#9;&#9;&#9;&#9;setSEFormulaMod(&quot;knobOsc1Control2&quot;, 0x4C)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;setSEFormulaMod(&quot;knobOsc1Control2&quot;, 0x15C)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;setSEFormulaMod(&quot;knobOsc1Control2&quot;, 0x273)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;specialBounds(&quot;knobOsc1Control2&quot;, 0x00, 0x7F, 0x40)&#13;&#10;&#13;&#10;&#9;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#9;&#9;&#9;if sharedValues.selectedTimbre == 0 then&#13;&#10;&#9;&#9;&#9;&#9;setSEFormulaMod(&quot;knobOsc1Control2&quot;, 0x4B)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;setSEFormulaMod(&quot;knobOsc1Control2&quot;, 0x15B)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;setSEFormulaMod(&quot;knobOsc1Control2&quot;, 0x272)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Apply new SysEx Formula&#13;&#10;&#9;panel:getInputComparator():rehashComparator()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="2f50d7c0ac524477882c3ed6a95d82d3"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="Timers" uuid="1307839146d74f9eb32518cfa0cdc6bf">
          <luaMethod luaMethodName="startupTimer" luaMethodCode="function startupTimer()&#13;&#10;&#13;&#10;&#9;timer:setCallback (STARTUP_TIMER_ID, startupCallback)&#13;&#10;&#9;timer:startTimer(STARTUP_TIMER_ID, STARTUP_TIMER)&#13;&#10;end&#13;&#10;&#13;&#10;function startupCallback()&#13;&#10;&#13;&#10; &#9;runPanelOperations()&#13;&#10;&#9;timer:stopTimer(STARTUP_TIMER_ID)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="2c46de0b6c254f2a9ac9be1fb12c8bdb"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="showHintTimer" luaMethodCode="function showHintTimer()&#13;&#10;&#13;&#10;&#9;timer:stopTimer(HINT_TIMER_ID) &#13;&#10;&#13;&#10;&#9;timer:setCallback (HINT_TIMER_ID, showHintCallback)&#13;&#10;&#9;timer:startTimer(HINT_TIMER_ID, SHOWHINT_TIMER)&#13;&#10;end&#13;&#10;&#13;&#10;function showHintCallback()&#13;&#10;&#13;&#10; &#9;sharedValues.hintMessage = &quot;&quot;&#13;&#10;&#9;externalRepaintHintWindow()&#13;&#10;&#13;&#10;&#9;timer:stopTimer(HINT_TIMER_ID)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="85569d44ff4549969110c726eeaf0826"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="synthPoller" luaMethodCode="function synthPoller()&#13;&#10;&#13;&#10;&#9;-- Endless polling synthesizer loop&#13;&#10;&#9;timer:stopTimer(POLL_TIMER_ID)&#13;&#10;&#10;&#9;timer:setCallback (POLL_TIMER_ID, synthPollerCallback)&#13;&#10;&#9;timer:startTimer(POLL_TIMER_ID, POLL_TIMER)&#10;end&#13;&#10;&#13;&#10;function synthPollerCallback()&#13;&#10;&#13;&#10;&#9;-- Do not poll device if it's busy&#13;&#10;&#9;if not (sharedValues.deviceStatus == dsBusy) then&#13;&#10; &#9;&#9;pollSynthStatus()&#13;&#10;&#13;&#10;&#9;&#9;-- Check if LCD mode is set on the synth (only if this option was selected)&#13;&#10;&#9;&#9;-- Pretty undesirable thing, but someone can find this handy&#13;&#10;&#9;&#9;if panelSettings.autocheckLCDMode == 1 then&#13;&#10;&#9;&#9;&#9;checkLCDModeEnabled()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="44808b7a97b24755b56ba0eeca2ac3e2"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="blinkMidiLightTimer" luaMethodCode="function blinkMidiLightTimer()&#13;&#10;&#10;&#9;timer:setCallback (BLINKMIDI_TIMER_ID, blinkMidiLightTimerCallback)&#13;&#10;&#9;timer:stopTimer(BLINKMIDI_TIMER_ID) &#13;&#10;&#9;timer:startTimer(BLINKMIDI_TIMER_ID, BLINKMIDI_TIMER)&#13;&#10;end&#13;&#10;&#13;&#10;function blinkMidiLightTimerCallback()&#13;&#10;&#13;&#10; &#9;sharedValues.midiActivity = 0&#13;&#10;&#9;externalRepaintMidiActivity()&#13;&#10;&#13;&#10;&#9;timer:stopTimer(BLINKMIDI_TIMER_ID)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="28ea7e454c284df695dc122d7fd6485f"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="delayedProgramRequest" luaMethodCode="function delayedProgramRequest()&#10;&#13;&#10;&#9;-- Stop timer if it's already running&#13;&#10;&#9;timer:stopTimer(DELAY_PROG_REQUEST_ID)&#13;&#10;&#10;&#9;timer:setCallback(DELAY_PROG_REQUEST_ID, delayedProgramRequestCallback)&#13;&#10;&#9;timer:startTimer(DELAY_PROG_REQUEST_ID, DELAY_PROG_REQUEST)&#13;&#10;end&#13;&#10;&#13;&#10;function delayedProgramRequestCallback()&#13;&#10;&#13;&#10; &#9;requestSingleProgram()&#13;&#10;&#13;&#10;&#9;timer:stopTimer(DELAY_PROG_REQUEST_ID)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1b29dc0dca3f4acda24174625d9b306a"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="requestSynthSettings" luaMethodCode="function requestSynthSettings()&#13;&#10;&#13;&#10;&#9;-- Send synthesizer settings request&#13;&#10;&#9;sendSysExMessage({0xF0, 0x42, getGlobalMidiChannel(), 0x58, 0x0E, 0xF7})&#13;&#10;&#13;&#10;&#9;-- Stop timer if it's already running&#13;&#10;&#9;timer:stopTimer(WAITFORSET_TIMER_ID)&#13;&#10;&#10;&#9;timerFlags.waitForSettings = true&#13;&#10;&#9;setSynthReachStatus(dsBusy)&#13;&#10;&#10;&#9;timer:setCallback(WAITFORSET_TIMER_ID, requestSynthSettingsCallback)&#13;&#10;&#9;timer:startTimer(WAITFORSET_TIMER_ID, WAITFORSET_TIMER)&#13;&#10;end&#13;&#10;&#13;&#10;function requestSynthSettingsCallback()&#13;&#10;&#13;&#10; &#9;-- Set synth error on timeout&#13;&#10;&#9;if timerFlags.waitForSettings == true then&#13;&#10;&#9;&#9;setSynthReachStatus(dsError, true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Resetting the flags&#13;&#10;&#9;timerFlags.waitForSettings = false&#13;&#10;&#9;sharedValues.applySettingsOnCatch = false&#13;&#10;&#13;&#10;&#9;timer:stopTimer(WAITFORSET_TIMER_ID)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1b172234acca49a59abab58d449f0bc0"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="requestSingleProgram" luaMethodCode="function requestSingleProgram()&#13;&#10;&#13;&#10;&#9;-- Request single program&#13;&#10;&#9;sendSysExMessage({0xF0, 0x42, getGlobalMidiChannel(), 0x58, 0x10, 0xF7})&#13;&#10;&#13;&#10;&#9;-- Stop timer if it's already running&#13;&#10;&#9;timer:stopTimer(WAIT_PROGRAM_TIMER_ID)&#13;&#10;&#10;&#9;timerFlags.waitForSingleProgram&#9;= true&#13;&#10;&#9;setSynthReachStatus(dsBusy)&#13;&#10;&#10;&#9;timer:setCallback(WAIT_PROGRAM_TIMER_ID, requestSingleProgramCallback)&#13;&#10;&#9;timer:startTimer(WAIT_PROGRAM_TIMER_ID, WAIT_PROGRAM_TIMER)&#13;&#10;end&#13;&#10;&#13;&#10;function requestSingleProgramCallback()&#13;&#10;&#13;&#10; &#9;-- Set synth error on timeout&#13;&#10;&#9;if timerFlags.waitForSingleProgram == true then&#13;&#10;&#9;&#9;setSynthReachStatus(dsError, true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;timerFlags.waitForSingleProgram&#9;= false&#13;&#10;&#13;&#10;&#9;timer:stopTimer(WAIT_PROGRAM_TIMER_ID)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="d47b37c8e1404f80b8d41ce2624c6439"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="waitForWriteReply" luaMethodCode="function waitForWriteReply(timeOut)&#13;&#10;&#13;&#10;&#9;-- Stop timer if it's already running&#13;&#10;&#9;timer:stopTimer(WAITFORWRITE_REPLY_ID)&#13;&#10;&#10;&#9;timerFlags.waitForWriteReply = true&#13;&#10;&#9;setSynthReachStatus(dsBusy)&#13;&#10;&#10;&#9;timer:setCallback(WAITFORWRITE_REPLY_ID, waitForWriteReplyCallback)&#13;&#10;&#9;timer:startTimer(WAITFORWRITE_REPLY_ID, timeOut)&#13;&#10;end&#13;&#10;&#13;&#10;function waitForWriteReplyCallback()&#13;&#10;&#13;&#10; &#9;-- Set synth error on timeout&#13;&#10;&#9;if timerFlags.waitForWriteReply == true then&#13;&#10;&#9;&#9;setSynthReachStatus(dsError, true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;timerFlags.waitForWriteReply = false&#13;&#10;&#13;&#10;&#9;timer:stopTimer(WAITFORWRITE_REPLY_ID)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="448c115cb5f84f9f91f5c65d9effdfa4"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="requestProgramBank" luaMethodCode="function requestProgramBank()&#10;&#9;&#13;&#10;&#9;-- Request program bank&#13;&#10;&#9;sendSysExMessage({0xF0, 0x42, getGlobalMidiChannel(), 0x58, 0x1C, 0xF7})&#13;&#10;&#13;&#10;&#9;-- Stop timer if it's already running&#13;&#10;&#9;timer:stopTimer(WAIT_BANK_TIMER_ID)&#13;&#10;&#10;&#9;timerFlags.waitForBulkDump&#9;= true&#13;&#10;&#9;setSynthReachStatus(dsBusy)&#13;&#10;&#10;&#9;timer:setCallback(WAIT_BANK_TIMER_ID, requestProgramBankCallback)&#13;&#10;&#9;timer:startTimer(WAIT_BANK_TIMER_ID, WAIT_BANK_TIMER)&#13;&#10;end&#13;&#10;&#13;&#10;function requestProgramBankCallback()&#13;&#10;&#13;&#10; &#9;-- Set synth error on timeout&#13;&#10;&#9;if timerFlags.waitForBulkDump == true then&#13;&#10;&#9;&#9;setSynthReachStatus(dsError, true)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;timerFlags.waitForBulkDump&#9;= false&#13;&#10;&#13;&#10;&#9;timer:stopTimer(WAIT_BANK_TIMER_ID)&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="fd525511905f4fd3a8c7a01992b57391"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="stateUtils" uuid="ff57609cb1b94c33a86d350824ca743a">
          <luaMethod luaMethodName="saveStateOperations" luaMethodCode="function saveStateOperations(stateData)&#13;&#10;&#13;&#10;&#9;local i, j&#13;&#10;&#13;&#10;&#9;-- Syncing buffer is required here&#13;&#10;&#9;syncPanelWithBuffer()&#13;&#10;&#13;&#10;&#9;-- Save data buffer&#13;&#10;&#9;-- Merge vocoder data with program data if necessary&#13;&#10;&#9;if sharedValues.timbreMode == tmSynth then&#13;&#10;&#13;&#10;&#9;&#9;stateData:setProperty(&quot;dataBuffer&quot;, toCSV(dataBuffer), nil)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;stateData:setProperty(&quot;dataBuffer&quot;, toCSV(getMergedTimbreVocoderData()), nil)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Save program bank&#13;&#10;&#9;for i = 1, 8 do&#13;&#10;&#9;&#9;for j = 1, 16 do &#13;&#10;&#9;&#9;&#9;stateData:setProperty(string.format(&quot;bank%dProgram%d&quot;, i, j), toCSV(presetBank[i][j]), nil)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;stateData:setProperty(&quot;selectedPreset&quot;,&#9;&#9;tostring(sharedValues.selectedPreset), nil)&#13;&#10;&#9;stateData:setProperty(&quot;selectedBank&quot;,&#9;&#9;tostring(sharedValues.selectedBank), nil)&#13;&#10;&#9;stateData:setProperty(&quot;saveToRamEnabled&quot;,&#9;tostring(sharedValues.saveToRamEnabled), nil)&#13;&#10;&#13;&#10;&#9;stateData:setProperty(&quot;sendProgOnStartup&quot;,&#9;tostring(panelSettings.sendProgOnStartup), nil) -- Decided not to make this &quot;Global&quot;&#13;&#10;&#9;stateData:setProperty(&quot;clockSource&quot;,&#9;&#9;tostring(panelSettings.clockSource), nil)&#13;&#10;&#9;stateData:setProperty(&quot;localMode&quot;,&#9;&#9;&#9;tostring(panelSettings.localMode), nil)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="da5ab1fba040437f828d77d46c251c41"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="loadStateOperations" luaMethodCode="function loadStateOperations(stateData)&#10;&#9;&#13;&#10;&#9;local i, j&#13;&#10;&#13;&#10;&#9;-- Restore data buffer&#13;&#10;&#9;dataBuffer = fromCSV(stateData:getProperty(&quot;dataBuffer&quot;))&#13;&#10;&#13;&#10;&#9;-- Restore program bank&#13;&#10;&#9;for i = 1, 8 do&#13;&#10;&#9;&#9;for j = 1, 16 do &#13;&#10;&#9;&#9;&#9;presetBank[i][j] = fromCSV(stateData:getProperty(string.format(&quot;bank%dProgram%d&quot;, i, j)))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;sharedValues.selectedPreset&#9;&#9;&#9;= tonumber(stateData:getProperty(&quot;selectedPreset&quot;))&#13;&#10;&#9;sharedValues.selectedBank &#9;&#9;&#9;= tonumber(stateData:getProperty(&quot;selectedBank&quot;))&#13;&#10;&#9;sharedValues.saveToRamEnabled&#9;&#9;= tonumber(stateData:getProperty(&quot;saveToRamEnabled&quot;))&#13;&#10;&#13;&#10;&#9;panelSettings.sendProgOnStartup&#9;&#9;= tonumber(stateData:getProperty(&quot;sendProgOnStartup&quot;))&#13;&#10;&#9;panelSettings.clockSource&#9;&#9;&#9;= tonumber(stateData:getProperty(&quot;clockSource&quot;))&#13;&#10;&#9;panelSettings.localMode&#9;&#9;&#9;&#9;= tonumber(stateData:getProperty(&quot;localMode&quot;))&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="7303d583725149809a7b977f6345c2ec"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="restoreGlobalSettings" luaMethodCode="function restoreGlobalSettings()&#13;&#10;&#13;&#10;&#9;local panelSettingsExt = {}&#13;&#10;&#9;local panelSettingsExtStr&#13;&#10;&#13;&#10;&#9;local settingsFile = getLocalSettingsFile()&#13;&#10;&#13;&#10;&#9;-- Loading shared settings from file&#13;&#10;&#9;if settingsFile ~= nil then&#13;&#10;&#13;&#10;&#9;&#9;panelSettingsExt = json.decode(settingsFile:loadFileAsString())&#13;&#10;&#13;&#10;&#9;&#9;panelSettings.sendOnProgChange&#9;&#9;= panelSettingsExt.sendOnProgChange&#13;&#10;&#9;&#9;panelSettings.autocheckLCDMode&#9;&#9;= panelSettingsExt.autocheckLCDMode&#13;&#10;&#9;&#9;panelSettings.continuousPolling&#9;&#9;= panelSettingsExt.continuousPolling&#13;&#10;&#9;&#9;panelSettings.disableWarnings&#9;&#9;= panelSettingsExt.disableWarnings&#13;&#10;&#9;&#9;panelSettings.selectedSkin&#9;&#9;&#9;= panelSettingsExt.selectedSkin&#13;&#10;&#9;&#9;panelSettings.reqProgOnChange&#9;&#9;= panelSettingsExt.reqProgOnChange&#13;&#10;&#9;end&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="9c34489ca2134828ad077be26fcb9976"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="saveGlobalSettings" luaMethodCode="function saveGlobalSettings()&#13;&#10;&#13;&#10;&#9;local settingsFileDir, settingsFile&#13;&#10;&#9;local panelSettingsExt = {}&#13;&#10;&#9;local panelSettingsExtStr&#13;&#10;&#13;&#10;&#9;-- Saving some of the settings into external file to make them shared&#13;&#10;&#13;&#10;&#9;-- Preparing data&#13;&#10;&#9;panelSettingsExt.sendOnProgChange&#9;= panelSettings.sendOnProgChange&#13;&#10;&#9;panelSettingsExt.autocheckLCDMode&#9;= panelSettings.autocheckLCDMode&#13;&#10;&#9;panelSettingsExt.continuousPolling&#9;= panelSettings.continuousPolling&#13;&#10;&#9;panelSettingsExt.disableWarnings&#9;= panelSettings.disableWarnings&#13;&#10;&#9;panelSettingsExt.selectedSkin&#9;&#9;= panelSettings.selectedSkin&#13;&#10;&#9;panelSettingsExt.reqProgOnChange&#9;= panelSettings.reqProgOnChange&#13;&#10;&#9;panelSettingsExt.panelVersion&#9;&#9;= panelVersion&#13;&#10;&#13;&#10;&#9;-- Encode settings as json string&#13;&#10;&#9;panelSettingsExtStr = json.encode(panelSettingsExt)&#13;&#10;&#13;&#10;&#9;-- Prepare file to save&#13;&#10;&#9;settingsFileDir = File.getSpecialLocation(File.currentExecutableFile):getChildFile(panel:getProperty(&quot;name&quot;))&#13;&#10;&#9;settingsFile = File(settingsFileDir:getChildFile(&quot;config.json&quot;))&#13;&#10;&#13;&#10;&#9;-- Check if file exists&#13;&#10;&#9;if settingsFile:existsAsFile() == false then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;-- File not exist. Check if it can be created&#13;&#10;&#9;&#9;if settingsFile:create() == false then&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Ok, writing settings there&#13;&#10;&#9;settingsFile:replaceWithText(panelSettingsExtStr, false, false)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="e5ea48be75fd4a1f9c244517cd20c35d"
                     luaMethodValid="1"/>
        </luaMethodGroup>
        <luaMethodGroup name="synthPollers" uuid="bf0cd11c63d84540bfa8dc937fe2bd30">
          <luaMethod luaMethodName="requestOperationMode" luaMethodCode="function requestOperationMode()&#13;&#10;&#10;&#9;sendSysExMessage({0xF0, 0x42, getGlobalMidiChannel(), 0x58, 0x12, 0xF7})&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="9507a4cc29244a50a3e781ad41aecd37"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="setSynthReachStatus" luaMethodCode="function setSynthReachStatus(deviceStatus, forceChange)&#10;&#9;&#13;&#10;&#9;local force = false&#13;&#10;&#13;&#10;&#9;if forceChange ~= nil then&#13;&#10;&#9;&#9;force = forceChange&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (sharedValues.deviceStatus == dsBusy) and (force == false) then&#13;&#10;&#13;&#10;&#9;&#9;-- Ignore poller data while synth is busy&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Prevent going offline if the synth is responded&#13;&#10;&#9;if deviceStatus == dsOnline then&#13;&#10;&#9;&#9;sharedValues.reachStatus = 1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if sharedValues.deviceStatus ~= deviceStatus then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if deviceStatus == dsBusy then&#13;&#10;&#9;&#9;&#9;showHint(&quot;Info: Synthesizer is busy&quot;)&#13;&#10;&#9;&#9;elseif deviceStatus == dsError then&#13;&#10;&#9;&#9;&#9;showHint(&quot;Info: Synthesizer is not responding&quot;)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;sharedValues.deviceStatus = deviceStatus&#13;&#10;&#9;&#9;externalRepaintInfoWindow()&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="ed0a982713ca4b72ac8bd8e806ebd9f4"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="writeOKReply" luaMethodCode="function writeOKReply()&#10;&#13;&#10;&#9;if timerFlags.waitForWriteReply == true then&#13;&#10;&#13;&#10;&#9;&#9;timer:stopTimer(WAITFORWRITE_REPLY_ID)&#13;&#10;&#9;&#9;timerFlags.waitForWriteReply = false&#13;&#10;&#13;&#10;&#9;&#9;setSynthReachStatus(dsOnline, true)&#13;&#10;&#9;&#9;showHint(&quot;Info: Operation completed successfuly&quot;)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1c3666cafa1b4131ae0f405e9d8d7156"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="writeErrorReply" luaMethodCode="function writeErrorReply()&#10;&#13;&#10;&#9;if timerFlags.waitForWriteReply == true then&#13;&#10;&#13;&#10;&#9;&#9;timer:stopTimer(WAITFORWRITE_REPLY_ID)&#13;&#10;&#9;&#9;timerFlags.waitForWriteReply = false&#13;&#10;&#13;&#10;&#9;&#9;setSynthReachStatus(dsError, false)&#13;&#10;&#9;&#9;showHint(&quot;Info: Last operation was not completed&quot;)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="0d0233f30775444485e73a2a70c2481c"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="captureProgramDumpData" luaMethodCode="function captureProgramDumpData(programData)&#13;&#10;&#10;&#9;timerFlags.waitForSingleProgram&#9;= false&#13;&#10;&#9;setSynthReachStatus(dsOnline, true)&#13;&#10;&#13;&#10;&#9;if programData:getSize() == SINGLE_PROGRAM_SIZE then&#13;&#10;&#13;&#10;&#9;&#9;local rawDumpBytesData = normalizeSysExDumpData(memBlockToTable(programData))&#13;&#10;&#13;&#10;&#9;&#9;dataBuffer = midiToProgramData(rawDumpBytesData, DATA_PREAMBLE_BYTES)&#13;&#10;&#13;&#10;&#9;&#9;applyProgramData(dataBuffer, nil, nil, true)&#13;&#10;&#13;&#10;&#9;&#9;showHint(&quot;Info: Program dump received&quot;)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;setSynthReachStatus(dsError)&#13;&#10;&#9;&#9;showHint(&quot;Info: Error during program data transmission&quot;)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="139ff0c6940a48c0a4b4151def7e20d9"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="captureBulkDumpData" luaMethodCode="function captureBulkDumpData(programData)&#10;&#13;&#10;&#9;timerFlags.waitForBulkDump = false&#13;&#10;&#9;setSynthReachStatus(dsOnline, true)&#13;&#10;&#13;&#10;&#9;if (programData:getSize() == PROGRAM_BANK_DUMP_SIZE) or (programData:getSize() == ALL_DATA_DUMP_SIZE) then&#13;&#10;&#13;&#10;&#9;&#9;local rawDumpBytesData = normalizeSysExDumpData(memBlockToTable(programData))&#13;&#10;&#13;&#10;&#9;&#9;presetBank = slicePresets(midiToProgramData(rawDumpBytesData, DATA_PREAMBLE_BYTES))&#13;&#10;&#9;&#9;dataBuffer = copyTable(presetBank[1][1])&#13;&#10;&#9;&#9;chosenPresetToBuffer(101, true)&#13;&#10;&#13;&#10;&#9;&#9;showHint(&quot;Info: SysEx bulk dump received&quot;)&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;setSynthReachStatus(dsError)&#13;&#10;&#9;&#9;showHint(&quot;Info: Error during program data transmission&quot;)&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="bfc3c0e3a0b94cf7af1b5e816ea3cfba"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="captureGlobalSettings" luaMethodCode="function captureGlobalSettings(globalData)&#10;&#13;&#10;&#9;setSynthReachStatus(dsOnline, true)&#13;&#10;&#9;&#13;&#10;&#9;if globalData:getSize() == GLOBAL_DATA_SIZE then&#13;&#10;&#13;&#10;&#9;&#9;local rawDumpBytesData = midiToProgramData(memBlockToTable(globalData), DATA_PREAMBLE_BYTES)&#13;&#10;&#9;&#9;local sb = DATA_PREAMBLE_BYTES + 1&#13;&#10;&#13;&#10;&#9;&#9;if sharedValues.applySettingsOnCatch == true then&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Byte 5 Bit 2 - Local Ctrl [0, 1 = Off, On]&#13;&#10;&#9;&#9;&#9;rawDumpBytesData[sb + 5] = packBitsToByte(rawDumpBytesData[sb + 5], getModValue(&quot;btnSettingsLocalMode&quot;), 2) --panelSettings.localMode&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Byte 8 Bits 0~1 - Clock [0~2 = Internal, External, Auto]&#13;&#10;&#9;&#9;&#9;rawDumpBytesData[sb + 8] = packBitsToByte(rawDumpBytesData[sb + 8], getModValue(&quot;cbClockSource&quot;), 0, 1)&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Transmit patched settings&#13;&#10;&#9;&#9;&#9;sendSysExMessage(programToMIDIData(rawDumpBytesData, DATA_PREAMBLE_BYTES))&#13;&#10;&#13;&#10;&#9;&#9;elseif timerFlags.waitForSettings == true then&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Extract data that need&#13;&#10;&#9;&#9;&#9;panelSettings.localMode = extractPackByte(rawDumpBytesData[sb + 5], 2)&#13;&#10;&#9;&#9;&#9;panelSettings.clockSource = extractPackByte(rawDumpBytesData[sb + 8], 0, 1)&#13;&#10;&#13;&#10;&#9;&#9;&#9;setModValue(&quot;btnSettingsLocalMode&quot;, panelSettings.localMode)&#13;&#10;&#9;&#9;&#9;setModValue(&quot;cbClockSource&quot;, panelSettings.clockSource)&#13;&#10;&#13;&#10;&#9;&#9;&#9;externalRepaintInfoWindow()&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;setSynthReachStatus(dsError)&#13;&#10;&#9;&#9;showHint(&quot;Info: Error during global settings transmission&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;timerFlags.waitForSettings = false&#13;&#10;&#9;sharedValues.applySettingsOnCatch = false&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="1362c1ea1dab467c90327b546555297c"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="captureProgramChangeMessage" luaMethodCode="function captureProgramChangeMessage(msgData)&#10;&#13;&#10;&#9;local currProgram = {sharedValues.synthBank, sharedValues.synthPreset}&#13;&#10;&#13;&#10;&#9;sharedValues.synthBank = bit.rshift(msgData:getByte(1), 4)&#13;&#10;&#9;sharedValues.synthPreset = bit.band(msgData:getByte(1), 0x0F)&#13;&#10;&#13;&#10;&#9;getComp(&quot;uiSynthSideSelector&quot;):repaint()&#13;&#10;&#13;&#10;&#9;-- Request current program, if such a setting has been set&#13;&#10;&#9;if&#9;(panelSettings.reqProgOnChange == 1) and &#13;&#10; &#9;&#9;((currProgram[1] ~= sharedValues.synthBank) or (currProgram[2] ~= sharedValues.synthPreset)) then&#13;&#10;&#13;&#10;&#9;&#9;requestSingleProgram()&#13;&#10;&#9;end&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="152a36790277486abe416eb3d457de48"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="requestSynthSettingsMod" luaMethodCode="function requestSynthSettingsMod(mod, value, source)&#13;&#10;&#13;&#10;&#9;if blockExecution(source) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#10;&#13;&#10;&#9;requestSynthSettings()&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="f4550bb7197c4699be3d82ccb22ce24e"
                     luaMethodValid="1"/>
          <luaMethod luaMethodName="pollSynthStatus" luaMethodCode="function pollSynthStatus()&#13;&#10;&#13;&#10;&#9;-- Reset reach flag&#13;&#10;&#9;sharedValues.reachStatus = 0&#13;&#10;&#13;&#10;&#9;-- Send status request, expecting reply data on input&#13;&#10;&#9;sendSysExMessage({0xF0, 0x7E, getGlobalMidiChannel(true), 0x06, 0x01, 0xF7})&#13;&#10;&#10;&#9;timer:setCallback (POLLSTATE_TIMER_ID, pollSynthStatusCallback)&#13;&#10;&#9;timer:startTimer(POLLSTATE_TIMER_ID, POLLSTATE_TIMER)&#13;&#10;end&#13;&#10;&#13;&#10;function pollSynthStatusCallback()&#13;&#10;&#13;&#10; &#9;-- Set synth offline on timeout&#13;&#10;&#9;if sharedValues.reachStatus == 0 then&#13;&#10;&#9;&#9;setSynthReachStatus(dsOffline)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;timer:stopTimer(POLLSTATE_TIMER_ID)&#13;&#10;end"
                     luaMethodLinkedProperty="" luaMethodSource="0" uuid="b4e1de6de56443e7aa728cb3e70e1655"
                     luaMethodValid="1"/>
        </luaMethodGroup>
      </luaMethodGroup>
    </luaManagerMethods>
  </luaManager>
  <panelResources>
    <resource resourceHash="-5509776170528263249" resourceLoadedTime="1661602929823"
              resourceSize="57624" resourceFile="BebasNeue-Regular.ttf" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\fonts\BebasNeue-Regular.ttf"
              resourceName="BebasNeue-Regular" resourceType="Font"/>
    <resource resourceHash="-2234200278626234514" resourceLoadedTime="1661602929826"
              resourceSize="21540" resourceFile="REGISTER.TTF" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\fonts\REGISTER.TTF"
              resourceName="REGISTER" resourceType="Font"/>
    <resource resourceHash="-6979439870951453181" resourceLoadedTime="1661602929827"
              resourceSize="169352" resourceFile="RobotoCondensed-Bold.ttf"
              resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\fonts\RobotoCondensed-Bold.ttf"
              resourceName="RobotoCondensed-Bold" resourceType="Font"/>
    <resource resourceHash="6606703374348316776" resourceLoadedTime="1661602929828"
              resourceSize="169848" resourceFile="RobotoCondensed-Regular.ttf"
              resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\fonts\RobotoCondensed-Regular.ttf"
              resourceName="RobotoCondensed-Regular" resourceType="Font"/>
    <resource resourceHash="24284200927184946" resourceLoadedTime="1661602929824"
              resourceSize="35212" resourceFile="MS2000.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\MS2000.png"
              resourceName="MS2000" resourceType="Image"/>
    <resource resourceHash="4554181987486437783" resourceLoadedTime="1661602929824"
              resourceSize="382636" resourceFile="MS2000_Knob_Grey.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\MS2000_Knob_Grey.png"
              resourceName="MS2000_Knob_Grey" resourceType="Image"/>
    <resource resourceHash="7055191549872931336" resourceLoadedTime="1661602929825"
              resourceSize="435470" resourceFile="MS2000_Template.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\MS2000_Template.png"
              resourceName="MS2000_Template" resourceType="Image"/>
    <resource resourceHash="-5319962127202713953" resourceLoadedTime="1661602929826"
              resourceSize="843" resourceFile="radio_off.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\radio_off.png"
              resourceName="radio_off" resourceType="Image"/>
    <resource resourceHash="860533896161038134" resourceLoadedTime="1661602929826"
              resourceSize="928" resourceFile="radio_on.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\radio_on.png"
              resourceName="radio_on" resourceType="Image"/>
    <resource resourceHash="-4195596207433070748" resourceLoadedTime="1661602929828"
              resourceSize="1456" resourceFile="select_button.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\select_button.png"
              resourceName="select_button" resourceType="Image"/>
    <resource resourceHash="6154042222890852984" resourceLoadedTime="1661602929829"
              resourceSize="2036" resourceFile="select_button_red.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\select_button_red.png"
              resourceName="select_button_red" resourceType="Image"/>
    <resource resourceHash="3152253748933807267" resourceLoadedTime="1661602929829"
              resourceSize="1889" resourceFile="select_button_white.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\select_button_white.png"
              resourceName="select_button_white" resourceType="Image"/>
    <resource resourceHash="-7062604418778392434" resourceLoadedTime="1661602929829"
              resourceSize="1865" resourceFile="toggle_button.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\toggle_button.png"
              resourceName="toggle_button" resourceType="Image"/>
    <resource resourceHash="-5163334971646848901" resourceLoadedTime="1661602929830"
              resourceSize="2281" resourceFile="toggle_button_white.png" resourceSourceFile="E:\FL Studio\CtrlrPanels\ReMS2000\resources\graphics\toggle_button_white.png"
              resourceName="toggle_button_white" resourceType="Image"/>
  </panelResources>
  <uiPanelEditor uiPanelCanvasRectangle="0 0 1406 872" uiPanelSnapSize="4" uiPanelBackgroundColour="ff52576b"
                 uiPanelBackgroundColour1="ff334657" uiPanelBackgroundColour2="ff334657"
                 uiPanelBackgroundGradientType="0" uiPanelImageResource="-- None"
                 uiPanelEditMode="0" uiPanelLock="0" uiPanelDisabledOnEdit="1"
                 uiPanelMenuBarVisible="1" uiPanelMenuBarHideOnExport="1" uiPanelWidth="400"
                 uiPanelHeight="400" name="ReMS2000" uiPanelImageAlpha="255" uiPanelImageLayout="64"
                 uiPanelSnapActive="1" uiPanelPropertiesOnRight="0" luaPanelPaintBackground="-- None"
                 luaPanelResized="-- None" luaPanelFileDragDropHandler="-- None"
                 luaPanelFileDragEnterHandler="-- None" luaPanelFileDragExitHandler="-- None"
                 uiPanelInvisibleComponentAlpha="0.5" uiPanelTooltipBackgroundColour="0xffeeeebb"
                 uiPanelTooltipOutlineColour="0xff000000" uiPanelTooltipColour="0xff000000"
                 uiPanelTooltipCornerRound="1" uiPanelTooltipPlacement="2" uiPanelTooltipFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
                 uiPanelZoom="1" uiPanelDisableCombosOnEdit="0" uiPanelPropertiesSize="279"
                 uiPanelViewPortSize="1119">
    <uiPanelCanvasLayer uiPanelCanvasLayerName="Background" uiPanelCanvasLayerUid="600e87d654000000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="1"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="TimbreOne" uiPanelCanvasLayerUid="33512cdb54000000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="3"/>
    <uiPanelCanvasLayer uiPanelCanvasLayerName="Settings" uiPanelCanvasLayerUid="d2af48dc54000000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="0"
                        uiPanelCanvasLayerIndex="6"/>
  </uiPanelEditor>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblLayerTwo" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LayerTwo" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="0c76acdb54000000feffffffffffffff"
               componentRectangle="208 0 65 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblLayerSeq" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LayerSeq" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="17e669170c000000feffffffffffffff"
               componentRectangle="272 0 65 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblLayerTop" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LayerTop" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="b4f0c46355000000feffffffffffffff"
               componentRectangle="424 0 65 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgMS2000" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="MS2000"
               uiType="uiImage" componentRectangle="16 24 200 76" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="2825"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="LCDScreen" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;1;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="drawLCDScreen" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="14 108 261 65" uiCustomMouseDownCallback="openPresetPopup"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="2" modulatorIsStatic="1"
             name="lblScreenStrOne" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;0.8;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="openPresetPopup" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ff202020" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Register;18;0;0;0;0.07;1;1"
               uiLabelText="A01:Stab Saw    " uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="scanLabelChange"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="26 116 239 28"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="1" modulatorCustomIndexGroup="2" modulatorIsStatic="1"
             name="lblScreenStrTwo" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="openPresetPopup" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ff202020" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Register;18;0;0;0;0.07;1;1"
               uiLabelText="PANEL READY   [:" uiLabelDisplaysAllValues="1" uiLabelDisplayFormat="Value = %v"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="scanLabelChange"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="26 142 239 23" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2827" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobOsc1Control1" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 4A 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Control 1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="32 188 36 36" uiType="uiImageSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpOsc1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="OSCILLATOR 1"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="104 32 192 244"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2830" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobOsc1Control2" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 4B 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Control 2"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="124 188 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpOsc2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="OSCILLATOR 2"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="300 32 184 244"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               uiType="uiGroup" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2831" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobOsc2Tune" modulatorMin="-63"
             modulatorValue="6">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="19" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 50 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tune"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="116 188 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2832" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobOsc2Semitone" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 4F 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Semitone"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="32 188 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpMixer" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="MIXER" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="488 32 68 244"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2833" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobMixerNoise" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 53 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Noise Mix"
               componentMouseCursor="2" componentGroupName="grpMixer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="16 188 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2834" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobMixerOsc2" modulatorMin="0" modulatorValue="108">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 52 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Osc 2 Mix"
               componentMouseCursor="2" componentGroupName="grpMixer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="16 108 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2835" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobMixerOsc1" modulatorMin="0" modulatorValue="120">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 51 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Osc 1 Mix"
               componentMouseCursor="2" componentGroupName="grpMixer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="16 48 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpFilter" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="FILTER" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="560 32 204 244"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2836" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobFilterCutoff" modulatorMin="0"
             modulatorValue="33">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 55 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Cutoff"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="44 48 36 36" uiType="uiImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2837" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobFilterResonance" modulatorMin="0" modulatorValue="25">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 56 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Resonance"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="120 48 36 36" uiType="uiImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2838" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobFilterEG1Int" modulatorMin="-63"
             modulatorValue="42">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 57 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG1 Intensity"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="0"
               uiLabelTextColour="ffbababa" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="20 108 36 36"
               uiType="uiImageSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2839" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobFilterKbdTrk" modulatorMin="-63"
             modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 58 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="KBD Tracking"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="84 108 36 36"
               uiType="uiImageSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblOsc1Control1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="CONTROL 1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="12 168 76 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblOsc1Control2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="CONTROL 2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="104 168 76 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblOsc2Semitone" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEMITONE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="16 168 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblOsc2Tune" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TUNE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="100 168 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblMixerNoise" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpMixer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="NOISE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="12 168 44 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblMixerOsc2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpMixer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="OSC 2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="12 88 44 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblMixerOsc1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpMixer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="OSC 1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="12 28 44 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilterKbdTrack" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KBD TRK" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="72 88 60 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilterEG1Int" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="EG 1 INT" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="8 88 60 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilterCutoff" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="CUTOFF" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="28 28 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilterResonance" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="RESONANCE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="100 28 76 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpEG1Filter" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="EG 1 (FILTER)"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="104 280 328 100"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="5"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpEG2Amp" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="EG 2 (AMP)"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="436 280 328 100"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="5"
               uiType="uiGroup" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpAmp" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="AMP" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="928 220 236 160"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               uiType="uiGroup" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2840" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobAmpLevel" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 59 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Level"
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="20 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblAmpLevel" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LEVEL" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 28 60 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblAmpPan" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PAN" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 88 60 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2841" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobAmpPan" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="10" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 5A 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Panning"
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="20 108 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2842" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEG1Attack" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 5E 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG1 Attack"
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="20 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG1Decay" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DECAY" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="72 28 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG1Attack" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="ATTACK" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="12 28 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2843" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEG1Decay" modulatorMin="0" modulatorValue="117">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 5F 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG1 Decay"
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2844" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEG2Release" modulatorMin="0" modulatorValue="17">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 66 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG2 Release"
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="16" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="200 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG2Sustain" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SUSTAIN" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="132 28 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG2Release" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="RELEASE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="192 28 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2845" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEG2Sustain" modulatorMin="0" modulatorValue="100">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 65 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG2 Sustain"
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="140 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2846" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEG2Attack" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 63 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG2 Attack"
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="20 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG2Decay" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DECAY" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="72 28 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG1Release" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="RELEASE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="192 28 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2847" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEG2Decay" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 64 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG2 Decay"
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2848" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEG1Release" modulatorMin="0" modulatorValue="56">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 61 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG1 Release"
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="16" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="200 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG2Attack" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="ATTACK" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="12 28 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG1Sustain" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SUSTAIN" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="132 28 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2849" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEG1Sustain" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 60 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG1 Sustain"
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="32" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="140 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpLFO1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="LFO 1" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="928 384 156 224"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpLFO2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="LFO 2" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="928 612 156 224"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               uiType="uiGroup" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpDelay" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="DELAY" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="1168 220 228 160"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               uiType="uiGroup" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpVirtualPatch" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="VIRTUAL PATCH"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="1088 560 308 276"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpArpeggiator" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="ARPEGGIATOR"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="104 384 820 96"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="5"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpModulation" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="MODULATION"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="1244 384 152 172"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2850" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobLFO2Frequency" modulatorMin="0" modulatorValue="71">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 6E 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO2 Frequency"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="96 108 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO2Frequency" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="FREQUENCY" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 88 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2851" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobLFO1Frequency" modulatorMin="0" modulatorValue="30">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 69 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO1 Frequency"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="96 108 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO1Frequency" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="FREQUENCY" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 88 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2852" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobPatch1Amount" modulatorMin="-63"
             modulatorValue="63">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 74 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Patch1 Amount"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="28 48 32 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2853" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobPatch4Amount" modulatorMin="-63"
             modulatorValue="2">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 7D 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Patch4 Amount"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="28 228 36 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2854" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobPatch3Amount" modulatorMin="-63"
             modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 7A 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Patch3 Amount"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="28 168 32 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2855" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobPatch2Amount" modulatorMin="-63"
             modulatorValue="20">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 77 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Patch2 Amount"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="28 108 32 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatch1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PATCH 1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="12 28 64 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatch3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PATCH 3" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 148 72 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatch2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PATCH 2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 88 72 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatch4" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PATCH 4" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 208 72 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="2" modulatorIsStatic="1"
             name="grpControl" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="CONTROL"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="928 32 468 184"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2856" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobDelaySpeed" modulatorMin="0" modulatorValue="35">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="12" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mod Speed"
               componentMouseCursor="2" componentGroupName="grpModulation" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="24 116 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblModDepth" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpModulation" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DEPTH" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="72 96 68 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2857" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobDelayDepth" modulatorMin="0" modulatorValue="16">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="93" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mod Depth"
               componentMouseCursor="2" componentGroupName="grpModulation" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="88 116 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblModSpeed" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpModulation" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SPEED" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 96 68 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2858" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobDelayFeedback" modulatorMin="0" modulatorValue="22">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="94" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay Feedback"
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="92 108 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblDelayFeedback" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="FEEDBACK" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="76 88 68 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2859" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobDelayTime" modulatorMin="0" modulatorValue="68">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="13" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay Time"
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="28 108 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblDelayTime" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TIME" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="16 88 56 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpSequencer" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="SEQ EDIT"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="104 484 820 352"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               uiType="uiGroup" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpEqualizer" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="EQUALIZER"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="1088 384 152 172"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="12" vstIndex="2860" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="18432" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobEQLowGain" modulatorMin="-12"
             modulatorValue="4">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 28 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EQ Lo Gain"
               componentMouseCursor="2" componentGroupName="grpEqualizer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-12" uiSliderMax="12" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="92 52 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblEQHighFreq" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEqualizer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="HI FREQ" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="0 96 72 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="29" vstIndex="2861" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEQHighFreq" modulatorMin="0" modulatorValue="22">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 25 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EQ Hi Frequency"
               componentMouseCursor="2" componentGroupName="grpEqualizer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="29" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="15" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="20 116 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblEQHighGain" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEqualizer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="HI GAIN" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="72 96 72 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="12" vstIndex="2862" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobEQHighGain" modulatorMin="-12"
             modulatorValue="5">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 26 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EQ Hi Gain"
               componentMouseCursor="2" componentGroupName="grpEqualizer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-12" uiSliderMax="12" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="92 116 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblEQLowFreq" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEqualizer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LO FREQ" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="0 32 72 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="29" vstIndex="2863" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobEQLowFreq" modulatorMin="0" modulatorValue="15">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 27 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EQ Lo Frequency"
               componentMouseCursor="2" componentGroupName="grpEqualizer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="29" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="14" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="20 52 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblEQLowGain" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEqualizer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LO GAIN" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="72 32 72 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="2864" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbDelayType" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 15 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay Type"
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="STEREODELAY&#10;CROSSDELAY&#10;L/R DELAY"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="16 52 120 24"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblDelayType" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TYPE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiType="uiLabel" componentRectangle="40 28 80 24" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblModType" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpModulation" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TYPE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="32 32 88 24" uiType="uiLabel" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="2865" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbModType" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 18 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mod Type"
               componentMouseCursor="2" componentGroupName="grpModulation" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="CHO/FLG&#10;ENSAMBLE&#10;PHASER"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="16 56 120 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblPatchSource1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SOURCE 1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 28 96 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchDestination1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="2016" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DESTINATION 1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="204 28 80 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="2866" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbPatchSource1" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 72 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Source1"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="EG 1&#10;EG 2&#10;LFO 1&#10;LFO 2&#10;VELOCITY&#10;KBD TRACK&#10;MIDI 1&#10;MIDI 2"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 52 96 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="2867" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbPatchDestination4" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 7C 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Destination4"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="PITCH&#10;OSC 2 PITCH&#10;OSC 1 CTRL 1&#10;NOISE LEVEL&#10;CUTOFF&#10;AMP&#10;PAN&#10;LFO 2 FREQ"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="196 232 96 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="2868" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbPatchSource4" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 7B 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Source4"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="EG 1&#10;EG 2&#10;LFO 1&#10;LFO 2&#10;VELOCITY&#10;KBD TRACK&#10;MIDI 1&#10;MIDI 2"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="80 232 96 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="2869" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbPatchSource3" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 78 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Source3"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="EG 1&#10;EG 2&#10;LFO 1&#10;LFO 2&#10;VELOCITY&#10;KBD TRACK&#10;MIDI 1&#10;MIDI 2"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="80 172 96 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="2870" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbPatchDestination2" modulatorMin="0" modulatorValue="6">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 76 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Destination2"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="PITCH&#10;OSC 2 PITCH&#10;OSC 1 CTRL 1&#10;NOISE LEVEL&#10;CUTOFF&#10;AMP&#10;PAN&#10;LFO 2 FREQ"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="196 112 96 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="2871" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbPatchDestination1" modulatorMin="0" modulatorValue="5">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 73 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="LCD2 Normal;18;1;0;0;0;1.24;2" componentVisibleName="Destination1"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="PITCH&#10;OSC 2 PITCH&#10;OSC 1 CTRL 1&#10;NOISE LEVEL&#10;CUTOFF&#10;AMP&#10;PAN&#10;LFO 2 FREQ"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="196 52 96 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="2872" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbPatchDestination3" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 79 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Destination3"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="PITCH&#10;OSC 2 PITCH&#10;OSC 1 CTRL 1&#10;NOISE LEVEL&#10;CUTOFF&#10;AMP&#10;PAN&#10;LFO 2 FREQ"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="196 172 96 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="2873" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbPatchSource2" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 75 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Source2"
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="EG 1&#10;EG 2&#10;LFO 1&#10;LFO 2&#10;VELOCITY&#10;KBD TRACK&#10;MIDI 1&#10;MIDI 2"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="80 112 96 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchDestination2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DESTINATION 2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="204 88 80 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchDestination3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DESTINATION 3" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="204 148 80 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchDestination4" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DESTINATION 4" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="204 208 80 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchSource2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SOURCE 2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="88 88 80 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchSource3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SOURCE 3" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="88 148 80 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchSource4" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVirtualPatch"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SOURCE 4" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="88 208 80 16"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc2Lamp0" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc2Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_on"
               uiType="uiImage" componentRectangle="8 32 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="5" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc1Lamp5" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc1Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="104 52 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="1" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc2ModLamp1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOscModMode" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="96 52 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="3" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc1Lamp3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc1Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="8 92 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="6" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc1Lamp6" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc1Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="104 72 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc2ModLamp0" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOscModMode" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="96 32 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="2" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc1Lamp2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc1Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="8 72 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="1" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc1Lamp1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc1Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="8 52 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc1Lamp0" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc1Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_on"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="8 32 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="2" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc2Lamp2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc2Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="8 72 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="1" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc2Lamp1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc2Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="8 52 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="7" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc1Lamp7" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc1Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="104 92 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="4" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgOsc1Lamp4" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setOsc1Waveform" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="104 32 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc1VoxWave" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="VOX WAVE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="128 28 60 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc1Noise" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="NOISE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="128 68 44 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc2Sync" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SYNC" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="116 48 36 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc1DWGS" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DWGS" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="128 48 44 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc1AudioIn" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="AUDIO IN" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="128 88 48 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc2Ring" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="RING" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="116 28 36 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc1PWM" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PWM" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="64 52 28 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc1Cross" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="CROSS" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="64 92 28 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="2874"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiOsc1Waveforms" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="drawOsc1Waveforms" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="24 24 40 88" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="2875"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiOsc2Waveforms" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="drawOsc2Waveforms" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="32 24 48 68" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2876" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnAmpDistortion" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 5C 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Distortion"
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="156 116 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageButton" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2877" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cycleOsc1Waveforms"
             name="btnOsc1WaveCycle" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Osc1 Wave"
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="72 136 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblOsc1WaveCycle" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="WAVE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="76 112 52 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilterTypeCycle" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="FILTER TYPE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 168 92 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2878" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnAmpEG2Gate" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 5B 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG2 / Gate"
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="156 56 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc2WaveCycle" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="WAVE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="24 112 52 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2879" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cycleOsc2Waveforms"
             name="btnOsc2WaveCycle" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Osc2 Wave"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="20 136 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblOsc2OscModCycle" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="OSC MOD" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="104 108 60 28"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2880" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cycleOscMod"
             name="btnOsc2OscModCycle" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Osc Modulation"
               componentMouseCursor="2" componentGroupName="grpOsc2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="104 136 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2881" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cycleFilterTypes"
             name="btnFilterTypeCycle" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Filter Type"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="24 192 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;0;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblAmpEG2Gate" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="EG2 / GATE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="152 28 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblAmpDistortion" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DISTORTION" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="152 88 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgFilterTypeLamp0" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setFilterType" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_on"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="120 156 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="1" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgFilterTypeLamp1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setFilterType" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="120 176 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="3" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgFilterTypeLamp3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setFilterType" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="120 216 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="2" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgFilterTypeLamp2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setFilterType" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="120 196 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilter24LPF" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="left"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="24LPF" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="144 156 32 16" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilter12BPF" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="left"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="12BPF" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="144 196 32 16"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilter12LPF" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="left"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="12LPF" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="144 176 32 16"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilter12HPF" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="left"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="12HPF" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="144 216 32 16"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2882" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="1" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cycleBanks"
             name="btnBankNext" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Next Bank"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button_white" componentRectangle="396 40 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2883" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cycleBanks"
             name="btnBankPrev" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Previous Bank"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button_white" componentRectangle="336 40 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2884" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cyclePresets"
             name="btnPatchPrev" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Previous Patch"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button_white" componentRectangle="336 92 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2885" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="1" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cyclePresets"
             name="btnPatchNext" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Next Patch"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button_white" componentRectangle="396 92 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2887" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="presetPopupMenu"
             name="btnPresetMenu" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Panel Menu"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button_red" componentRectangle="396 148 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblBank" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="BANK" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="366 16 60 28"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblBankPrev" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="-" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="344 20 32 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatch" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PATCH" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="364 68 64 28" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblBankNext" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="+" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="416 20 32 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchPrev" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="-" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="344 72 32 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPatchNext" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="+" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="416 72 32 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPresetMenu" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="MENU" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="400 124 48 28" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="2888" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setSelectedTimbre"
             name="btnTimbreOne" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpTimbre" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="16 56 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="2889" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="1" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setSelectedTimbre"
             name="btnTimbreTwo" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpTimbre" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="16 112 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpVoice" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="VOICE" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="8 188 92 500" uiGroupBackgroundImageLayout="36"
               uiGroupBackgroundImageAlpha="255" uiGroupTextPlacement="centredTop"
               uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1" uiGroupOutlineThickness="2"
               uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2" uiType="uiGroup"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreOne" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbre" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="ONE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="44 32 24 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2890" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step2" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 09 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="116 36 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2891" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step4" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 0B 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 4"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="180 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2892" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step5" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 0C 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 5"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="212 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2893" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step6" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 0D 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 6"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="244 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2894" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step3" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 0A 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 3"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="148 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2895" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step7" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 0E 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 7"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="276 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2896" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step9" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 10 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 9"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="340 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2897" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step8" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 0F 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 8"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="308 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2898" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step13" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 14 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 13"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="468 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2899" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step14" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 15 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 14"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="500 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2900" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step16" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 17 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 16"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="564 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2901" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step1" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 08 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 1"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="84 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2902" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step11" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 12 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 11"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="404 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2903" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step10" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 11 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 10"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="372 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2904" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step12" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 13 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 12"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="436 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2905" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq1Step15" modulatorMin="-24"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 16 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 1 Step 15"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="532 36 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="2906"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiSequencerScreen" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintSequencer" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="84 192 512 88" uiCustomMouseDownCallback="sequencerMouseDown"
               uiCustomMouseUpCallback="sequencerMouseUp" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="sequencerMouseDrag" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="sequencerMouseDblClick"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSequence1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEQ 1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiType="uiLabel" componentRectangle="40 40 32 24" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgTimbreLamp0" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpTimbre" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_on"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="20 36 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgTimbreLamp1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpTimbre" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="20 92 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreTwo" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbre" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="left" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TWO" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="44 88 24 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2908" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cycleLFO2Type"
             name="btnLFO2TypeCycle" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO2 Waveform"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="84 52 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="2909" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="cycleLFO1Type"
             name="btnLFO1TypeCycle" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO1 Waveform"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="84 52 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO1TypeCycle" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SELECT" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 28 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO2TypeCycle" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SELECT" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="84 28 60 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgLFO1Lamp0" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setLFO1Type" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="8 28 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="1" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgLFO1Lamp1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setLFO1Type" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="8 48 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="2" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgLFO1Lamp2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setLFO1Type" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="8 68 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="3" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgLFO1Lamp3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setLFO1Type" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_on"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="8 88 14 14"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblLFO1SampleHold" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="S / H" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="28 84 44 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblLFO2SampleHold" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="S / H" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="28 84 44 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="2" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgLFO2Lamp2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setLFO2Type" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_on"
               uiType="uiImage" componentRectangle="8 68 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="3" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgLFO2Lamp3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setLFO2Type" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="8 88 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="1" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgLFO2Lamp1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setLFO2Type" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="8 48 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgLFO2Lamp0" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="setLFO2Type" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               uiType="uiImage" componentRectangle="8 28 14 14" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="2910"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiLFO1Waveforms" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="drawLFO1Waveforms" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="32 24 40 60" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="2911"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiLFO2Waveforms" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="drawLFO2Waveforms" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="32 24 40 60" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="2912"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiSeq2BG" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="No Effect" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintSeq2BG" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="8 76 804 64" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="b4f0c46355000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2913" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step9" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 22 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 9"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="340 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2914" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step9" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 34 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 9"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="340 152 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2915" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step10" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 23 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 10"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="372 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2916" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step10" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 35 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 10"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="372 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2917" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step11" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 36 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 11"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="404 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2918" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step11" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 24 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 11"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="404 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2919" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step12" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 37 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 12"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="436 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2920" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step12" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 25 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 12"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="436 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2921" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step13" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 38 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 13"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="468 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2922" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step14" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 39 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 14"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="500 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2923" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step15" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 3A 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 15"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="532 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2924" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step16" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 3B 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 16"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="564 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2925" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step13" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 26 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 13"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="468 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2926" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step14" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 27 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 14"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="500 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2927" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step15" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 28 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 15"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="532 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2928" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step16" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 29 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 16"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="564 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2929" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step1" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1A 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 1"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="84 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2930" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step1" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 2C 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 1"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="84 152 28 32" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2931" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step2" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 2D 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="116 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2932" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step2" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1B 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="116 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2933" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step3" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 2E 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 3"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="148 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2934" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step3" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1C 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 3"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="148 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2935" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step4" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1D 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 4"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="180 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2936" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step4" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 2F 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 4"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="180 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2937" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step5" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1E 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 5"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="212 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2938" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step5" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 30 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 5"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="212 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2939" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step6" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 31 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 6"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="244 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2940" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step6" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1F 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 6"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="244 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2941" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step7" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 32 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 7"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="276 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2942" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step7" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 20 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 7"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="276 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2943" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="2" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq3Step8" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 33 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 3 Step 8"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="308 152 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2944" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="1" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="lampFiring" name="knobSeq2Step8" modulatorMin="-63"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 21 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq 2 Step 8"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="308 92 28 32" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSequence2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEQ 2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="40 96 32 24" uiType="uiLabel" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSequence3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEQ 3" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="40 156 32 24" uiType="uiLabel" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgSeqLamp0" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="lampFiringComp" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_on"
               uiType="uiImage" componentRectangle="16 44 16 16" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="1" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgSeqLamp1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="lampFiringComp" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="16 100 16 16"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorCustomIndex="2" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="imgSeqLamp2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="lampFiringComp" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageResource="radio_off"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="16 160 16 16"
               uiType="uiImage"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="30" vstIndex="2945" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="assertSeqKnobBounds"
             name="cbSeqKnob1" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 06 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Knob1"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="NONE&#10;PITCH&#10;STEP LENGTH&#10;PORTAMENTO&#10;OSC1 CTRL1&#10;OSC1 CTRL2&#10;OSC2 SEMI&#10;OSC2 TUNE&#10;OSC1 LEVEL&#10;OSC2 LEVEL&#10;NOISE LEVEL&#10;CUTOFF&#10;RESONANCE&#10;EG1 INT&#10;KBD TRK&#10;AMP LEVEL&#10;PANPOT&#10;EG1 ATTACK&#10;EG1 DECAY&#10;EG1 SUSTAIN&#10;EG1 RELEASE&#10;EG2 ATTACK&#10;EG2 DECAY&#10;EG2 SUSTAIN&#10;EG2 RELEASE&#10;LFO1 FREQ&#10;LFO2 FREQ&#10;PATCH1 INT&#10;PATCH2 INT&#10;PATCH3 INT&#10;PATCH4 INT"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiCombo" componentRectangle="612 48 88 24" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="30" vstIndex="2946" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="2" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="assertSeqKnobBounds"
             name="cbSeqKnob3" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 2A 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Knob3"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="NONE&#10;PITCH&#10;STEP LENGTH&#10;PORTAMENTO&#10;OSC1 CTRL1&#10;OSC1 CTRL2&#10;OSC2 SEMI&#10;OSC2 TUNE&#10;OSC1 LEVEL&#10;OSC2 LEVEL&#10;NOISE LEVEL&#10;CUTOFF&#10;RESONANCE&#10;EG1 INT&#10;KBD TRK&#10;AMP LEVEL&#10;PANPOT&#10;EG1 ATTACK&#10;EG1 DECAY&#10;EG1 SUSTAIN&#10;EG1 RELEASE&#10;EG2 ATTACK&#10;EG2 DECAY&#10;EG2 SUSTAIN&#10;EG2 RELEASE&#10;LFO1 FREQ&#10;LFO2 FREQ&#10;PATCH1 INT&#10;PATCH2 INT&#10;PATCH3 INT&#10;PATCH4 INT"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="612 164 88 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="30" vstIndex="2947" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="1" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="assertSeqKnobBounds"
             name="cbSeqKnob2" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 18 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Knob2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="NONE&#10;PITCH&#10;STEP LENGTH&#10;PORTAMENTO&#10;OSC1 CTRL1&#10;OSC1 CTRL2&#10;OSC2 SEMI&#10;OSC2 TUNE&#10;OSC1 LEVEL&#10;OSC2 LEVEL&#10;NOISE LEVEL&#10;CUTOFF&#10;RESONANCE&#10;EG1 INT&#10;KBD TRK&#10;AMP LEVEL&#10;PANPOT&#10;EG1 ATTACK&#10;EG1 DECAY&#10;EG1 SUSTAIN&#10;EG1 RELEASE&#10;EG2 ATTACK&#10;EG2 DECAY&#10;EG2 SUSTAIN&#10;EG2 RELEASE&#10;LFO1 FREQ&#10;LFO2 FREQ&#10;PATCH1 INT&#10;PATCH2 INT&#10;PATCH3 INT&#10;PATCH4 INT"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="612 104 88 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqKnob1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KNOB 1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="620 28 72 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqKnob3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KNOB 3" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="620 144 72 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqKnob2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KNOB 2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="620 84 72 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqMotion3" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="MOTION 3" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="720 144 72 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2948" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbSeqMotion1" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 07 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Motion1"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="SMOOTH&#10;STEP"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="720 48 72 24" uiType="uiCombo" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqMotion2" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="MOTION 2" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="720 84 72 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2949" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbSeqMotion2" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 19 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Motion2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="SMOOTH&#10;STEP"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="720 104 72 24" uiType="uiCombo" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqMotion1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="MOTION 1" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="720 28 72 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2950" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbSeqMotion3" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 2B 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Motion3"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="SMOOTH&#10;STEP"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="720 164 72 24" uiType="uiCombo" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqLastStep" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LAST STEP" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="620 204 72 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="2951" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue - 1"
             modulatorValueExpressionReverse="midiValue + 1" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="externalRepaintSequencer"
             name="knobSeqLastStep" modulatorMin="1" modulatorValue="16">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 01 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Last Step"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="1" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="16" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="636 224 40 40" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqType" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEQ TYPE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="104 288 92 24" uiType="uiLabel" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="2952" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbSeqType" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 02 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Type"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="FORWARD&#10;REVERSE&#10;ALT 1&#10;ALT 2"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="84 312 136 24"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqRunMode" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="RUN MODE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiType="uiLabel" componentRectangle="296 288 88 24" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="15" vstIndex="2953" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbSeqResolution" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 05 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Resolution"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1/48&#10;1/32&#10;1/24&#10;1/16&#10;1/12&#10;3/32&#10;1/8&#10;1/6&#10;3/16&#10;1/4&#10;1/3&#10;3/8&#10;1/2&#10;2/3&#10;3/4&#10;1/1"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="644 312 136 24"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqResolution" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="RESOLUTION" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiType="uiLabel" componentRectangle="668 288 88 24" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2954" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbSeqRunMode" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 03 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Mode"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1 SHOT&#10;LOOP"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="272 312 136 24"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqKeySync" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KEY SYNC" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiType="uiLabel" componentRectangle="484 288 88 24" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="2955" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbSeqKeySync" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 04 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq KeySync"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;TIMBRE&#10;VOICE"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="460 312 136 24"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSeqOnOff" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="ON / OFF" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="720 204 72 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2956" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnSeqOnOff" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 00 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Seq Switch"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="728 232 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblFilterVeloSens" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="VELO SENS" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="136 88 60 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2957" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobFilterVeloSens" modulatorMin="-63"
             modulatorValue="15">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 62 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Velocity Sens"
               componentMouseCursor="2" componentGroupName="grpFilter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiImageSlider"
               componentRectangle="148 108 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG1Reset" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="EG RESET" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="252 28 60 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2958" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnEG1Reset" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 3C 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpEG1Filter" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="252 56 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiImageButton" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblEG2Reset" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="EG RESET" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="252 28 60 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2959" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnEG2Reset" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 3D 01 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpEG2Amp" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="252 56 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageButton" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO2SyncNote" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SYNC NOTE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="12 160 60 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="2960" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbLFO2SyncNote" modulatorMin="0" modulatorValue="12">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 6F 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO2 SyncNote"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1/1&#10;3/4&#10;2/3&#10;1/2&#10;3/8&#10;1/3&#10;1/4&#10;3/16&#10;1/6&#10;1/8&#10;3/32&#10;1/12&#10;1/16&#10;1/24&#10;1/32"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="16 184 52 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO2TempoSync" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TMP SYNC" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="12 108 60 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2961" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setLFO2TempoSyncReactions"
             name="btnLFO2TempoSync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 70 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO2 TempoSync"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="12 132 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiImageButton" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2962" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setLFO1TempoSyncReactions"
             name="btnLFO1TempoSync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 6B 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO1 TempoSync"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="12 132 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageButton" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO1TempoSync" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TMP SYNC" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="12 108 60 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO1SyncNote" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SYNC NOTE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="12 160 60 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="2963" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbLFO1SyncNote" modulatorMin="0" modulatorValue="3">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 6A 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO1 SyncNote"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1/1&#10;3/4&#10;2/3&#10;1/2&#10;3/8&#10;1/3&#10;1/4&#10;3/16&#10;1/6&#10;1/8&#10;3/32&#10;1/12&#10;1/16&#10;1/24&#10;1/32"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657"
               uiType="uiCombo" componentRectangle="16 184 52 24" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblAmpVeloSens" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="VELO SENS" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 88 60 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2964" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobAmpVeloSens" modulatorMin="-63"
             modulatorValue="16">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 67 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Velo Sens"
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="ffbababa"
               uiLabelTextColour="ff334657" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="92 108 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2965" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobAmpKeyTrack" modulatorMin="-63"
             modulatorValue="-20">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="7" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 5D 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp KBD Track"
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="ffbababa"
               uiLabelTextColour="ff334657" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="92 52 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblAmpKeyTrack" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpAmp" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KBD TRK" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 28 60 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpKeySync" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KEY SYNC" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="188 28 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2967" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnArpKeySync" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 22 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp KeySync"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="192 56 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpLatch" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LATCH" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="108 28 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2968" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnArpLatch" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1E 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Latch"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="112 56 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpOnOff" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="ON / OFF" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="28 28 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2969" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnArpOnOff" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1B 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Switch"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="32 56 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpRange" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="RANGE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="368 28 76 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="2971" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbArpType" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1C 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Type"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="UP&#10;DOWN&#10;ALT 1&#10;ALT 2&#10;RANDOM&#10;TRIGGER"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="460 56 76 24"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpResolution" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="RESOLUTION" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="276 28 76 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="2972" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbArpResolution" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 23 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Resolution"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1/24&#10;1/16&#10;1/12&#10;1/8&#10;1/6&#10;1/4"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="276 56 76 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpType" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TYPE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="460 28 76 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="2973" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbArpRange" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1D 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Range"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1 OCTAVE&#10;2 OCTAVE&#10;3 OCTAVE&#10;4 OCTAVE"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="368 56 76 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="2974" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobArpGate" modulatorMin="0" modulatorValue="60">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 20 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Gate"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="560 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpTempo" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TEMPO" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="612 28 44 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="300" vstIndex="2975" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobArpTempo" modulatorMin="20" modulatorValue="140">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 1F 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Tempo"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="20" uiSliderMax="300" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="140" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="616 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpGate" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="GATE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="556 28 44 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="100" vstIndex="2976" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobArpSwing" modulatorMin="-100"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 24 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Swing"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-100" uiSliderMax="100" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="672 48 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblArpSwing" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SWING" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="668 28 44 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblDelayTempoSync" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TMP SYNC" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="152 28 64 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2977" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setDelayTempoSyncReactions"
             name="btnDelayTempoSync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 29 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay TempoSync"
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="156 52 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblDelaySyncNote" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SYNC NOTE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="148 88 76 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="2978" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbDelaySyncNote" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 2A 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay SyncNote"
               componentMouseCursor="2" componentGroupName="grpDelay" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1/32&#10;1/24&#10;1/16&#10;1/12&#10;3/32&#10;1/8&#10;1/6&#10;3/16&#10;1/4&#10;1/3&#10;3/8&#10;1/2&#10;2/3&#10;3/4&#10;1/1"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="156 116 56 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblArpTarget" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TARGET" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="728 28 76 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="2979" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbArpTarget" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 21 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Arp Target"
               componentMouseCursor="2" componentGroupName="grpArpeggiator"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="BOTH&#10;TIMBRE 1&#10;TIMBRE 2"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="728 56 76 24"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="2" modulatorIsStatic="1"
             name="grpGlobal" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="GLOBAL" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="8 692 92 144" uiGroupBackgroundImageLayout="36"
               uiGroupBackgroundImageAlpha="255" uiGroupTextPlacement="centredTop"
               uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1" uiGroupOutlineThickness="2"
               uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2" uiType="uiGroup"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpTimbreSettings" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="TIMBRE SETTINGS"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="768 32 156 348"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiGroup"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbreTranspose" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TRANSPOSE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="8 88 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="2980" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobTimbreTranspose"
             modulatorMin="-24" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 44 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Transpose"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-24" uiSliderMax="24" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="ffbababa"
               uiLabelTextColour="ff334657" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="24 108 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;0;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbreTune" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TUNE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="80 88 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="50" vstIndex="2981" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobTimbreTune" modulatorMin="-50"
             modulatorValue="-3">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 45 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Voice Tune"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-50" uiSliderMax="50" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="ffbababa"
               uiLabelTextColour="ff334657" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="96 108 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="12" vstIndex="2982" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobTimbreBendRange"
             modulatorMin="-12" modulatorValue="2">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 48 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Bend Range"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-12" uiSliderMax="12" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="ffbababa"
               uiLabelTextColour="ff334657" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="24 172 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbreBendRange" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="BEND RANGE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 152 68 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="63" vstIndex="2983" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue, 0, modulatorValue - 16384, modulatorValue)"
             modulatorValueExpressionReverse="gt(midiValue, modulatorMax, midiValue - 16384, midiValue)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="-- None"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="knobTimbreVibrato" modulatorMin="-63"
             modulatorValue="4">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 46 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Vibrato"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="-63" uiSliderMax="63" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="ffbababa"
               uiLabelTextColour="ff334657" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="96 172 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbreVibrato" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="VIBRATO" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="80 152 68 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbrePriority" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PRIORITY" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="8 28 68 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="2985" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbTimbrePriority" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 7E 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Key Priority"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="LAST&#10;LOW&#10;HIGH"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="12 52 60 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbreAssign" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="ASSIGN" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="80 28 68 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="2986" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setTimbreAssignReactions"
             name="cbTimbreAssign" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 40 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Assign"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="MONO&#10;POLY&#10;UNISON"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="84 52 60 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbreMidiCh" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="MIDI CH" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="80 216 68 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="2987" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="lt(modulatorValue - 1, 0, modulatorValue - 1 - 16384, modulatorValue - 1)"
             modulatorValueExpressionReverse="gt(midiValue + 1, modulatorMax, midiValue + 1 - 16384, midiValue + 1)"
             modulatorControllerExpression="value" luaModulatorGetValueForMIDI="checkLCDModeEnabled"
             luaModulatorGetValueFromMIDI="-- None" modulatorLinkedToPanelProperty="-- None"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="cbTimbreMidiCh" modulatorMin="0"
             modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 43 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="MIDI Channel"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="GLOBAL&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="84 240 60 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbreTrigger" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TRIGGER" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="8 216 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="2988" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbTimbreTrigger" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 41 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EG Trigger"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="SINGLE&#10;MULTI"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657"
               uiType="uiCombo" componentRectangle="12 240 60 24" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="99" vstIndex="2989" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobTimbreDetune" modulatorMin="0" modulatorValue="10">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 42 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Uni Detune"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="99" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="ffbababa"
               uiLabelTextColour="ff334657" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="24 296 36 36" uiType="uiImageSlider" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbreDetune" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DETUNE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="8 276 68 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblTimbrePorta" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="PORTA" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="80 276 68 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2990" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="knobTimbrePorta" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 47 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Portamento"
               componentMouseCursor="2" componentGroupName="grpTimbreSettings"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelBgColour="ffbababa"
               uiLabelTextColour="ff334657" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="96 296 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreVoiceMode" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="VOICE&#10;MODE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="16 36 60 44"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="2992" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setVoiceModeReactions"
             name="cbTimbreVoiceMode" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 10 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Voice Mode"
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="SINGLE&#10;SPLIT&#10;DUAL&#10;VOCODER"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="33512cdb54000000feffffffffffffff" componentRectangle="8 84 76 24"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreVoice" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TIMBRE&#10;VOICE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="16 124 60 44" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="2993" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbTimbreVoice" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 12 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Timbre Voice"
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1+3&#10;2+2&#10;3+1"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 172 76 24"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreSplitPoint" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SPLIT&#10;POINT" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="16 212 60 44" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreScaleKey" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SCALE KEY" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="12 428 68 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="11" vstIndex="2995" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbTimbreScaleKey" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 14 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Scale Key"
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="C&#10;C#&#10;D&#10;D#&#10;E&#10;F&#10;F#&#10;G&#10;G#&#10;A&#10;A#&#10;B"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 456 76 24"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreScaleType" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SCALE&#10;TYPE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="16 336 60 44" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="9" vstIndex="2996" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbTimbreScaleType" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 13 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Scale Type"
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="EQUAL TEMP&#10;PURE MAJOR&#10;PURE MINOR&#10;ARABIC&#10;PYTHAGOREA&#10;WERCKMEIST&#10;KIRNBERGER&#10;SLENDORO&#10;PELOG&#10;USER SCALE"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 384 76 24"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="2997" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="1"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="showSettings"
             name="btnSettings" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpGlobal" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button" componentRectangle="16 72 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettings" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpGlobal" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SETTINGS" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="16 48 60 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="2999" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="showSplitPointNote"
             name="knobTimbreSplitPoint" modulatorMin="0" modulatorValue="60">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 11 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Split Point"
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="checkLCDModeEnabled" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiImageSliderResource="MS2000_Knob_Grey" resourceImageWidth="64"
               resourceImageHeight="64" resourceImagePaintMode="36" resourceImageOrientation="1"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="60" uiSliderValuePosition="0" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderValueTextColour="0xff000000"
               uiSliderValueBgColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               uiType="uiImageSlider" componentRectangle="28 256 36 36" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreSplitPointValue" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="C4" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="28 296 36 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO2KeySync" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KEY SYNC" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="84 160 64 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="3000" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbLFO2KeySync" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 71 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO2 KeySync"
               componentMouseCursor="2" componentGroupName="grpLFO2" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;TIMBRE&#10;VOICE"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657"
               uiType="uiCombo" componentRectangle="92 184 52 24" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="lblLFO1KeySync" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0" uiLabelTextColour="ffbababa"
               uiLabelOutline="0" uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="KEY SYNC" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="84 160 64 20"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="3001" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="checkLCDModeEnabled" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbLFO1KeySync" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 42 3y 58 41 6C 00 LS MS F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="LFO1 KeySync"
               componentMouseCursor="2" componentGroupName="grpLFO1" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;TIMBRE&#10;VOICE"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelBgColour="ffbababa" uiLabelTextColour="ff334657"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="92 184 52 24" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grpSettingsBackground" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="PANEL SETTINGS"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="fb334657" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="104 384 820 452"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="0" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="5"
               componentLayerUid="d2af48dc54000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpSettingsSynth" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsBackground"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="SYNTH OPTIONS"
               uiGroupTextColour="ffbababa" uiGroupOutlineColour1="ffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ff334657"
               uiGroupBackgroundColour2="0" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="0" uiGroupBackgroundImage="" componentRectangle="0 308 820 144"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="centredTop" uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="0" uiGroupTextMargin="5"
               uiType="uiGroup" componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="2" modulatorIsStatic="1"
             name="grpSettingsPanel" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsBackground"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="0 0 820 304" uiGroupBackgroundImageLayout="36"
               uiGroupBackgroundImageAlpha="255" uiGroupTextPlacement="centredTop"
               uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1" uiGroupOutlineThickness="1"
               uiGroupOutlineRoundAngle="0" uiGroupTextMargin="5" uiType="uiGroup"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3002" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="debugActions"
             name="btnDebug" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="1420 520 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblDebug" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DEBUG" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="1428 496 44 24"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsSPOS" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="ffaaaaaa"
               uiLabelTextColour="ff334657" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEND PROGRAM&#10;ON STARTUP" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="40 40 96 48"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="3003" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnSendProgramOnStartup" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Send Program on Startup"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button_white" componentRectangle="60 96 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsSDOPC" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEND DATA ON&#10;PROGRAM CHANGE" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="d2af48dc54000000feffffffffffffff"
               componentRectangle="32 176 112 44" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="3004" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnSendDataOnProgramChange" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Autosend Data"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button_white" componentRectangle="60 228 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d2af48dc54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsClockSource" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsSynth"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="CLOCK SOURCE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="d2af48dc54000000feffffffffffffff"
               componentRectangle="164 52 108 28" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="2" vstIndex="3005" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbClockSource" modulatorMin="0" modulatorValue="2">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Clock Source"
               componentMouseCursor="2" componentGroupName="grpSettingsSynth"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="INTERNAL&#10;EXTERNAL&#10;AUTO"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="d2af48dc54000000feffffffffffffff" componentRectangle="176 88 84 24"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3006"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiInfoScreen" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Info Screen"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintInfoWindow" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1264 4 108 24" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="600e87d654000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsCPol" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="CONTINUOUS&#10;POLLING" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="d2af48dc54000000feffffffffffffff"
               componentRectangle="280 44 112 44" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="3008" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnContinuousPolling" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Continuous Polling"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button_white" componentRectangle="308 96 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d2af48dc54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsLocalMode" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsSynth"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="LOCAL MODE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="36 52 108 28"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="3009" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnSettingsLocalMode" modulatorMin="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Local Mode"
               componentMouseCursor="2" componentGroupName="grpSettingsSynth"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button_white" componentRectangle="60 88 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsCPol-1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="AUTO CHECK&#10;LCD MODE" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="156 44 112 44"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="3010" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnAutocheckLCDMode" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Autocheck LCD Mode"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button_white" componentRectangle="184 96 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3011"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiAboutInfo" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="About Info"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintAboutInfo" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="8 4 920 24" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="600e87d654000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3012"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiHintScreen" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Hint Screen"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintHintWindow" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="928 4 336 24" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="600e87d654000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3013"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiMidiActivity" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="MIDI Activity"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintMidiActivity" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="1372 4 24 24" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="600e87d654000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="3014" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="sendBufferedProgram"
             name="btnPatchSend" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Send Program"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button_white" componentRectangle="336 148 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblPresetMenu-1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEND" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="340 124 52 28"
               componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsDW" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="DISABLE&#10;WARNINGS" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="d2af48dc54000000feffffffffffffff"
               componentRectangle="284 176 104 44" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="1" vstIndex="3015" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnDisableWarnings" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Disable Warnings"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button_white" componentRectangle="308 228 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d2af48dc54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3018" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="debugActions"
             name="btnEmergency" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpVoice" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button" componentRectangle="648 843 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="33512cdb54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="1" modulatorIsStatic="1"
             name="grpTimbre" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="TIMBRE" uiGroupTextColour="ffbababa"
               uiGroupOutlineColour1="ffa3a3a3" uiGroupOutlineColour2="0xffffffff"
               uiGroupBackgroundColour1="ff334657" uiGroupBackgroundColour2="0"
               uiGroupOutlineGradientType="Vertical" uiGroupBackgroundGradientType="0"
               uiGroupBackgroundImage="" componentRectangle="8 32 92 152" uiGroupBackgroundImageLayout="36"
               uiGroupBackgroundImageAlpha="255" uiGroupTextPlacement="centredTop"
               uiGroupTextFont="Bebas Neue Regular;26;0;0;0;0;1.24;1" uiGroupOutlineThickness="2"
               uiGroupOutlineRoundAngle="0" uiGroupTextMargin="2" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsLocalMode-1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsSynth"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEND SETTINGS&#10;TO SYNTHESIZER" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="d2af48dc54000000feffffffffffffff"
               componentRectangle="688 36 108 40" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="3020" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="mergePanelSynthSettings"
             name="btnSendSettingsToSynth" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Store Settings"
               componentMouseCursor="2" componentGroupName="grpSettingsSynth"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button_red" componentRectangle="716 88 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d2af48dc54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3021"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiTimbreBuffer" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintTimbreCPButtons" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="12 216 64 16" uiCustomMouseDownCallback="bufferMouseClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3022"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="1" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiSequenceBuffer" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintTimbreCPButtons" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="12 316 64 16" uiCustomMouseDownCallback="bufferMouseClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblTimbreBuffer" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="TIMBRE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiType="uiLabel" componentRectangle="12 192 64 20" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSequenceBuffer" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="SEQUENCE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiComboFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiType="uiLabel" componentRectangle="12 288 64 24" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="0" vstIndex="3023" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="requestSynthSettingsMod"
             name="btnRequestSettings" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Request Settings"
               componentMouseCursor="2" componentGroupName="grpSettingsSynth"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="select_button_white" componentRectangle="588 88 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="1" uiImageButtonTextPosition="none" uiImageButtonTextWidth="0"
               uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               componentLayerUid="d2af48dc54000000feffffffffffffff" uiType="uiImageButton"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsRequestSettings" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsSynth"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="REQUEST SETTINGS&#10;FROM SYNTHESIZER" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="556 36 112 40"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3023"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiBankPatchLine" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="1" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintSynthSideLines" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="312 40 28 72" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="3024"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiSynthSideSelector" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintSynthSideSelector" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="248 64 66 24" uiCustomMouseDownCallback="synthSideSelectorClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="33512cdb54000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblBank-1" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpControl" componentGroupped="1"
               componentSnapSize="4" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="HARDWARE" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="33512cdb54000000feffffffffffffff"
               componentRectangle="252 36 60 28" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="7" vstIndex="10978" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbInputMIDIDevice" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input MIDI Device"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-- None&#10;Focusrite USB MIDI&#10;VirtualMIDI&#10;micro lite: Port 1&#10;micro lite: Port 2&#10;micro lite: Port 3&#10;micro lite: Port 4&#10;micro lite: Port 5"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="d2af48dc54000000feffffffffffffff" componentRectangle="504 172 184 24"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="8" vstIndex="10979" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbOutputMIDIDevice" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output MIDI Device"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-- None&#10;Microsoft GS Wavetable Synth&#10;Focusrite USB MIDI&#10;VirtualMIDI&#10;micro lite: Port 1&#10;micro lite: Port 2&#10;micro lite: Port 3&#10;micro lite: Port 4&#10;micro lite: Port 5"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="504 236 184 24"
               componentLayerUid="d2af48dc54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="15" vstIndex="10980" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbOutputMIDIChannel" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output MIDI Channel"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="d2af48dc54000000feffffffffffffff" componentRectangle="704 236 56 24"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="16" vstIndex="10981" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbInputMIDIChannel" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input MIDI Channel"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="ALL&#10;1&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;10&#10;11&#10;12&#10;13&#10;14&#10;15&#10;16"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="704 172 56 24"
               componentLayerUid="d2af48dc54000000feffffffffffffff" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblMIDIInputDevice" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="INPUT MIDI DEVICE" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="d2af48dc54000000feffffffffffffff"
               componentRectangle="504 148 184 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblMIDIOutputDevice" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="OUTPUT MIDI DEVICE" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="504 212 184 20"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblMIDIInputChannel" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="CHANNEL" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="d2af48dc54000000feffffffffffffff"
               componentRectangle="704 148 56 20" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblMIDIOutputChannel" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="CHANNEL" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="704 212 56 20"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="65536" vstIndex="10982"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="settingsFancyBG" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="1" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintSettingsBG" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="4 136 812 164" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblColorScheme" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="COLOR SCHEME" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" componentLayerUid="d2af48dc54000000feffffffffffffff"
               componentRectangle="504 60 184 28" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="0" modulatorMax="3" vstIndex="10983" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="cbColorScheme" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="0" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Color Scheme"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="ff"
               uiComboOutlineColour="bababa" uiComboTextColour="ffa6914f" uiComboTextJustification="centred"
               uiComboFont="Roboto Condensed;22;0;0;0;0;0.8;1" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiComboButtonColour="ff" uiComboBgColour="10ffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="CLASSIC&#10;BLACK&#10;NORD&#10;JP8080"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="1"
               uiComboButtonWidth="0" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"
               componentLayerUid="d2af48dc54000000feffffffffffffff" componentRectangle="504 96 184 24"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="10984"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnEmergency">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintButtonEmergency" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="796 4 20 20" uiCustomMouseDownCallback="-- None"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="emergencyClick"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" componentLayerUid="d2af48dc54000000feffffffffffffff"
               uiType="uiCustomComponent"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lblSettingsRDOPC" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="00000000"
               uiLabelTextColour="ffbababa" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="Bebas Neue Regular;22;0;0;0;0;1.04;1"
               uiLabelText="REQUEST DATA ON&#10;PROGRAM CHANGE" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiGroupOutlineColour1="ffa3a3a3" uiType="uiLabel" componentRectangle="156 176 112 44"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="10985" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnRequestDataOnProgramChange" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Autorequest Data"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiImageButtonMode="0"
               uiImageButtonResource="toggle_button_white" componentRectangle="184 228 60 25"
               resourceImageWidth="60" resourceImageHeight="25" resourceImagePaintMode="36"
               resourceImageOrientation="1" uiImageButtonTextColour="0xff000000"
               uiImageButtonContent="0&#10;1" uiImageButtonTextPosition="none"
               uiImageButtonTextWidth="0" uiImageButtonTextHeight="32" uiButtonTextFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiButtonTextJustification="centred" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2" uiType="uiImageButton"
               componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="10986"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="uiTimbreRandomize" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpSequencer" componentGroupped="1"
               componentSnapSize="2" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintRandomizeButton" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="12 244 64 16" uiCustomMouseDownCallback="randomizeProgramData"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="33512cdb54000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="10987"
             modulatorIsStatic="0" modulatorGlobalVariable="-1" modulatorMuteOnStart="0"
             modulatorMute="0" modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnMIDISettings" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="4" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiCustomResizedCallback="-- None"
               uiCustomPaintCallback="paintMIDISettingsButton" uiCustomPaintOverChildrenCallback="-- None"
               componentRectangle="772 4 20 20" uiCustomMouseDownCallback="midiSettingsClick"
               uiCustomMouseUpCallback="-- None" uiCustomMouseEnterCallback="-- None"
               uiCustomMouseExitCallback="-- None" uiCustomMouseMoveCallback="-- None"
               uiCustomMouseDragCallback="-- None" uiCustomKeyDownCallback="-- None"
               uiCustomKeyStateChangedCallback="-- None" uiCustomMouseDoubleClickCallback="-- None"
               uiCustomMouseWheelMoveCallback="-- None" uiCustomStartDraggingCallback="-- None"
               uiCustomIsInterestedInDragSourceCallback="-- None" uiCustomItemDragEnterCallback="-- None"
               uiCustomItemDragMoveCallback="-- None" uiCustomItemDragExitCallback="-- None"
               uiCustomItemDroppedCallback="-- None" uiCustomDragAndDropTarget="0"
               uiCustomDragAndDropContainer="0" uiCustomDrawDragImageWhenOver="0"
               uiCustomAllowExternalDrags="0" uiCustomMouseDownGrabsFocus="0"
               uiCustomWantsKeyboardFocus="0" uiType="uiCustomComponent" componentLayerUid="d2af48dc54000000feffffffffffffff"
               uiLabelFont="LCD2 Normal;18;1;0;0;0;1.12;2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="10988" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnMidiDeviceDialogHidden" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="MIDI Device Dialog"
               componentMouseCursor="2" componentGroupName="grpSettingsPanel"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="0" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="1"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff"
               uiButtonColourOff="4364ff" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="False&#10;True"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="1"
               componentRectangle="748 4 20 19" uiType="uiButton" componentLayerUid="d2af48dc54000000feffffffffffffff"/>
  </modulator>
  <panelCustomData dataBuffer="240,66,48,88,64,83,116,97,98,32,83,97,119,32,32,32,32,1,0,0,0,64,0,60,0,68,22,0,35,16,0,22,69,15,68,0,140,65,18,60,1,0,0,255,112,10,61,66,64,68,0,0,0,0,0,0,64,70,0,120,108,0,0,33,25,106,79,76,127,64,0,80,44,0,117,0,56,0,12,100,17,35,30,3,2,71,12,81,127,98,84,19,65,18,66,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program1="240,66,48,88,64,83,116,97,98,32,83,97,119,32,32,32,32,1,0,0,0,64,0,60,0,68,22,0,35,16,0,22,69,15,68,0,140,65,18,60,1,0,0,255,112,10,61,66,64,68,0,0,0,0,0,0,64,70,0,120,108,0,0,33,25,106,79,76,127,64,0,80,44,0,117,0,56,0,12,100,17,35,30,3,2,71,12,81,127,98,84,19,65,18,66,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program2="240,66,48,88,64,83,121,110,116,104,32,76,97,110,97,32,32,1,7,0,0,64,0,60,0,78,85,0,44,103,0,20,64,15,64,0,140,128,16,80,1,0,0,255,112,10,64,66,64,69,0,0,0,0,0,0,66,44,0,127,108,0,1,47,63,74,64,64,102,64,1,84,64,0,0,127,127,0,38,6,45,2,76,134,2,67,12,66,76,16,64,66,70,98,84,192,249,16,0,24,38,47,54,58,60,62,62,65,66,68,70,74,81,90,104,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,2,1,70,67,64,63,62,61,60,59,59,60,61,62,63,64,67,70,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program3="240,66,48,88,64,69,118,111,108,117,116,105,111,110,32,32,32,1,6,0,0,64,0,60,0,68,90,2,43,82,1,21,75,5,70,0,180,0,18,99,5,0,0,255,64,0,64,66,64,65,1,0,106,0,0,2,57,64,0,80,100,0,1,73,15,64,64,81,127,64,0,94,64,0,0,127,94,91,29,127,84,34,34,14,34,69,14,19,67,114,84,81,99,98,64,192,242,25,0,50,55,57,63,66,69,71,71,71,69,67,65,61,59,56,53,30,0,89,85,82,78,75,71,68,64,68,71,75,78,82,85,89,92,24,1,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program4="240,66,48,88,64,66,111,111,115,116,32,66,97,115,115,32,32,2,3,0,0,64,0,60,135,40,0,2,46,15,1,0,71,24,72,0,124,65,0,80,1,0,0,255,48,10,64,66,40,64,0,0,0,0,0,33,53,64,10,96,96,0,0,21,58,80,80,108,127,64,0,74,54,2,63,20,49,1,60,110,19,16,10,140,2,76,12,71,94,81,109,66,64,0,64,67,241,1,1,64,64,74,76,64,79,64,64,65,65,74,76,65,79,65,65,29,1,88,80,88,80,80,80,80,80,88,80,88,80,80,80,80,80,11,1,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program5="240,66,48,88,64,68,105,114,116,121,32,83,121,110,99,32,32,1,2,0,0,64,0,60,0,80,30,0,10,0,0,21,71,22,70,0,120,0,3,80,1,0,0,255,176,6,64,66,40,64,0,64,0,0,0,32,64,97,4,127,127,0,1,127,68,61,64,64,108,64,0,84,64,0,85,14,78,0,40,127,55,2,10,3,2,33,12,16,127,71,18,23,13,99,81,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program6="240,66,48,88,64,90,111,111,112,32,77,97,110,105,97,32,32,0,4,0,0,96,0,60,133,5,0,2,127,0,2,20,66,16,73,0,128,209,17,80,1,0,0,255,112,10,64,76,52,127,3,38,22,0,0,2,88,64,0,127,0,0,1,127,0,64,64,64,90,64,0,109,64,0,40,0,40,0,42,0,42,17,0,134,16,107,12,117,96,21,30,18,80,3,64,195,241,30,1,64,64,64,64,127,64,64,64,64,64,64,25,64,64,16,64,22,1,39,59,61,73,78,72,62,32,23,23,32,65,73,39,92,59,1,1,64,64,64,64,73,60,64,64,64,64,64,64,64,64,64,82,255,49,0,64,52,40,16,3,1,12,0,0,33,40,1,0,127,60,50,3,110,25,64,64,64,80,64,0,64,1,0,64,127,127,0,64,127,30,16,10,134,17,70,134,82,127,67,1,82,127,51,1,198,241,9,1,127,127,1,1,1,1,1,1,127,127,1,1,1,1,1,1,4,1,64,64,64,64,64,64,64,64,64,64,64,64,64,121,67,79,15,1,64,64,64,64,64,64,64,64,64,64,64,64,64,44,47,64,247"
                   bank1Program7="240,66,48,88,64,73,99,101,32,70,105,101,108,100,32,32,32,0,1,0,0,64,0,60,0,66,90,2,26,38,0,28,69,4,59,0,90,64,17,50,1,0,0,255,112,10,79,66,76,65,2,0,0,0,0,2,64,56,0,35,36,127,1,24,105,66,64,112,127,64,0,102,24,0,3,0,3,1,120,0,110,2,10,3,2,68,12,19,66,80,104,81,74,55,1,64,242,21,1,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program8="240,66,48,88,64,76,111,117,110,103,101,32,79,114,103,97,110,1,5,0,0,64,0,60,0,53,2,0,63,13,2,20,67,15,67,0,120,0,19,80,1,0,0,255,64,0,64,66,52,64,5,0,0,4,0,0,64,64,0,127,0,0,1,42,10,90,64,100,127,64,0,79,12,0,40,0,40,0,64,127,4,2,10,14,2,76,14,87,19,0,64,81,104,80,127,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program9="240,66,48,88,64,77,71,32,66,97,115,115,32,32,32,32,32,2,3,0,0,64,0,60,0,40,0,0,0,0,0,0,71,15,75,0,120,1,18,99,1,0,0,255,0,0,64,66,52,74,0,0,0,0,0,1,52,61,0,127,64,0,0,17,0,116,69,64,127,64,0,74,64,0,28,52,10,0,21,127,12,2,10,14,2,72,14,80,96,0,64,99,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program10="240,66,48,88,64,71,97,116,101,115,79,102,72,101,108,108,32,1,4,0,0,64,0,60,133,72,85,2,37,0,0,22,70,22,72,0,135,1,18,50,5,0,0,255,112,10,64,66,64,64,3,98,21,45,0,0,40,66,0,127,122,0,1,0,97,77,92,64,45,64,1,64,64,0,116,0,74,0,80,127,67,17,51,140,0,54,12,82,127,71,45,0,64,0,64,195,241,15,1,127,1,127,127,127,127,127,1,127,127,127,1,127,127,127,127,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program11="240,66,48,88,64,80,87,77,32,83,116,114,105,110,103,115,32,1,6,0,0,64,0,60,0,79,70,0,43,82,1,20,74,1,72,0,112,0,16,99,1,0,0,255,112,10,66,66,64,64,1,0,113,0,0,0,64,60,0,127,101,0,1,63,0,96,64,64,127,64,0,89,64,0,64,127,127,50,64,127,70,2,35,3,2,70,12,71,21,0,64,0,64,0,64,68,249,12,1,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,11,0,50,48,42,37,34,31,28,24,21,18,14,11,9,6,4,1,13,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program12="240,66,48,88,64,84,117,114,110,32,87,104,101,101,108,32,32,2,2,0,0,64,0,60,136,78,27,1,25,0,1,20,64,15,65,0,140,64,20,99,1,0,0,255,48,10,64,66,76,64,0,0,0,0,0,0,64,64,7,115,0,0,0,24,78,64,64,112,127,64,0,82,40,1,3,0,1,2,64,115,5,2,34,3,2,75,12,71,86,98,80,87,74,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program13="240,66,48,88,64,83,121,110,116,104,32,84,112,32,32,32,32,1,1,0,0,64,0,60,0,58,21,0,0,0,0,19,73,15,64,0,120,0,19,90,0,0,0,255,112,10,74,66,64,65,0,0,0,0,0,0,64,64,0,127,0,0,1,8,0,98,79,91,127,64,0,84,58,4,84,64,12,0,34,108,7,2,10,3,2,68,12,0,56,81,127,3,68,83,68,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program14="240,66,48,88,64,68,87,71,83,32,87,97,118,101,83,101,113,1,4,0,0,64,0,60,135,55,75,2,35,30,0,0,68,21,67,0,98,0,1,99,5,0,0,255,112,10,64,66,64,64,5,0,0,14,0,0,76,64,0,100,36,0,0,28,75,93,64,64,127,64,0,89,28,10,110,117,87,84,100,127,108,2,8,3,2,73,12,19,71,87,39,66,84,71,39,195,112,5,1,51,60,83,41,64,50,53,83,64,64,64,64,64,64,64,64,16,1,64,34,94,64,54,17,17,111,64,64,64,64,71,75,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program15="240,66,48,88,64,68,114,105,118,101,32,66,97,115,115,32,32,2,3,0,0,64,0,60,0,61,0,0,47,0,1,20,52,16,76,0,130,1,2,90,5,0,0,255,24,12,64,66,40,69,1,0,0,32,0,1,64,54,0,64,0,0,0,28,54,75,64,74,127,64,1,84,36,51,112,0,20,0,40,110,20,2,32,14,2,70,14,81,84,66,64,0,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank1Program16="240,66,48,88,64,83,117,114,114,111,117,110,100,101,100,32,32,1,8,0,0,64,0,60,0,75,100,0,53,72,0,20,71,15,71,0,120,65,52,100,5,0,0,255,112,10,64,76,64,74,3,49,99,48,0,34,83,95,0,103,71,8,1,30,3,69,104,64,127,64,0,74,64,32,87,18,109,104,127,0,0,2,88,3,2,14,12,1,125,99,96,119,109,2,64,198,254,25,0,64,64,64,64,64,64,64,64,64,65,66,68,70,72,74,76,0,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program1="240,66,48,88,64,76,97,122,121,32,80,105,116,99,104,32,32,1,0,0,0,64,0,60,136,77,88,0,17,65,2,17,69,18,72,0,120,1,36,99,5,0,0,255,72,10,58,66,52,64,0,0,0,0,0,0,64,70,7,127,127,0,3,0,60,118,64,62,127,64,0,92,64,0,113,0,107,0,127,127,108,33,64,11,2,31,2,17,127,66,57,99,92,71,102,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program2="240,66,48,88,64,83,116,97,105,114,115,32,80,97,100,32,32,1,7,0,0,32,0,60,135,64,80,1,32,46,0,25,68,15,69,0,140,208,34,20,1,0,0,255,56,10,64,66,76,16,0,0,0,0,0,0,64,70,0,127,127,0,2,70,40,64,64,64,75,64,0,104,64,0,30,0,30,0,30,0,30,2,9,3,33,0,0,66,107,23,127,98,94,82,44,192,252,16,0,10,34,50,58,64,64,64,64,64,64,64,64,70,78,94,118,13,1,74,69,66,64,64,64,64,64,64,64,64,64,64,66,69,74,2,1,68,66,64,64,63,63,62,61,61,62,63,63,64,64,66,68,255,113,0,64,66,64,64,1,0,0,38,0,0,71,57,0,127,110,0,0,20,0,78,74,94,127,64,0,74,64,115,122,53,115,22,64,120,122,34,75,14,34,42,14,117,106,35,106,81,96,99,88,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program3="240,66,48,88,64,83,105,108,107,32,80,97,100,32,32,32,32,1,6,0,0,64,0,60,0,81,73,1,29,40,0,20,70,10,68,0,120,64,16,99,3,0,0,255,96,0,64,66,64,65,5,87,42,33,0,2,64,64,0,115,115,0,2,12,79,89,78,82,127,64,0,89,44,102,118,12,101,30,78,101,107,34,34,14,2,60,14,3,71,98,94,64,64,81,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program4="240,66,48,88,64,90,97,112,32,66,97,115,115,32,32,32,32,1,3,0,0,64,0,60,0,40,0,0,0,0,0,20,64,15,72,0,120,1,4,100,1,0,0,255,48,10,64,66,52,64,3,4,0,0,0,2,52,64,0,127,0,0,1,127,20,64,64,64,127,64,0,89,44,0,10,0,10,0,64,127,10,2,10,3,2,70,12,0,64,0,122,39,73,81,104,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program5="240,66,48,88,64,85,110,105,32,83,121,110,116,104,32,32,32,1,2,0,0,96,0,60,0,70,64,0,28,25,0,24,71,15,69,0,240,0,50,50,0,0,0,255,128,8,61,66,64,66,0,0,114,0,0,0,64,70,1,127,127,0,1,20,44,119,76,69,100,112,0,79,54,0,109,70,108,0,64,127,111,2,14,14,2,68,14,98,73,35,73,3,69,0,64,64,249,2,1,58,58,58,58,58,64,67,70,70,67,64,58,58,58,58,58,16,0,127,107,89,80,73,68,65,64,64,63,60,55,48,39,21,1,6,1,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,255,128,6,57,66,64,66,0,0,114,0,0,0,64,70,1,127,127,0,1,20,44,119,76,69,100,16,0,79,54,0,109,70,108,0,64,127,111,2,14,14,2,68,14,98,73,35,73,3,69,0,64,64,249,2,1,58,58,58,58,58,64,67,70,70,67,64,58,58,58,58,58,16,0,127,107,89,80,73,68,65,64,64,63,60,55,48,39,21,1,6,1,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,247"
                   bank2Program6="240,66,48,88,64,80,115,121,99,104,101,84,114,97,110,99,101,1,4,0,0,96,0,60,135,69,70,1,36,36,0,25,71,15,66,0,132,33,18,80,1,0,0,255,177,10,64,64,64,64,5,0,0,25,0,0,67,64,0,127,115,0,1,39,66,64,109,64,110,32,0,64,39,0,64,127,118,0,64,127,118,16,35,140,18,70,129,82,76,99,84,71,33,66,79,195,241,15,1,99,86,114,99,86,1,99,51,81,1,51,71,1,81,66,56,1,1,64,64,40,64,64,64,40,52,64,64,88,64,52,59,71,71,6,1,64,64,49,66,66,64,49,64,64,64,64,64,64,64,64,64,255,178,17,64,67,64,64,0,0,0,0,0,0,64,71,0,127,127,30,1,54,54,64,64,64,63,64,0,79,39,0,64,127,64,0,64,127,50,2,11,3,2,24,12,66,93,99,100,55,1,0,64,193,113,15,1,106,1,106,1,106,106,106,1,93,1,64,64,64,64,64,64,10,1,64,64,64,64,104,64,64,64,76,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,76,64,64,64,64,64,64,64,247"
                   bank2Program7="240,66,48,88,64,68,101,101,112,32,66,101,108,108,32,32,32,1,7,0,0,64,0,60,0,52,83,1,0,0,0,20,64,15,64,0,119,64,33,80,1,0,0,255,64,0,64,66,64,66,5,0,0,5,0,0,64,64,0,127,0,0,1,16,0,84,104,64,127,64,0,96,43,0,4,0,35,0,110,20,107,2,10,14,2,64,14,3,64,81,94,99,81,65,114,134,65,27,0,64,65,67,69,72,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program8="240,66,48,88,64,83,121,110,116,104,32,67,108,97,118,32,32,1,5,0,0,64,0,60,0,51,0,1,30,0,0,20,70,29,69,0,120,1,5,10,1,0,0,255,96,0,64,66,52,64,1,95,0,38,0,0,64,59,0,127,0,0,1,12,50,102,80,76,120,64,0,88,54,0,72,10,50,0,34,88,6,34,28,14,2,51,14,117,71,99,81,71,48,81,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program9="240,66,48,88,64,76,105,110,101,32,66,97,115,115,32,32,32,1,3,0,0,64,0,60,133,67,0,0,33,25,0,20,70,15,69,0,142,1,0,30,1,0,0,255,88,10,64,66,52,69,0,0,0,0,0,0,52,68,0,115,127,0,0,35,10,107,64,89,127,64,0,84,39,0,40,20,50,0,12,110,50,16,57,140,34,68,12,81,100,66,64,82,64,19,69,67,241,1,1,64,54,61,74,54,72,54,60,64,54,63,68,61,64,57,54,15,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,28,1,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program10="240,66,48,88,64,83,101,97,114,99,104,69,110,103,105,110,101,1,4,0,0,32,0,60,135,39,38,0,38,36,0,20,76,10,66,0,134,160,5,83,1,0,0,255,57,10,60,66,52,66,5,0,0,12,0,0,64,72,0,127,115,0,0,35,10,86,79,89,127,64,0,64,19,0,40,0,40,0,42,121,67,2,10,3,34,68,12,81,127,0,64,0,64,19,69,192,249,2,1,70,69,68,67,66,65,64,63,62,61,60,59,59,58,58,58,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,60,66,64,69,0,0,112,37,0,0,64,68,0,127,104,0,0,0,46,83,79,88,100,64,0,64,44,0,12,0,38,0,12,100,12,2,36,3,2,68,12,65,78,81,116,98,91,48,74,195,241,18,1,83,15,122,127,81,54,51,96,104,55,84,117,84,58,109,71,10,1,64,64,64,64,69,64,64,64,64,64,64,64,69,64,64,64,11,1,64,64,64,64,69,64,64,64,64,64,64,64,69,64,64,64,247"
                   bank2Program11="240,66,48,88,64,86,111,105,99,101,32,47,65,47,32,32,32,1,1,0,0,64,0,60,0,81,30,1,38,24,0,6,69,20,75,0,100,0,4,100,1,0,0,255,112,10,64,76,52,66,4,16,0,0,0,49,87,67,10,20,127,0,1,78,60,64,64,66,127,64,0,84,49,40,50,0,10,15,41,119,40,2,40,3,2,68,12,3,72,21,16,81,92,101,88,67,242,4,0,64,64,90,90,119,119,75,75,90,90,34,34,64,64,34,34,7,0,64,64,76,76,69,69,51,51,76,76,47,47,64,64,47,47,1,0,64,66,71,71,71,71,66,66,69,67,64,64,67,66,62,62,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program12="240,66,48,88,64,70,97,114,32,72,111,114,105,122,111,110,32,0,2,0,0,96,0,60,0,90,12,0,0,0,0,20,64,15,64,0,120,1,34,90,1,0,0,255,48,10,66,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,60,20,96,64,64,127,84,0,79,64,0,64,47,0,0,64,127,0,34,23,3,34,70,12,66,86,98,64,0,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,48,10,62,66,64,69,1,0,110,0,0,0,64,64,0,127,0,0,1,63,20,96,64,64,127,44,0,79,64,0,64,47,0,0,64,127,0,34,32,3,34,70,12,67,64,98,64,0,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program13="240,66,48,88,64,71,108,97,115,115,32,32,32,32,32,32,32,1,4,0,0,64,0,60,0,62,90,0,51,99,1,20,64,15,64,0,132,1,17,80,3,0,0,255,112,10,64,66,83,66,5,30,55,35,0,17,57,64,0,127,88,0,3,5,76,67,64,64,127,64,1,84,64,0,0,0,0,11,95,86,100,3,62,3,0,79,12,18,64,3,66,65,64,2,64,67,113,1,1,64,71,72,71,64,71,76,71,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program14="240,66,48,88,64,82,97,110,100,111,109,32,32,32,32,32,32,1,4,0,0,64,0,60,0,55,38,0,0,0,0,20,64,15,64,0,125,1,2,1,5,0,0,255,112,10,64,76,52,64,3,0,0,0,0,0,64,64,0,127,109,0,3,0,81,58,64,70,115,64,0,103,29,0,64,127,0,0,127,127,67,18,64,131,18,32,12,98,97,67,84,81,64,71,93,195,241,1,1,67,68,51,48,77,71,45,55,70,52,51,77,64,71,64,57,4,1,1,102,102,89,27,78,18,102,64,82,105,46,127,111,26,106,11,1,49,84,64,75,69,95,108,91,64,121,127,10,96,93,73,127,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program15="240,66,48,88,64,74,97,109,105,32,66,97,115,115,32,32,32,1,3,0,0,64,0,60,0,40,0,0,0,0,0,4,67,22,74,0,120,0,2,100,1,0,0,255,48,10,64,66,40,70,3,0,0,10,0,32,64,64,0,127,38,0,1,90,53,64,64,64,127,64,0,79,44,0,64,127,8,0,30,100,6,2,45,3,2,78,12,81,100,71,64,67,64,82,72,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank2Program16="240,66,48,88,64,76,111,111,109,121,32,32,32,32,32,32,32,1,8,0,0,64,0,60,0,53,75,0,32,35,0,0,68,15,68,0,120,65,5,100,5,0,0,255,112,10,64,76,64,1,5,0,0,34,0,2,88,127,124,127,12,0,1,127,4,64,64,64,127,64,0,84,64,0,64,127,127,60,64,127,107,2,45,3,0,1,12,3,64,2,66,0,112,70,44,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program1="240,66,48,88,64,80,111,108,121,32,76,105,110,101,32,32,32,1,0,0,0,64,0,60,0,67,19,0,33,25,0,20,73,15,66,0,120,1,5,1,1,0,0,255,88,10,57,66,52,69,0,0,0,0,0,0,64,72,0,115,100,0,0,35,10,109,64,89,127,64,0,84,64,0,40,20,50,0,12,110,50,2,57,3,34,68,12,81,89,48,65,80,104,18,69,67,241,11,1,112,51,80,100,120,88,68,50,63,87,52,71,97,83,62,48,12,1,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program2="240,66,48,88,64,75,114,97,122,121,32,65,114,112,121,32,49,1,8,0,0,64,0,60,130,56,90,0,27,77,0,20,64,15,64,0,131,193,36,73,1,0,0,255,112,10,64,66,88,69,2,0,0,0,0,50,57,84,0,127,127,0,3,33,58,70,64,69,127,64,0,88,64,0,20,0,0,0,38,0,16,18,54,136,18,127,12,3,116,119,41,71,71,98,111,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program3="240,66,48,88,64,77,111,100,51,38,52,32,83,113,117,97,100,1,6,0,0,64,0,60,0,78,50,0,36,38,0,20,60,15,68,0,120,1,3,99,5,0,0,255,112,10,64,66,64,64,0,0,0,0,0,32,71,64,0,127,127,0,2,27,68,127,64,64,127,64,0,84,64,30,96,12,96,100,84,110,100,2,26,3,19,75,140,71,95,18,34,87,39,67,64,73,241,11,0,64,64,49,38,51,55,64,64,64,64,64,75,86,99,95,102,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program4="240,66,48,88,64,87,104,97,116,32,68,39,32,84,105,109,101,0,3,0,0,64,0,60,0,40,0,0,0,0,0,27,52,9,68,0,74,0,19,72,1,0,0,255,56,10,64,66,52,67,3,0,0,0,0,33,64,64,0,127,127,0,1,10,67,79,64,59,118,64,0,78,44,50,79,100,105,1,101,127,5,2,0,3,2,68,12,64,73,84,64,16,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program5="240,66,48,88,64,72,101,97,108,105,110,103,32,32,32,32,32,1,2,0,0,64,0,60,0,75,84,1,30,65,2,20,66,15,66,0,120,64,4,20,1,0,0,255,184,10,64,66,64,64,5,41,18,12,0,18,53,126,0,127,127,0,1,104,41,66,69,64,100,64,1,84,54,0,112,95,100,0,95,0,99,3,94,3,3,94,12,18,64,2,64,66,64,23,96,67,113,5,1,1,42,1,85,1,46,1,87,1,1,1,1,1,1,1,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program6="240,66,48,88,64,65,117,116,111,32,68,105,115,99,111,32,32,1,4,0,0,96,0,61,135,40,60,2,0,0,0,26,71,29,74,0,140,145,0,80,1,0,0,255,48,1,64,66,52,112,0,0,0,0,0,1,64,66,0,127,80,0,1,27,4,97,77,84,112,64,0,64,39,0,28,0,20,0,65,0,30,35,0,3,17,70,137,3,16,98,94,18,65,2,64,70,241,1,1,64,64,59,62,64,64,59,62,64,64,59,62,64,64,59,62,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,49,0,64,64,40,64,3,1,12,0,0,33,40,1,0,127,0,18,3,115,24,64,64,64,127,64,0,79,1,0,64,127,127,0,64,127,20,16,10,134,17,70,134,82,96,67,1,82,127,51,1,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program7="240,66,48,88,64,67,97,110,100,121,32,66,111,120,32,32,32,1,7,0,0,64,0,60,0,40,15,0,0,0,0,20,64,15,64,0,120,64,17,50,1,0,0,255,112,10,64,66,83,69,5,0,68,57,0,2,57,64,0,127,110,0,1,62,9,96,64,64,127,64,0,94,64,0,15,0,127,0,80,0,70,2,10,3,2,70,12,0,64,0,64,0,64,0,64,3,50,5,1,64,12,11,13,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program8="240,66,48,88,64,86,105,110,116,97,103,101,32,69,80,32,32,1,5,0,0,64,0,60,0,64,0,0,39,10,2,3,74,11,64,0,120,0,2,80,1,0,0,255,64,0,64,66,52,64,5,0,0,35,0,2,64,64,0,127,0,0,0,18,0,86,80,65,127,64,0,104,44,0,90,35,26,1,118,0,36,2,63,14,2,35,14,81,114,99,88,82,84,119,99,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program9="240,66,48,88,64,77,105,110,105,32,66,97,115,115,32,32,32,2,3,0,0,64,0,60,0,40,0,0,22,18,0,0,68,15,71,0,120,0,2,80,1,0,0,255,48,10,64,66,40,69,1,0,0,0,0,0,64,66,9,127,127,0,0,25,14,76,76,64,127,64,0,94,34,0,41,8,127,0,43,127,2,2,24,3,2,70,12,81,80,34,64,66,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program10="240,66,48,88,64,84,97,112,32,76,101,97,100,32,32,32,32,1,4,0,0,96,0,60,7,78,80,1,44,70,0,20,64,15,64,0,140,129,16,80,1,0,0,255,112,10,64,66,64,66,2,39,89,28,0,0,76,64,0,127,44,0,0,80,63,74,64,64,127,64,1,82,44,0,0,127,127,0,95,99,105,0,10,3,2,67,12,0,64,16,64,66,70,98,91,195,241,11,1,53,64,78,64,48,64,78,64,46,64,75,64,43,64,77,64,6,1,64,88,40,88,64,40,64,88,40,88,64,40,64,88,40,88,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,6,43,52,0,0,33,80,127,0,127,0,0,0,41,93,64,64,64,120,64,1,84,54,0,0,0,0,0,0,7,9,2,10,3,2,70,12,0,69,99,109,67,64,66,64,195,241,1,1,57,72,81,70,72,75,71,60,66,74,88,66,66,84,84,58,11,1,1,77,77,110,3,55,98,105,2,82,52,64,1,66,86,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program11="240,66,48,88,64,82,111,121,97,108,32,80,97,100,32,32,32,2,6,0,0,64,0,60,0,70,80,2,30,45,0,20,74,10,71,0,120,0,16,99,3,0,0,255,96,0,64,66,64,64,1,0,115,38,0,0,64,64,0,127,115,1,1,15,10,81,74,74,127,64,0,74,64,70,110,70,102,35,90,101,100,34,28,14,2,51,14,117,71,99,79,71,54,16,56,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program12="240,66,48,88,64,70,114,101,113,32,76,101,97,100,32,32,32,1,2,0,0,64,0,60,0,72,15,1,0,0,0,20,70,18,70,0,140,64,2,80,1,0,0,255,48,10,64,66,52,64,1,0,0,0,0,0,64,64,4,100,0,0,0,40,80,80,76,79,127,64,0,82,39,0,70,0,8,0,64,127,10,2,12,3,2,33,12,67,84,81,114,114,118,119,114,67,241,27,1,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program13="240,66,48,88,64,83,111,108,101,109,110,32,66,114,97,115,115,1,1,0,0,96,0,60,0,79,49,0,49,23,1,20,74,25,67,0,120,64,16,99,3,0,0,255,112,10,64,66,64,64,1,0,113,0,0,0,64,60,0,127,101,0,1,0,0,127,64,64,115,79,0,84,64,51,84,89,127,28,64,127,42,2,35,3,2,70,12,103,96,0,64,0,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,64,1,0,113,0,0,0,64,68,0,127,101,0,1,0,0,125,64,64,115,49,0,84,64,51,84,89,127,28,64,127,42,2,35,3,2,70,12,103,32,6,63,0,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program14="240,66,48,88,64,73,90,68,73,83,65,45,87,83,32,32,32,2,4,0,0,64,0,60,0,68,80,0,32,25,0,20,68,15,68,0,125,1,16,90,5,0,0,255,112,10,64,66,52,65,5,95,0,32,0,2,64,112,0,127,97,0,1,86,48,64,64,70,115,64,0,94,64,0,0,0,39,0,116,60,50,2,71,140,2,60,12,66,64,50,64,67,67,98,78,195,241,5,1,64,34,66,83,64,86,64,63,64,45,75,98,64,91,35,34,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program15="240,66,48,88,64,72,111,117,115,101,32,66,97,115,115,32,32,0,3,0,0,64,0,60,0,40,0,0,0,0,0,20,64,15,72,0,120,0,3,80,1,0,0,255,56,10,64,66,40,64,0,0,0,0,0,32,52,67,0,110,110,0,0,9,4,81,73,91,127,64,0,79,44,0,49,0,49,0,50,100,50,2,10,3,2,70,12,80,96,65,68,87,74,71,84,67,1,17,1,114,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,24,1,24,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,13,1,67,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank3Program16="240,66,48,88,64,73,110,118,97,100,101,114,115,32,32,32,32,2,8,0,0,64,0,60,0,40,0,0,0,0,0,20,64,15,64,0,147,129,4,100,1,0,0,255,120,10,64,76,52,114,4,95,55,0,0,48,40,127,10,127,108,4,3,46,47,63,64,64,100,64,1,89,39,34,64,127,0,0,64,127,0,3,83,3,2,40,12,66,127,19,64,119,104,115,18,195,241,17,1,106,22,108,1,126,127,106,1,71,97,73,1,127,107,105,115,12,1,64,57,42,97,67,1,22,53,15,107,51,127,47,64,55,59,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program1="240,66,48,88,64,65,110,97,32,70,117,122,122,32,32,32,32,1,2,0,0,64,0,60,0,56,42,0,35,30,0,24,69,15,69,0,120,0,16,80,1,0,0,255,64,0,64,66,64,69,0,0,0,0,0,0,71,64,0,95,80,0,2,20,38,90,77,84,127,64,1,84,49,44,80,0,27,0,64,127,23,3,66,14,2,70,14,81,96,16,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program2="240,66,48,88,64,87,97,116,101,114,32,69,100,103,101,32,32,1,7,0,0,160,0,60,0,107,100,2,5,12,2,20,69,17,75,0,140,160,3,90,3,0,0,255,64,10,64,76,64,64,6,67,31,0,0,0,64,64,0,40,0,0,3,27,20,64,64,64,127,64,0,94,64,0,64,127,0,70,64,127,122,2,10,3,2,17,12,34,87,67,34,81,88,99,32,195,254,10,0,64,64,64,64,64,64,64,64,65,66,67,69,70,74,77,79,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,56,18,64,76,64,127,3,0,0,0,0,18,76,127,0,115,0,0,1,100,1,64,64,64,114,64,0,94,54,0,5,0,5,0,100,0,100,2,5,6,2,40,12,99,104,119,127,87,1,18,118,195,241,1,1,64,76,88,76,64,52,40,52,64,76,88,76,64,52,40,52,9,1,64,64,64,64,64,64,64,64,64,64,64,64,127,114,127,127,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program3="240,66,48,88,64,82,101,97,99,116,111,114,32,80,97,100,32,1,6,0,0,64,0,60,0,81,70,1,39,30,0,12,69,13,64,0,100,1,2,100,5,0,0,255,112,10,64,66,64,127,2,0,127,0,0,50,55,64,0,0,127,10,1,12,74,88,76,106,84,64,0,94,34,118,121,40,118,60,64,127,110,2,56,3,2,19,12,18,25,117,102,99,84,67,43,193,254,2,1,70,58,58,58,58,58,58,70,70,58,58,58,58,58,58,70,16,0,127,107,89,80,73,68,65,64,64,63,60,55,48,39,21,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program4="240,66,48,88,64,77,83,45,49,48,49,32,83,113,114,32,32,1,3,0,0,64,0,60,0,78,56,0,23,30,0,20,64,15,64,0,120,64,4,80,1,0,0,255,112,10,64,66,52,64,1,0,0,0,0,0,64,64,0,127,0,0,1,21,71,89,72,82,127,64,0,97,64,0,66,18,0,0,88,61,0,2,27,3,2,70,12,71,91,98,92,81,84,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program5="240,66,48,88,64,69,100,103,101,32,76,101,97,100,32,32,32,1,2,0,0,64,0,60,135,71,40,2,12,0,0,23,62,24,75,0,142,65,0,90,1,0,0,255,112,10,64,66,64,67,0,0,70,0,0,0,52,63,1,127,0,0,1,12,30,127,84,103,88,64,65,92,54,0,86,0,0,0,0,0,0,2,13,3,2,69,12,32,118,80,114,3,65,81,84,67,241,1,1,52,40,62,40,64,52,67,52,69,62,71,52,74,52,76,59,9,1,127,127,1,127,1,114,84,84,44,1,1,127,1,64,127,1,12,1,127,127,64,127,64,64,64,64,127,64,64,127,64,64,127,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program6="240,66,48,88,64,71,111,97,32,84,114,97,120,32,32,32,32,1,4,0,0,96,0,60,135,69,52,0,36,36,0,25,71,15,67,0,135,33,48,99,1,0,0,255,177,10,64,66,64,64,5,0,0,25,0,0,67,64,0,127,127,0,1,63,69,64,64,64,116,64,0,79,44,0,64,127,0,0,64,127,40,18,21,0,2,28,12,66,95,99,43,71,98,0,64,198,177,15,1,127,1,127,1,1,127,1,127,1,1,127,1,64,64,64,64,2,1,64,64,64,64,61,61,61,61,61,61,61,61,64,64,64,64,1,1,64,59,64,59,64,59,59,64,64,64,59,64,40,64,64,64,255,178,17,64,66,64,64,0,0,16,0,0,0,88,1,0,127,127,0,2,31,86,64,64,64,127,64,1,79,44,0,20,127,0,0,64,127,40,18,43,130,2,26,12,66,89,99,85,71,78,0,64,195,113,15,1,127,127,1,1,127,127,127,127,93,1,64,64,64,64,64,64,1,1,52,40,40,59,40,54,55,47,40,62,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program7="240,66,48,88,64,82,101,116,114,111,32,66,68,47,83,68,32,1,8,0,0,80,0,60,0,4,0,0,0,0,0,19,76,6,76,0,120,0,4,80,1,0,0,255,56,0,64,66,52,64,3,0,0,0,0,2,64,64,0,127,10,0,1,69,63,64,71,77,127,64,0,95,85,0,21,0,18,0,91,0,43,2,70,3,2,70,12,0,127,81,104,39,66,71,109,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,120,0,64,76,64,64,6,85,56,0,0,2,64,64,0,68,95,0,1,88,29,64,64,64,127,64,0,104,42,0,87,13,0,0,39,0,32,2,10,3,2,70,12,33,65,81,96,52,72,71,49,67,241,1,1,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program8="240,66,48,88,64,87,101,116,32,82,101,101,100,32,32,32,32,2,5,0,0,64,0,60,0,51,66,2,15,20,2,0,76,13,76,0,100,0,16,46,1,0,0,255,64,0,64,66,64,66,5,0,0,46,0,2,52,64,0,107,71,0,1,127,7,75,64,64,97,78,0,84,64,0,77,41,0,0,53,127,0,34,1,14,2,68,14,16,64,114,64,99,64,18,64,67,249,8,0,127,127,127,127,127,127,127,127,120,105,100,79,64,64,56,45,9,0,16,46,64,77,100,112,109,109,94,65,64,41,41,42,22,15,16,0,59,69,50,90,26,114,1,127,38,91,58,64,52,73,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program9="240,66,48,88,64,70,97,116,32,66,97,115,115,32,32,32,32,1,3,0,0,64,0,60,0,40,0,0,0,0,0,20,64,20,71,0,120,0,0,70,1,0,0,255,112,5,62,66,40,69,0,0,127,0,0,0,64,68,0,127,119,0,3,23,55,76,64,112,120,64,0,79,52,0,36,0,30,1,22,115,25,2,21,3,2,70,12,2,64,18,65,67,64,99,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program10="240,66,48,88,64,70,108,97,115,104,108,105,103,104,116,32,32,1,4,0,0,64,0,60,135,43,92,1,25,30,0,20,64,29,66,0,130,64,34,100,3,0,0,255,112,10,69,66,64,64,0,0,0,0,0,0,64,58,0,90,90,0,2,5,100,122,64,75,112,64,0,88,46,123,125,0,122,30,64,127,112,2,74,139,2,70,140,83,1,98,94,55,127,87,22,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program11="240,66,48,88,64,83,116,114,101,97,109,32,80,97,100,32,32,1,6,0,0,64,0,60,0,79,70,1,14,64,2,20,68,15,68,0,100,0,16,80,5,0,0,255,96,0,58,66,64,65,1,0,110,0,0,0,64,70,0,127,100,2,1,127,25,64,64,74,127,64,0,86,64,107,115,69,110,63,64,127,110,34,34,14,34,30,14,116,84,119,100,99,40,19,67,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program12="240,66,48,88,64,69,80,32,70,117,115,105,111,110,32,76,100,1,2,0,0,64,0,60,0,78,32,1,24,50,2,24,65,23,67,0,120,65,4,80,1,0,0,255,112,10,64,66,64,69,5,0,0,36,0,2,71,64,0,127,80,0,1,9,40,91,76,72,127,64,0,92,29,0,64,50,9,3,50,85,10,34,56,134,2,68,12,81,84,98,84,103,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program13="240,66,48,88,64,84,114,101,109,111,108,111,83,121,110,116,104,1,1,0,0,64,0,60,0,89,50,2,31,34,1,24,70,29,64,0,140,0,48,100,1,0,0,255,112,10,68,66,52,70,0,0,0,0,0,0,64,57,0,115,115,0,0,8,25,71,76,84,127,64,0,84,44,3,50,0,50,2,120,0,60,35,53,3,34,62,12,65,79,81,96,112,1,67,79,67,241,30,1,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,24,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program14="240,66,48,88,64,77,111,116,105,111,110,32,80,97,100,32,32,1,6,0,0,64,0,60,0,78,87,0,15,46,0,20,64,15,64,0,122,64,19,100,5,0,0,255,64,10,64,66,64,65,5,0,0,2,0,32,52,89,0,109,100,0,1,32,82,82,74,64,115,64,0,84,64,87,91,96,108,77,96,100,112,33,64,11,33,64,2,66,45,99,74,70,68,16,115,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program15="240,66,48,88,64,66,97,110,97,110,97,32,66,97,115,115,32,1,3,0,0,96,0,60,0,40,0,0,0,0,0,23,65,18,75,0,120,1,0,75,1,20,0,255,0,0,59,66,40,69,5,0,0,54,0,32,64,61,3,100,40,0,0,10,58,88,85,88,127,24,0,99,84,3,52,0,5,0,60,80,5,2,10,14,18,61,14,80,88,80,64,48,64,119,79,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,0,0,65,66,40,69,5,0,0,55,0,32,64,61,3,100,40,0,0,10,58,88,85,88,127,104,0,99,84,3,52,0,5,0,60,80,5,2,10,14,18,61,14,80,88,80,64,48,64,119,79,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank4Program16="240,66,48,88,64,66,97,100,32,68,114,101,97,109,32,32,32,1,8,0,0,64,0,60,0,79,92,0,43,82,1,21,73,1,69,0,120,1,36,100,5,0,0,255,64,0,64,66,64,124,5,0,101,59,0,49,59,84,0,93,89,0,1,21,84,87,64,81,127,64,0,89,29,5,36,119,97,9,29,127,99,34,4,14,34,102,14,16,95,2,92,119,34,66,99,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program1="240,66,48,88,64,67,101,110,116,117,114,121,32,83,116,97,98,1,0,0,0,64,0,60,135,73,15,1,25,0,0,26,68,14,65,0,120,1,5,50,1,0,0,255,112,10,61,66,52,66,0,0,0,0,0,0,64,70,0,110,110,0,1,73,96,69,64,93,127,64,0,84,49,5,7,0,7,0,41,127,10,35,0,3,2,23,12,67,106,112,127,119,124,98,93,70,248,27,1,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,13,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,18,1,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program2="240,66,48,88,64,83,105,109,112,108,101,32,65,114,112,103,32,1,7,0,0,64,0,60,135,76,60,1,0,30,0,25,70,8,70,0,150,192,20,95,1,0,0,255,112,10,57,66,64,127,0,0,0,0,0,0,64,71,0,127,127,0,1,5,67,91,84,64,127,64,0,79,64,0,30,0,30,0,22,0,22,35,10,3,35,10,12,81,64,98,94,67,88,0,64,201,244,22,0,64,64,64,75,109,124,127,64,64,64,64,111,123,103,64,64,18,0,82,93,103,111,110,103,82,67,64,64,64,65,66,70,73,75,10,0,127,127,127,106,64,64,64,64,64,64,64,64,64,64,64,104,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program3="240,66,48,88,64,84,105,110,32,77,101,109,111,114,101,101,122,2,6,0,0,64,0,60,0,103,83,1,30,127,0,20,68,15,68,0,200,0,0,100,5,0,0,255,64,0,64,66,64,65,5,0,55,60,0,0,71,71,0,127,113,0,3,0,72,45,64,51,110,64,0,84,64,15,20,32,126,105,15,127,68,34,19,14,34,30,14,32,102,71,127,66,115,0,64,192,246,16,0,96,88,82,76,73,68,66,65,64,62,60,55,52,46,40,32,2,1,58,58,58,58,59,60,61,62,63,64,65,66,67,68,69,70,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program4="240,66,48,88,64,79,114,103,97,110,32,66,97,115,115,32,32,1,3,0,0,64,0,60,0,53,0,0,63,0,2,0,70,15,67,0,132,1,2,80,1,0,0,255,64,0,64,66,40,69,5,0,0,4,0,2,64,64,0,127,0,0,1,44,1,104,64,74,120,64,0,84,9,0,40,0,40,0,38,90,7,2,10,14,2,74,14,81,64,3,65,81,64,80,96,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program5="240,66,48,88,64,72,105,103,104,32,86,111,108,116,97,103,101,1,2,0,0,96,0,60,136,103,20,1,24,0,0,26,72,15,71,0,145,0,2,80,1,0,0,255,176,3,63,66,40,69,0,30,30,0,0,33,83,64,0,50,127,0,1,127,20,64,64,64,105,21,0,79,64,0,64,127,0,0,39,100,5,34,10,3,18,70,12,22,44,18,124,18,64,19,64,70,121,6,1,77,53,64,82,51,76,59,50,64,64,64,64,64,64,64,64,11,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,176,2,65,66,40,69,0,30,30,0,0,33,83,64,0,50,127,0,1,127,20,64,64,64,105,106,0,79,64,0,64,127,0,0,39,105,5,34,10,3,18,70,12,22,44,18,124,18,64,19,64,70,121,6,1,50,77,53,64,82,51,76,59,64,64,64,64,64,64,64,64,11,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program6="240,66,48,88,64,84,114,105,112,32,80,108,97,110,101,116,32,0,4,0,0,160,0,59,133,68,64,2,35,0,0,24,71,21,75,0,88,193,0,82,1,18,0,255,112,10,64,66,52,64,5,0,0,25,0,0,52,64,0,63,127,0,1,33,80,84,79,76,90,64,0,64,44,1,117,0,20,0,117,0,20,2,8,3,2,30,3,87,44,71,34,99,64,66,96,195,241,15,1,64,64,7,64,50,55,64,46,7,64,121,91,7,64,7,64,8,1,64,1,1,64,127,127,1,127,127,1,1,64,127,1,64,1,6,1,64,64,64,64,81,64,64,86,85,64,52,52,62,64,64,64,255,49,10,64,76,52,64,3,1,0,0,0,33,40,1,0,127,0,40,1,40,30,99,64,99,110,64,0,104,1,0,40,0,40,0,56,0,56,33,0,3,3,51,12,32,81,2,1,81,104,53,127,195,241,22,1,84,39,32,84,44,32,84,39,32,84,84,32,44,32,34,44,15,1,94,1,1,94,54,1,94,1,1,1,94,1,64,1,1,19,1,1,64,88,88,64,88,88,64,88,88,64,64,88,88,64,88,88,247"
                   bank5Program7="240,66,48,88,64,68,114,121,32,80,108,97,110,116,32,32,32,1,7,0,0,64,0,60,0,100,35,0,0,0,0,13,64,15,61,0,120,64,50,80,1,0,0,255,112,10,64,66,64,66,1,0,0,0,0,32,64,127,0,127,127,0,1,54,0,94,64,88,127,64,0,84,64,0,10,0,88,0,105,0,78,32,10,141,2,70,12,66,64,81,89,0,64,0,64,64,250,27,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,23,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,16,1,13,87,28,106,10,74,24,20,15,61,55,115,63,6,110,73,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program8="240,66,48,88,64,82,101,101,100,32,80,105,97,110,111,32,32,1,5,0,0,64,0,60,0,96,0,0,33,0,1,20,67,29,68,0,120,0,3,90,1,0,0,255,112,10,64,66,52,66,3,5,5,0,0,18,64,64,0,115,28,0,1,14,3,84,84,64,127,64,0,99,38,1,101,0,28,1,119,0,35,2,49,3,2,67,12,98,104,81,99,32,104,36,85,3,241,27,1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program9="240,66,48,88,64,77,97,103,110,117,109,32,66,97,115,115,32,1,3,0,0,64,0,60,136,40,0,2,30,8,1,26,69,14,71,0,142,1,0,5,1,10,0,255,56,10,66,66,40,72,5,0,0,12,0,0,64,60,0,90,127,1,0,29,10,100,69,84,127,64,0,84,39,0,100,1,48,0,40,90,50,16,10,140,2,67,12,81,104,19,66,66,64,99,64,67,241,1,1,54,66,47,73,52,52,76,71,54,66,47,73,52,52,76,71,29,1,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,11,1,99,99,94,94,79,84,79,79,84,84,79,84,79,84,79,79,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program10="240,66,48,88,64,77,97,100,32,76,101,97,100,32,32,32,32,1,4,0,0,64,0,60,0,101,39,1,35,12,2,20,64,15,64,0,165,1,3,80,1,0,0,255,176,10,64,66,64,69,0,0,0,34,0,33,64,98,0,127,32,0,1,61,31,64,74,64,110,64,65,81,44,0,0,63,0,0,36,96,19,1,86,3,2,103,12,0,64,64,64,34,64,65,86,195,113,15,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,2,1,64,64,64,64,62,62,62,62,62,62,69,62,62,66,64,69,16,0,64,84,64,44,64,84,64,44,64,84,64,44,64,84,44,54,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program11="240,66,48,88,64,66,101,108,108,121,32,32,32,32,32,32,32,1,1,0,0,64,0,60,0,74,74,2,50,70,1,20,63,15,67,0,120,1,50,100,1,0,0,255,112,10,64,66,71,66,5,93,0,59,0,18,40,95,0,127,127,0,2,32,45,68,69,73,127,64,0,82,44,65,114,119,60,29,119,113,111,3,52,3,2,68,12,66,64,98,44,67,64,3,67,67,241,1,1,64,64,79,88,79,79,71,84,64,64,72,72,86,79,71,71,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program12="240,66,48,88,64,66,97,99,107,73,110,84,104,101,68,97,121,1,2,0,0,64,0,60,133,58,50,2,0,0,0,20,67,29,67,0,110,64,18,66,1,0,0,255,112,10,64,66,64,69,1,0,0,0,0,33,74,64,4,115,82,0,0,65,60,79,56,64,127,64,0,92,34,0,68,19,53,0,53,127,2,2,34,3,2,70,12,32,84,16,74,18,76,98,79,67,241,4,1,93,116,127,92,84,106,127,102,84,111,127,118,84,91,122,127,30,1,61,53,47,43,43,44,48,57,75,88,92,91,87,79,73,63,8,1,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program13="240,66,48,88,64,83,121,110,116,104,32,66,114,97,115,115,32,1,1,0,0,64,0,60,0,41,0,0,33,21,0,15,72,29,64,0,120,0,18,80,1,0,0,255,112,0,61,66,64,69,0,0,127,0,0,0,64,64,0,127,118,2,1,0,1,110,80,89,127,64,0,74,64,9,59,56,32,0,64,110,35,2,20,14,2,68,14,16,71,81,99,19,66,0,62,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program14="240,66,48,88,64,69,108,101,99,116,114,111,83,104,111,99,107,1,4,0,0,96,0,60,138,85,37,1,1,0,0,25,60,10,65,0,120,161,0,100,1,0,0,255,112,10,64,76,64,99,3,47,111,0,0,0,68,101,0,127,0,0,1,40,65,64,64,91,85,64,0,99,23,0,52,16,30,0,122,127,62,34,29,3,1,103,12,0,127,2,42,80,104,98,75,195,241,1,1,48,60,46,66,57,46,44,57,72,64,62,61,58,56,55,66,11,1,63,54,60,85,112,125,107,67,62,106,127,92,123,125,106,83,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,6,107,72,0,0,0,49,34,0,127,0,127,3,11,63,64,64,64,51,64,0,94,64,0,64,127,0,0,70,0,70,18,47,131,16,78,137,83,114,115,90,98,127,0,64,195,241,11,1,64,73,84,97,103,110,118,127,127,127,127,114,97,81,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program15="240,66,48,88,64,66,97,107,105,110,39,32,66,97,115,115,32,2,3,0,0,64,0,60,0,40,0,0,11,25,0,14,73,9,73,0,120,1,0,70,1,20,0,255,112,10,64,66,40,69,5,71,104,0,0,0,64,64,3,107,122,0,0,26,53,102,64,73,127,64,0,82,39,0,36,27,32,0,81,96,0,2,52,3,2,68,12,0,64,48,64,66,64,84,75,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank5Program16="240,66,48,88,64,84,101,108,101,112,104,111,110,101,32,32,32,2,8,0,0,80,0,65,0,40,0,0,0,0,0,0,69,15,64,0,120,64,4,80,1,0,0,255,112,10,64,64,88,64,2,0,0,0,0,0,64,64,0,127,0,0,1,127,20,64,64,64,127,64,0,64,29,0,64,127,0,0,64,127,0,1,79,3,33,79,12,3,93,119,36,102,127,81,94,67,242,27,0,94,91,87,85,84,82,79,78,73,69,65,62,57,53,50,46,26,0,76,75,75,74,73,72,71,70,69,69,68,67,66,65,65,64,16,0,64,85,103,116,127,112,94,73,52,31,17,1,14,27,41,53,255,112,10,64,66,71,127,2,0,0,0,0,2,76,64,0,123,127,0,3,68,20,64,64,64,80,64,0,64,64,0,0,0,0,0,64,127,0,17,79,3,3,76,12,21,49,2,64,0,64,0,64,67,242,28,1,94,91,87,85,84,82,79,78,73,69,65,62,57,53,50,46,25,0,79,78,78,78,77,76,75,74,73,73,72,71,70,69,69,69,16,0,64,85,103,116,127,112,94,73,52,31,17,1,14,27,41,53,247"
                   bank6Program1="240,66,48,88,64,71,111,108,100,101,110,32,83,121,110,116,104,1,0,0,0,64,0,60,0,80,40,0,35,21,0,26,71,10,69,0,120,0,18,50,1,0,0,255,112,10,61,66,52,67,1,0,123,0,0,0,64,70,5,127,116,0,1,34,62,93,84,108,127,64,0,84,56,0,112,0,78,2,90,100,85,2,25,3,2,68,12,3,67,18,63,98,83,67,64,134,114,7,0,59,64,65,64,66,73,86,102,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program2="240,66,48,88,64,66,108,117,101,38,87,104,105,116,101,32,32,2,7,0,0,32,0,60,136,55,76,1,40,64,1,22,73,12,68,0,139,208,18,80,1,0,0,255,112,10,64,66,64,64,0,0,0,0,0,0,64,69,0,127,115,0,1,0,0,119,69,64,127,64,0,84,54,16,64,71,17,1,40,92,18,2,10,3,35,21,12,18,66,81,79,16,70,99,96,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,113,10,64,66,64,67,0,0,127,0,0,0,64,60,0,127,127,0,1,17,2,89,64,104,127,64,0,74,44,111,123,0,110,44,64,127,118,34,34,3,2,66,12,81,100,18,70,98,79,3,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program3="240,66,48,88,64,80,97,110,32,84,114,97,110,32,32,32,32,1,1,0,0,64,0,60,0,70,73,0,39,78,0,18,73,3,67,1,44,65,33,100,3,0,0,255,112,10,64,66,57,67,5,0,0,0,0,2,71,64,0,127,97,0,0,66,23,114,64,125,115,64,0,64,34,5,64,127,105,5,64,127,108,34,39,3,2,68,12,66,64,84,94,69,95,98,64,192,250,16,0,127,115,104,94,85,77,70,64,64,58,51,43,34,24,13,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program4="240,66,48,88,64,87,97,114,112,32,66,97,115,115,32,32,32,1,3,0,0,64,0,60,0,40,0,0,36,23,1,0,69,17,75,0,130,0,0,90,1,0,0,255,48,10,64,66,40,66,1,0,0,0,0,1,64,72,0,127,0,0,0,51,75,74,69,112,127,64,0,89,34,0,70,0,10,1,50,100,8,2,8,3,18,72,12,18,70,81,98,48,64,1,64,67,1,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,1,127,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,17,1,127,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program5="240,66,48,88,64,75,105,108,108,97,32,76,101,97,100,32,32,2,2,0,0,64,0,60,0,80,37,0,10,0,0,21,66,23,67,0,140,0,34,80,1,0,0,255,112,6,64,66,64,69,1,64,0,0,0,32,64,97,4,92,70,0,3,11,46,94,64,74,127,64,0,87,64,46,104,6,26,0,40,127,20,2,10,3,2,67,12,16,127,81,89,23,13,99,81,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program6="240,66,48,88,64,84,114,105,98,101,39,110,32,66,101,97,116,1,4,0,0,96,0,60,135,84,30,2,0,0,0,21,76,15,72,0,130,129,0,80,1,0,0,255,112,10,64,76,64,127,6,64,45,0,0,2,64,64,0,68,100,0,1,63,10,64,64,127,108,64,0,118,24,0,64,127,127,0,42,0,42,2,10,3,16,90,140,16,1,21,33,17,119,81,127,195,241,15,1,84,44,1,1,84,1,1,1,84,1,1,1,84,1,24,1,9,1,64,64,1,1,64,1,1,1,64,1,1,1,64,1,64,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,76,64,127,3,0,0,0,0,2,40,1,0,22,0,35,3,110,40,64,64,64,100,64,0,64,84,0,64,127,127,0,27,0,27,2,127,3,18,0,134,81,104,101,84,5,16,0,126,195,241,22,1,74,59,127,69,64,59,64,59,74,59,59,84,74,59,74,59,11,1,64,64,64,64,64,64,1,1,64,64,1,1,64,64,1,1,8,1,1,1,1,1,1,1,88,88,1,1,1,1,1,1,1,1,247"
                   bank6Program7="240,66,48,88,64,66,111,117,110,100,32,66,97,108,108,32,32,1,7,0,0,64,0,60,0,93,15,1,33,0,0,27,72,10,70,0,120,65,17,50,1,0,0,255,112,10,64,66,76,94,3,25,0,0,0,2,88,127,0,127,64,0,3,0,0,64,64,64,127,64,0,96,49,0,0,0,0,0,112,0,90,32,76,3,32,95,12,80,114,83,104,113,24,81,72,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program8="240,66,48,88,64,67,117,116,116,105,110,103,32,65,114,112,103,1,5,0,0,64,0,60,135,49,0,0,34,110,2,20,64,15,76,0,110,129,5,2,1,28,0,255,112,10,64,66,64,67,5,0,0,50,0,0,64,64,0,110,0,0,1,29,16,127,84,64,100,64,0,94,53,0,0,0,0,0,67,0,6,2,10,3,2,69,12,48,96,80,114,2,64,65,111,195,241,24,0,127,101,52,127,38,76,110,127,52,31,127,47,68,125,63,69,15,0,127,82,72,125,105,81,123,67,127,101,117,67,127,127,74,68,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program9="240,66,48,88,64,66,97,115,115,32,77,97,99,104,105,110,101,2,3,0,0,64,0,60,0,40,0,0,30,0,1,24,71,10,67,0,124,0,3,80,1,0,0,255,48,10,61,66,52,74,0,0,0,0,0,2,52,68,0,127,127,0,1,18,29,81,64,84,127,64,64,89,29,0,80,0,23,0,21,0,19,2,12,3,2,70,12,65,86,80,127,81,79,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program10="240,66,48,88,64,84,114,105,112,32,50,32,73,98,105,122,97,2,4,0,0,64,0,60,136,40,20,1,0,0,0,16,74,12,70,0,130,65,18,100,1,0,0,255,112,10,64,66,52,69,5,69,0,25,0,48,76,102,5,127,127,0,2,29,20,64,64,64,90,64,0,64,64,20,64,127,0,0,64,127,0,2,26,3,2,70,12,64,64,81,64,98,106,84,99,195,241,11,1,64,1,82,1,107,84,1,64,64,64,1,64,127,1,127,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program11="240,66,48,88,64,65,110,97,32,83,116,114,105,110,103,115,32,1,6,0,0,64,0,60,0,79,70,0,43,82,1,21,76,1,72,0,95,1,1,80,5,0,0,255,64,0,64,66,64,64,1,0,106,0,0,0,64,69,0,127,52,0,1,72,16,64,64,81,127,64,0,84,64,0,0,76,87,91,29,127,92,34,34,14,35,70,140,71,39,18,66,67,64,0,64,64,249,12,1,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,11,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,29,1,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program12="240,66,48,88,64,80,97,115,116,32,77,105,110,100,32,32,32,1,9,0,0,144,0,60,0,79,55,1,35,25,0,23,70,12,69,0,110,32,49,25,1,0,0,255,97,0,64,64,64,64,0,0,127,38,0,0,71,60,0,127,127,40,0,15,0,84,74,64,127,64,0,84,84,120,120,94,116,35,64,127,112,2,10,14,2,39,14,67,73,99,94,117,109,81,99,3,113,17,1,44,44,44,44,44,44,44,44,64,64,64,64,64,64,64,64,10,1,1,1,1,1,1,1,1,1,64,64,64,64,64,64,64,64,27,1,86,86,86,86,86,86,86,86,64,64,64,64,64,64,64,64,255,16,10,64,66,76,67,3,0,0,0,0,2,88,64,20,127,0,0,1,127,20,64,64,64,127,64,0,96,44,15,64,127,30,14,64,127,24,2,10,3,2,70,12,3,66,81,74,0,64,0,64,131,114,27,0,64,64,64,64,66,68,70,71,64,64,64,33,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program13="240,66,48,88,64,70,117,116,117,114,101,32,86,105,98,101,32,2,1,0,0,64,0,60,0,71,80,2,29,30,0,20,68,15,64,0,95,65,19,80,1,0,0,255,112,10,64,66,64,66,5,0,0,40,0,2,88,127,0,127,0,0,3,0,64,94,64,112,127,64,0,94,34,78,93,127,80,1,116,0,98,2,10,3,34,40,12,83,89,112,87,81,84,3,69,6,242,9,0,127,112,100,91,84,79,75,72,70,69,68,67,66,66,65,65,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program14="240,66,48,88,64,69,117,114,111,32,83,121,110,116,104,101,32,2,4,0,0,160,0,60,135,81,84,0,0,0,0,22,69,16,70,0,120,17,16,10,1,0,0,255,112,10,60,66,64,69,0,0,0,0,0,0,64,69,0,127,127,0,1,21,66,86,77,69,110,64,0,89,49,0,109,61,93,0,62,127,93,2,69,3,2,70,12,2,74,68,64,101,64,71,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,76,64,5,0,0,0,0,0,64,64,0,127,0,0,2,47,20,90,64,64,45,64,0,89,64,0,64,127,101,83,64,127,99,2,10,3,2,70,12,0,64,0,64,0,64,0,64,195,241,1,1,64,67,71,76,79,83,88,83,79,76,71,67,64,59,55,52,5,1,106,103,109,105,106,104,98,99,107,109,102,105,108,102,106,107,16,1,1,64,127,64,1,64,127,64,1,64,127,64,1,64,127,64,247"
                   bank6Program15="240,66,48,88,64,68,105,103,121,32,66,97,115,115,32,32,32,1,3,0,0,64,0,60,0,80,10,1,21,0,0,28,66,17,75,0,140,1,0,75,1,0,0,255,16,0,64,76,52,67,1,0,0,0,0,32,52,65,10,0,70,0,1,19,90,82,76,92,115,64,1,64,64,0,103,22,10,0,64,127,1,2,4,14,2,69,14,66,87,81,64,0,64,0,64,67,241,1,1,64,64,52,76,64,64,64,64,64,52,52,77,52,82,52,87,11,1,79,74,76,74,72,74,69,64,79,74,76,74,72,74,69,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank6Program16="240,66,48,88,64,84,104,117,110,100,101,114,32,32,32,32,32,1,8,0,0,64,0,60,0,23,40,0,1,5,0,23,70,15,71,0,65,65,36,80,5,0,0,255,112,10,64,76,64,69,6,25,0,0,0,0,64,64,0,127,0,127,0,0,8,67,86,104,115,64,1,102,44,1,30,0,30,1,122,0,118,35,0,3,2,70,12,98,88,65,74,71,76,39,84,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program1="240,66,48,88,64,83,113,117,97,114,101,32,67,111,109,112,32,2,0,0,0,64,0,60,135,72,20,0,27,23,0,23,67,15,64,0,150,65,52,0,1,0,0,255,112,10,57,66,52,68,1,0,0,0,0,1,64,71,0,127,127,0,1,88,52,19,89,96,127,64,0,84,44,48,108,68,70,0,9,93,24,35,70,137,2,68,12,81,94,98,84,83,64,67,64,67,241,13,1,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,17,1,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program2="240,66,48,88,64,75,114,97,122,121,32,65,114,112,121,32,50,1,8,0,0,64,0,60,135,56,90,0,36,77,0,20,64,15,64,0,131,193,36,73,1,0,0,255,112,10,64,66,83,69,5,0,0,20,0,0,40,84,0,127,127,0,3,15,70,70,64,69,127,64,0,88,64,0,20,0,0,0,38,0,16,18,54,133,17,109,12,3,116,119,31,71,71,98,111,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program3="240,66,48,88,64,83,119,101,101,112,32,80,97,100,32,32,32,1,6,0,0,64,0,60,0,65,59,1,29,40,0,20,68,10,63,0,60,1,2,100,5,0,0,255,112,0,69,66,64,64,1,0,127,38,0,0,64,57,0,70,70,0,0,14,77,94,64,84,127,64,0,89,30,118,120,36,118,45,64,127,118,34,10,14,2,51,14,117,71,99,94,71,72,81,82,67,241,13,1,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,11,1,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program4="240,66,48,88,64,83,117,98,32,66,97,115,115,32,32,32,32,1,3,0,0,64,0,60,0,40,0,0,0,0,0,20,75,8,71,0,160,0,1,80,3,0,0,255,48,10,64,66,40,69,2,0,0,0,0,0,64,64,0,127,0,0,1,6,54,69,64,77,116,64,0,88,85,0,48,127,94,0,16,127,52,2,70,3,2,70,12,69,69,85,64,98,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program5="240,66,48,88,64,80,104,101,110,111,109,101,110,111,110,32,32,2,2,0,0,64,0,60,0,98,40,0,19,41,2,0,64,3,76,0,135,0,1,80,1,0,0,255,72,0,64,66,76,68,5,43,0,23,0,49,64,103,0,127,127,0,1,54,56,64,79,64,127,64,0,86,44,0,56,127,22,0,7,100,7,2,32,14,2,68,14,18,109,81,94,0,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program6="240,66,48,88,64,82,101,97,100,121,32,50,32,65,105,114,32,1,4,0,0,160,0,60,0,81,52,0,38,93,1,20,64,15,64,0,140,1,0,90,1,0,0,255,112,10,64,66,52,66,5,41,97,33,0,0,70,99,0,67,82,0,1,43,85,70,64,46,127,64,65,79,64,9,0,0,0,0,89,81,32,0,0,3,2,70,12,0,64,67,64,99,76,83,76,195,242,11,1,35,99,58,64,104,87,73,112,85,81,24,85,104,64,68,63,12,1,64,69,18,96,64,64,71,110,45,107,34,97,64,91,50,64,10,0,127,1,1,1,127,1,1,1,1,1,90,1,127,1,1,1,255,112,10,64,66,52,69,2,76,81,22,0,33,58,77,0,127,127,0,1,77,20,57,64,64,40,64,64,79,64,0,64,127,0,0,0,0,0,2,10,3,2,70,12,0,64,0,64,0,64,0,64,195,242,1,1,52,52,64,52,88,52,52,52,64,52,52,52,52,52,52,52,15,1,127,127,1,127,127,1,127,127,1,127,127,1,127,1,127,1,5,1,64,64,64,64,82,64,64,64,64,64,64,1,64,127,64,64,247"
                   bank7Program7="240,66,48,88,64,88,45,77,111,100,32,80,101,114,99,32,32,1,8,0,0,64,0,60,139,90,25,1,0,0,0,22,68,15,70,0,139,129,4,80,1,0,0,255,112,10,64,76,64,1,3,35,0,0,0,2,88,40,0,127,0,0,1,127,1,64,64,64,127,64,0,96,34,0,0,0,0,0,64,0,48,35,0,3,32,59,12,37,64,98,20,18,127,81,76,195,241,22,1,62,67,75,56,29,8,5,17,47,69,74,68,72,71,67,44,24,1,63,65,67,62,55,49,49,52,60,65,67,65,66,66,65,59,15,0,84,58,54,64,78,88,90,84,69,57,55,58,56,56,58,70,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program8="240,66,48,88,64,66,114,105,116,105,115,104,79,114,103,97,110,2,5,0,0,64,0,60,0,40,0,0,0,0,0,20,64,15,64,0,184,1,34,40,0,0,0,255,112,10,64,66,64,64,5,0,0,44,0,2,52,64,0,127,74,0,1,127,20,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,76,3,2,76,12,2,70,87,14,99,64,67,64,64,249,29,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,30,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,11,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program9="240,66,48,88,64,56,48,39,115,32,66,97,115,115,32,32,32,1,3,0,0,64,0,60,0,40,0,0,0,0,0,6,69,6,69,0,96,0,17,78,1,0,0,255,120,10,64,66,52,64,1,50,0,0,0,1,52,64,0,127,127,35,0,0,21,99,67,79,127,64,0,84,44,0,60,25,10,0,20,98,10,2,40,3,2,68,12,53,52,71,84,55,32,81,81,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program10="240,66,48,88,64,77,105,110,46,68,101,97,108,32,32,32,32,2,4,0,0,96,0,60,0,74,27,0,33,38,0,20,70,15,64,0,138,1,2,70,1,0,0,255,176,10,64,66,67,66,4,47,40,20,0,1,71,71,0,127,84,1,1,78,20,67,64,64,125,64,64,84,64,13,27,0,0,0,64,127,0,2,71,3,2,70,12,34,64,1,64,66,64,99,64,195,241,15,1,64,1,64,1,64,64,64,64,1,64,64,1,64,1,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,176,10,64,66,64,66,4,46,40,20,0,1,71,70,0,127,73,9,1,78,67,66,64,64,118,64,64,84,64,0,64,127,0,0,85,58,101,2,10,3,2,70,12,34,64,1,64,66,64,99,64,195,241,15,1,64,1,64,1,64,64,1,64,1,64,64,1,64,1,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program11="240,66,48,88,64,65,115,116,114,97,108,32,86,111,120,32,32,1,1,0,0,64,0,60,0,85,70,1,27,70,1,20,64,15,67,0,120,1,20,100,3,0,0,255,112,10,64,66,64,71,5,0,0,60,0,2,64,64,13,127,78,0,2,32,42,81,64,64,127,64,0,94,44,46,69,36,72,40,77,127,77,2,82,131,2,64,12,3,73,98,64,50,64,64,64,67,48,5,1,64,66,69,66,64,64,64,64,64,64,64,64,127,64,64,64,13,1,64,50,117,77,64,64,64,64,64,64,64,64,64,64,64,64,15,1,18,81,25,89,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program12="240,66,48,88,64,82,101,122,32,76,101,97,100,32,32,32,32,1,2,0,0,64,0,60,0,40,0,0,0,0,0,20,67,15,68,0,120,0,19,80,1,0,0,255,48,10,64,66,64,68,0,0,0,0,0,1,52,66,1,127,0,0,0,15,60,80,79,102,127,64,0,74,64,23,80,0,10,1,64,127,10,2,10,3,2,72,12,3,64,81,94,83,64,67,64,67,241,9,1,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program13="240,66,48,88,64,83,111,102,116,32,66,114,97,115,115,32,32,2,1,0,0,64,0,60,0,41,0,0,39,50,1,0,73,15,67,0,120,0,4,80,1,0,0,255,112,0,61,66,64,66,0,0,127,0,0,0,64,64,0,127,118,3,0,0,0,97,82,88,127,64,0,74,44,14,54,70,46,2,64,127,45,2,20,14,2,70,14,16,71,81,127,99,79,0,60,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program14="240,66,48,88,64,67,80,85,32,84,97,108,107,32,32,32,32,1,4,0,0,64,0,55,0,86,58,1,29,29,0,20,72,10,73,0,120,1,16,99,5,0,0,255,64,0,64,66,64,64,0,0,0,38,0,0,57,69,3,104,80,0,0,51,9,81,64,74,127,64,0,64,64,111,42,0,115,27,66,119,89,34,54,14,2,69,14,84,102,99,83,71,94,81,89,195,241,4,1,64,73,80,80,89,99,115,121,127,127,114,103,100,87,76,64,12,0,117,73,32,124,95,94,101,103,77,112,110,89,97,88,85,102,6,1,64,68,69,71,76,71,64,68,64,76,71,69,68,71,69,69,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program15="240,66,48,88,64,80,104,117,110,107,32,66,97,115,115,32,32,1,3,0,0,64,0,60,0,40,0,0,0,0,0,20,68,15,68,0,110,1,2,80,1,12,0,255,112,10,64,66,40,69,5,0,0,54,0,0,76,64,2,127,96,0,1,8,74,94,86,103,127,64,0,92,46,0,94,0,10,0,13,90,13,2,10,3,2,70,12,81,64,80,84,0,64,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank7Program16="240,66,48,88,64,74,101,116,32,83,101,116,32,50,48,48,48,1,8,0,0,64,0,60,0,40,0,0,40,58,0,8,52,15,64,0,120,65,2,80,3,0,0,255,112,10,64,71,64,64,6,69,114,0,0,50,64,107,121,80,80,0,1,57,50,78,64,57,127,64,0,89,64,127,114,53,42,6,127,67,88,2,5,3,2,70,12,48,97,98,123,71,79,39,49,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank8Program1="240,66,48,88,64,80,111,108,121,52,48,48,32,32,32,32,32,0,0,0,0,64,0,60,0,40,0,0,47,20,0,26,70,10,66,0,130,64,16,80,1,0,0,255,112,0,70,66,52,71,0,0,127,0,0,0,64,57,0,115,90,10,1,39,88,64,72,94,127,64,0,64,54,0,0,0,0,0,120,0,100,2,30,14,18,72,14,81,94,3,67,53,59,67,64,134,241,11,0,96,81,68,60,56,53,51,49,48,47,46,45,44,43,42,42,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank8Program2="240,66,48,88,64,68,105,103,105,110,97,116,111,114,32,32,32,1,8,0,0,32,0,60,139,104,80,2,127,100,1,20,69,15,64,0,240,33,17,100,1,0,0,255,24,0,64,66,40,127,0,0,0,0,0,0,64,64,0,100,0,0,0,30,87,111,64,112,127,64,0,104,34,114,118,0,81,10,64,127,98,2,10,14,2,39,14,81,109,119,113,71,79,0,64,192,249,16,0,127,115,104,94,85,78,70,66,62,58,50,43,34,24,13,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,0,10,64,66,64,1,0,0,0,0,0,33,76,79,0,10,96,0,1,127,8,64,64,64,80,64,0,94,64,0,64,127,60,10,64,127,54,16,9,137,2,27,14,99,114,19,90,82,64,18,44,195,241,1,1,64,64,88,88,64,64,64,64,88,88,64,64,64,64,88,88,15,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank8Program3="240,66,48,88,64,76,105,103,104,116,32,80,97,100,32,32,32,2,6,0,0,64,0,60,0,100,90,2,39,35,0,19,67,24,67,0,120,0,2,100,5,0,0,255,112,10,59,66,64,66,2,70,52,0,0,2,83,70,0,127,127,2,3,127,10,1,64,64,127,64,0,89,34,90,127,127,116,75,64,127,110,2,29,3,2,68,12,18,67,98,84,99,74,19,69,67,254,29,0,127,107,89,80,73,68,65,64,64,63,60,55,48,39,21,1,6,1,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,13,1,127,112,96,80,64,64,64,64,64,64,64,64,80,96,112,127,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank8Program4="240,66,48,88,64,66,97,115,115,38,53,116,104,76,101,97,100,1,9,0,0,16,0,60,133,65,30,2,29,15,0,20,69,14,72,0,118,81,3,70,1,0,0,255,8,0,64,66,52,65,0,0,0,9,0,34,81,69,7,127,0,0,0,6,75,78,89,74,127,64,0,99,64,0,105,0,18,0,127,110,20,2,10,14,16,72,140,81,109,66,80,67,64,16,97,67,241,1,1,64,52,74,64,76,64,71,62,64,52,73,69,81,62,69,62,29,1,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,11,1,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,255,80,0,64,66,52,64,0,0,127,38,0,0,71,68,0,115,100,0,1,30,80,45,114,64,127,64,0,64,64,33,112,69,90,0,30,110,20,2,10,14,2,34,14,66,91,99,88,71,84,98,84,67,177,16,1,96,64,32,64,96,64,32,64,96,64,32,64,64,64,64,64,11,1,74,1,64,1,64,1,74,1,64,1,64,1,64,1,64,1,2,1,62,62,62,62,62,62,64,64,62,62,64,64,62,62,62,62,247"
                   bank8Program5="240,66,48,88,64,87,111,111,100,121,39,115,32,76,101,97,100,0,5,0,0,64,0,60,0,30,32,0,0,37,0,7,69,8,66,0,112,0,20,55,1,0,0,255,112,10,64,66,76,69,5,70,0,34,0,50,64,64,0,127,77,0,1,69,64,64,64,68,120,64,0,64,64,38,108,127,0,0,64,127,0,2,10,3,2,70,12,84,96,71,72,118,127,0,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank8Program6="240,66,48,88,64,70,105,108,116,101,114,32,77,117,122,105,107,1,4,0,0,32,0,60,136,101,32,1,0,0,0,26,69,24,71,0,124,81,16,80,3,0,0,255,56,10,64,66,64,64,0,0,0,0,0,1,52,68,0,89,98,0,1,60,100,64,64,88,127,64,0,79,44,0,84,0,84,0,64,127,80,2,3,3,2,21,12,66,91,99,94,81,84,82,72,195,241,1,1,40,74,40,62,64,52,64,74,40,62,65,52,40,47,52,47,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,6,1,64,42,76,42,76,52,71,64,73,54,64,52,40,74,52,84,255,48,0,64,66,40,112,3,10,0,0,0,32,40,1,0,127,20,0,3,60,10,64,64,64,127,64,0,104,49,0,64,127,127,0,64,127,82,33,0,3,16,42,134,0,1,5,29,3,127,83,127,193,113,10,1,64,64,64,64,84,69,64,64,64,64,64,64,79,64,64,64,11,1,12,12,12,34,127,127,34,12,64,64,64,64,127,127,64,64,1,1,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,247"
                   bank8Program7="240,66,48,88,64,84,105,109,101,90,111,110,101,32,83,70,88,2,8,0,0,64,0,60,0,79,70,1,43,82,1,12,62,15,68,0,120,0,1,80,1,0,0,255,64,0,64,76,64,65,3,2,0,0,0,1,40,71,0,127,22,0,0,89,45,64,64,74,127,64,1,84,64,0,111,0,0,0,29,127,0,34,0,14,34,30,14,32,102,23,118,39,74,81,79,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank8Program8="240,66,48,88,64,80,117,108,115,101,32,67,111,109,112,32,32,1,5,0,0,64,0,60,0,40,0,0,19,41,2,20,66,15,66,0,130,0,3,80,1,0,0,255,64,0,64,66,52,67,1,93,0,0,0,33,57,64,0,127,70,0,1,22,43,105,84,64,127,64,0,94,48,0,71,0,2,0,18,90,2,2,10,14,2,65,14,81,127,119,69,37,61,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank8Program9="240,66,48,88,64,86,111,99,111,100,101,114,32,69,110,115,32,1,10,0,0,112,0,60,0,55,32,1,27,30,0,0,70,24,71,0,120,1,2,80,3,0,0,255,112,10,64,66,64,69,0,0,119,0,0,1,0,0,127,0,40,64,100,30,0,64,20,2,64,50,127,0,0,64,64,0,64,127,0,0,64,127,45,2,38,11,2,70,2,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,64,49,79,1,127,43,92,49,77,38,89,1,125,55,74,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247"
                   bank8Program10="240,66,48,88,64,86,111,99,111,100,101,114,32,67,104,111,32,1,10,0,0,112,0,60,0,78,37,2,44,36,0,0,70,22,72,0,120,1,2,80,3,0,0,255,112,10,64,66,52,69,5,56,32,19,0,1,0,0,127,0,30,50,100,34,0,64,52,2,64,55,127,10,1,64,64,0,64,127,0,0,64,127,25,3,83,11,2,70,2,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247"
                   bank8Program11="240,66,48,88,64,86,111,99,111,100,101,114,32,87,97,104,32,1,10,0,0,112,0,60,0,55,21,1,42,44,1,0,69,24,69,0,200,65,5,80,1,0,0,255,112,10,64,66,64,69,4,61,40,0,0,1,0,0,127,0,46,64,100,30,0,64,10,0,64,30,127,40,0,64,64,54,63,3,10,0,64,127,38,34,60,134,2,70,2,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,64,49,79,1,127,43,92,49,77,38,89,1,125,55,74,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247"
                   bank8Program12="240,66,48,88,64,86,111,99,111,100,101,114,80,117,108,115,101,1,10,0,0,112,0,60,0,55,62,2,44,50,1,0,71,29,71,0,120,1,2,80,1,0,0,255,112,0,64,66,52,69,1,119,0,0,0,1,0,5,127,0,20,50,110,0,0,64,15,2,64,40,127,10,1,64,64,0,64,127,0,10,64,127,20,2,0,11,2,70,2,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,64,64,64,64,10,20,30,1,127,98,110,119,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247"
                   bank8Program13="240,66,48,88,64,86,111,105,99,101,67,104,97,110,103,101,114,2,10,0,0,112,0,60,0,78,0,0,44,32,0,4,64,22,70,0,120,0,5,80,1,0,0,255,176,0,64,66,52,69,7,64,0,45,0,1,0,0,127,0,20,0,100,50,1,127,38,0,64,58,115,0,1,64,64,0,64,127,0,0,64,127,30,2,60,11,2,70,2,127,127,127,127,127,127,127,127,127,110,100,110,127,127,127,127,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247"
                   bank8Program14="240,66,48,88,64,86,111,99,111,100,101,118,105,108,32,32,32,0,10,0,0,112,0,60,0,0,0,1,17,50,0,0,70,29,70,0,140,0,5,80,5,0,0,255,176,10,64,66,40,69,0,60,119,39,0,1,0,0,60,0,127,15,100,30,4,64,50,2,64,64,127,10,0,64,64,0,68,88,0,0,79,119,0,2,112,11,2,70,2,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,64,49,79,1,127,43,92,49,77,38,89,1,125,55,74,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247"
                   bank8Program15="240,66,48,88,64,65,117,100,105,111,73,110,32,73,78,73,84,0,11,0,0,64,0,60,136,40,0,0,0,0,0,20,64,15,64,0,124,193,5,60,1,0,0,255,144,10,64,66,64,69,7,64,0,0,0,2,88,50,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,40,40,0,40,0,40,127,127,2,74,137,2,59,14,81,64,71,2,19,127,0,127,67,241,11,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,144,10,64,66,64,69,7,64,0,0,0,2,88,50,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,40,40,0,40,0,40,127,127,2,74,137,2,59,14,81,64,71,2,19,127,0,127,67,241,11,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   bank8Program16="240,66,48,88,64,73,78,73,84,32,80,114,111,103,114,97,109,0,11,0,0,64,0,60,0,40,0,0,30,0,0,20,64,15,64,0,120,0,0,80,1,0,0,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,255,112,10,64,66,64,69,0,0,0,0,0,0,64,64,0,127,0,0,1,127,10,64,64,64,127,64,0,64,64,0,64,127,0,0,64,127,0,2,10,3,2,70,12,2,64,3,64,66,64,67,64,67,241,1,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,1,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,247"
                   selectedPreset="1" selectedBank="1" saveToRamEnabled="1" sendProgOnStartup="0"
                   clockSource="2" localMode="1"/>
</panel>
